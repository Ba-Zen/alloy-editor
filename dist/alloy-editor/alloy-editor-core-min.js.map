{"version":3,"sources":["webpack://AlloyEditor/webpack/bootstrap","webpack://AlloyEditor/external \"React\"","webpack://AlloyEditor/./src/components/base/button-state-classes.js","webpack://AlloyEditor/./src/components/base/button-command.js","webpack://AlloyEditor/external \"ReactDOM\"","webpack://AlloyEditor/./src/oop/lang.js","webpack://AlloyEditor/./src/components/base/button-style.js","webpack://AlloyEditor/./src/components/base/button-command-active.js","webpack://AlloyEditor/./src/components/base/widget-focus-manager.js","webpack://AlloyEditor/./src/components/buttons/button-commands-list.jsx","webpack://AlloyEditor/./src/components/base/button-keystroke.js","webpack://AlloyEditor/./src/components/buttons/button-dropdown.jsx","webpack://AlloyEditor/./src/components/base/button-action-style.js","webpack://AlloyEditor/./src/components/base/widget-dropdown.js","webpack://AlloyEditor/./src/components/base/widget-exclusive.js","webpack://AlloyEditor/./src/selections/selection-test.js","webpack://AlloyEditor/./src/components/base/widget-position.js","webpack://AlloyEditor/./src/components/base/widget-arrow-box.js","webpack://AlloyEditor/./src/components/base/toolbar-buttons.js","webpack://AlloyEditor/./src/components/buttons/button-table-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list-item.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list-item-remove.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list-header.jsx","webpack://AlloyEditor/./src/components/buttons/button-target-list.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-target-edit.jsx","webpack://AlloyEditor/./src/components/base/button-props.js","webpack://AlloyEditor/./src/components/buttons/button-link-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-autocomplete-list.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-command-list-item.jsx","webpack://AlloyEditor/./src/components/buttons/button-camera-image.jsx","webpack://AlloyEditor/./src/oop/oop.js","webpack://AlloyEditor/./src/components/toolbars/toolbar-styles.jsx","webpack://AlloyEditor/./src/components/toolbars/toolbar-add.jsx","webpack://AlloyEditor/./src/components/toolbars/index.js","webpack://AlloyEditor/./src/components/buttons/button-underline.jsx","webpack://AlloyEditor/./src/components/buttons/button-ul.jsx","webpack://AlloyEditor/./src/components/buttons/button-twitter.jsx","webpack://AlloyEditor/./src/components/buttons/button-table.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-row.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-remove.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-heading.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-column.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-cell.jsx","webpack://AlloyEditor/./src/components/buttons/button-superscript.jsx","webpack://AlloyEditor/./src/components/buttons/button-subscript.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles.jsx","webpack://AlloyEditor/./src/components/buttons/button-strike.jsx","webpack://AlloyEditor/./src/components/buttons/button-remove-format.jsx","webpack://AlloyEditor/./src/components/buttons/button-quote.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-justify.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-center.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align-right.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align-left.jsx","webpack://AlloyEditor/./src/components/buttons/button-outdent-block.jsx","webpack://AlloyEditor/./src/components/buttons/button-ol.jsx","webpack://AlloyEditor/./src/components/buttons/button-link.jsx","webpack://AlloyEditor/./src/components/buttons/button-italic.jsx","webpack://AlloyEditor/./src/components/buttons/button-indent-block.jsx","webpack://AlloyEditor/./src/components/buttons/button-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-right.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-left.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-center.jsx","webpack://AlloyEditor/./src/components/buttons/button-hline.jsx","webpack://AlloyEditor/./src/components/buttons/button-h2.jsx","webpack://AlloyEditor/./src/components/buttons/button-h1.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed.jsx","webpack://AlloyEditor/./src/components/buttons/button-code.jsx","webpack://AlloyEditor/./src/components/buttons/button-camera.jsx","webpack://AlloyEditor/./src/components/buttons/button-bold.jsx","webpack://AlloyEditor/./src/components/buttons/index.js","webpack://AlloyEditor/./src/components/main.jsx","webpack://AlloyEditor/./src/selections/selection-position.js","webpack://AlloyEditor/./src/selections/selection-arrowbox.js","webpack://AlloyEditor/./src/selections/selections.js","webpack://AlloyEditor/./src/oop/attribute.js","webpack://AlloyEditor/./src/oop/base.js","webpack://AlloyEditor/./src/components/uibridge/uibridge.js","webpack://AlloyEditor/./src/plugins/tabletools.js","webpack://AlloyEditor/./src/plugins/tableresize.js","webpack://AlloyEditor/./src/plugins/selectionkeystrokes.js","webpack://AlloyEditor/./src/plugins/placeholder.js","webpack://AlloyEditor/./src/plugins/pasteimages.js","webpack://AlloyEditor/./src/plugins/imagealignment.js","webpack://AlloyEditor/./src/plugins/embed.js","webpack://AlloyEditor/./src/plugins/dragresize_ie.js","webpack://AlloyEditor/./src/plugins/dragresize.js","webpack://AlloyEditor/./src/plugins/autolist.js","webpack://AlloyEditor/./src/plugins/autolink.js","webpack://AlloyEditor/./src/plugins/addimages.js","webpack://AlloyEditor/./src/plugins/index.js","webpack://AlloyEditor/./src/core/uicore.js","webpack://AlloyEditor/./src/core/tools.js","webpack://AlloyEditor/./src/core/table.js","webpack://AlloyEditor/./src/core/selection-region.js","webpack://AlloyEditor/./src/core/plugins.js","webpack://AlloyEditor/./src/core/link.js","webpack://AlloyEditor/./src/core/debounce.js","webpack://AlloyEditor/./src/core/index.js","webpack://AlloyEditor/./src/adapter/core.js","webpack://AlloyEditor/./src/adapter/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","window","React","length","writable","key","a","WrappedComponent","_WrappedComponent","_class","TypeError","this","__proto__","getPrototypeOf","apply","arguments","create","constructor","setPrototypeOf","_createClass","stateClasses","_lang2","isFunction","isActive","isDisabled","data","editor","props","execCommand","command","modifiesSelection","selectionChange","fire","ReactDOM","Symbol","iterator","Lang","isArray","toString","isBoolean","isNull","isNumber","isFinite","isObject","valueType","_typeof","isString","mix","receiver","supplier","toInt","parseInt","_get","style","parts","split","currentMember","config","shift","_style","CKEDITOR","elementPath","getStyle","checkActive","getCommand","state","TRISTATE_ON","Function","getOwnPropertyDescriptor","_refresh","event","_isValidTarget","target","_descendants","activeDescendantEl","_activeDescendant","document","activeElement","focusFirstChild","indexOf","focus","stopPropagation","preventDefault","action","_getFocusAction","type","_moveFocus","direction","onDismiss","keys","_getFocusMoveDirection","dismissAction","_getFocusDismissAction","dismiss","focusMoveDirection","_isValidKey","keyCode","dismissNext","dismissPrev","circular","next","prev","shifKey","element","tagName","toLowerCase","numDescendants","descendant","setAttribute","Math","max","min","domNode","_reactDom2","findDOMNode","descendants","querySelectorAll","priorityDescendants","Array","slice","forEach","item","getAttribute","push","bind","sort","b","concat","some","index","ButtonCommandsList","_react2","Component","createElement","className","onFocus","onKeyDown","handleKey","tabIndex","id","listId","role","_renderActions","commands","items","map","_buttonCommandListItem2","description","label","defaultProps","_widgetFocusManager2","nativeEditor","keystroke","commandName","random","exec","keystrokeFn","fn","addCommand","_defaultKeystrokeCommand","keystrokeHandler","keystrokes","setKeystroke","ButtonDropdown","children","getSelection","lock","removeStyle","applyStyle","unlock","assign","_this","_extends","dropdownTrigger","itemDropdown","nextProps","setState","obj","itemKey","tools","merge","expanded","toggleDropdown","toggleDirection","moveFocus","itemExclusive","filter","cancelExclusive","renderExclusive","requestExclusive","SelectionTest","embed","payload","selectionData","image","getName","isReadOnly","link","range","getRanges","isSelectionEmpty","Link","getFromSelection","getText","endOffset","equals","startContainer","endContainer","startOffset","table","Table","isEditable","text","selectionEmpty","region","getCommonAncestor","_temp","cancelAnimationFrame","_animationFrameId","attrs","viewPaneSize","dom","getViewPaneSize","x","left","y","top","width","eventPayload","editorEvent","nativeEvent","pos","pageX","endRect","startRect","SELECTION_BOTTOM_TO_TOP","_getXPoint","_getYPoint","SELECTION_TOP_TO_BOTTOM","eventX","right","abs","elementTarget","$","offsetTop","offsetHeight","bottom","gutter","offsetWidth","SELECTION_LEFT_TO_RIGHT","SELECTION_RIGHT_TO_LEFT","hasClass","startPoint","endPoint","domElement","setStyles","opacity","removeClass","_animate","addClass","isVisible","interactionPoint","getInteractionPoint","finalX","finalY","initialX","initialY","parseFloat","constrainToViewport","res","getConstrainedPosition","height","moveToPoint","xy","getWidgetXYPoint","callback","requestAnimationFrame","arrowBoxClasses","buttons","additionalProps","buttonProps","buttonCfg","filterExclusive","button","AlloyEditor","Buttons","cfg","mergeExclusiveProps","tabKey","trigger","mergeDropdownProps","ButtonTableEdit","rowsRef","createRef","colsRef","cols","rows","current","tableAttributes","inputName","_createTable","time","Date","now","rowsId","colsId","htmlFor","Strings","onChange","_handleChange","_handleKeyDown","placeholder","ref","columns","aria-label","onClick","border","cellPadding","cellSpacing","f","u","ButtonStylesList","blockStyles","inlineStyles","objectStyles","styles","STYLE_BLOCK","STYLE_INLINE","STYLE_OBJECT","_blockStyles","_inlineStyles","_objectStyles","removeStylesItem","showRemoveStylesItem","_buttonStylesListItemRemove2","_buttonDropdown2","_buttonStylesListHeader2","_renderStylesItems","_buttonStylesListItem2","activeStyle","ButtonStylesListItem","styleCfg","margin","_preview","buildPreview","dangerouslySetInnerHTML","__html","_onClick","_buttonActionStyle2","_buttonStyle2","ButtonStylesListItemRemove","_removeStyles","normal","removeBlocks","blockItem","blockStyle","ButtonsStylesListHeader","ButtonTargetList","listTargets","_renderListTargets","allowedLinkTargets","linkTargetDefault","linkTargetSelf","linkTargetBlank","linkTargetParent","linkTargetTop","targets","_getAllowedTargetItems","handleLinkTargetChange","selectedTarget","data-value","ButtonLinkTargetEdit","allowedTargets","aria-expanded","title","_buttonTargetList2","linkEdit","ButtonLinkEdit","linkInput","_getInitialState","manualSelection","_focusLinkInput","autocompleteDropdown","buttonClearLink","targetSelector","_handleLinkTargetChange","linkTarget","_buttonLinkTargetEdit2","dataFn","autocompleteDropdownProps","autocompleteSelected","handleLinkAutocompleteClick","_handleLinkAutocompleteClick","setAutocompleteState","_setAutocompleteState","term","linkHref","_buttonLinkAutocompleteList2","clearInput","_clearLink","clear","placeholderProp","env","ie","editLink","removeLink","disabled","_removeLink","remove","showTargetSelector","_handleLinkHrefChange","confirm","_isValidState","_updateLink","_props","defaultLinkTarget","href","initialLink","instance","focusLinkEl","setTimeout","advanceSelection","linkUtils","selection","bookmarks","createBookmarks","advance","selectBookmarks","selected","appendProtocol","linkAttrs","modifySelection","update","autocompleteUrl","customIndexStart","_buttonProps2","_widgetDropdown2","ButtonLinkAutocompleteList","clearTimeout","_timeout","_updateItems","delay","_renderAutocompleteItems","nextState","url","Promise","resolve","then","ButtonEmbedEdit","getInitialState","selectedElement","getSelectedElement","findOne","clearLinkStyle","deleteEmbed","data-type","_removeEmbed","_embedLink","getAscendant","ButtonCommandListItem","_getClassName","icon","_buttonCommand2","ButtonCameraImage","refs","buttonTakePhoto","_stream","stop","getVideoTracks","track","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","video","audio","_handleStreamSuccess","_handleStreamError","takePhoto","videoEl","videoContainer","canvasEl","canvasContainer","context","getContext","_videoHeight","videoWidth","drawImage","imgURL","toDataURL","el","createFromHtml","insertElement","error","alert","stream","addEventListener","videoHeight","isNaN","mozSrcObject","src","URL","webkitURL","createObjectURL","play","protoProps","staticProps","supplierProto","receiverProto","superclass","ToolbarStyles","_updatePosition","prevProps","prevState","currentSelection","_getCurrentSelection","getArrowBoxClassesFn","_getSelectionFunction","getArrowBoxClasses","cssClasses","getToolbarButtons","selectionType","data-tabindex","selectionFn","selectionFunction","selections","result","testFn","test","setPositionFn","setPosition","updatePosition","show","_widgetArrowBox2","_widgetExclusive2","_widgetPosition2","_toolbarButtons2","ToolbarAdd","isContentEditable","_getButtons","_getToolbarClassName","add","cssClass","offsetLeft","clientRect","editable","getClientRect","position","gutterExclusive","floor","cancelAnimation","_toolbarAdd2","_toolbarStyles2","ButtonUnderline","getStateClasses","underline","aria-pressed","CTRL","_buttonKeystroke2","_buttonStateClasses2","ButtonUnorderedlist","bulletedlist","ButtonTwitter","_getHref","class","twitter","handleClick","selectedText","getSelectedText","via","twitterHref","ButtonTable","_buttonTableEdit2","ButtonTableRow","buttonCommandsList","buttonCommandsListId","_buttonCommandsList2","_getCommands","row","aria-owns","rowInsertBefore","rowInsertAfter","rowDelete","ButtonTableRemove","deleteTable","_removeTable","ButtonTableHeading","activeHeading","getHeading","activeHeadingIntro","headers","activeHeadingLabel","headersNone","headersRow","headersColumn","headersBoth","ButtonTableColumn","column","columnInsertBefore","columnInsertAfter","columnDelete","ButtonTableCell","cell","cellInsertBefore","cellInsertAfter","cellDelete","cellMerge","cellMergeDown","cellMergeRight","cellSplitHorizontal","cellSplitVertical","ButtonSuperscript","superscript","ButtonSubscript","subscript","ButtonStyles","buttonStylesList","_getStyles","_checkActive","_buttonStylesList2","styleConfig","h1","h2","formatted","cite","code","ButtonStrike","strike","ButtonRemoveFormat","removeformat","ButtonQuote","quote","ButtonParagraphJustify","alignJustify","_buttonCommandActive2","ButtonParagraphCenter","alignCenter","ButtonParagraphAlignRight","alignRight","ButtonParagraphAlignLeft","alignLeft","ButtonOutdentBlock","outdent","ButtonOrderedList","numberedlist","ButtonLink","mergeButtonCfgProps","_buttonLinkEdit2","_requestExclusive","ButtonItalic","italic","ButtonIndentBlock","indent","ButtonImage","fileInput","accept","_onInputChange","display","click","inputEl","files","reader","FileReader","file","onload","imageFiles","imageData","readAsDataURL","ButtonImageAlignRight","ButtonImageAlignLeft","ButtonImageAlignCenter","ButtonHline","horizontalrule","ButtonH2","ButtonH1","ButtonEmbed","_buttonEmbedEdit2","SHIFT","ButtonCode","ButtonCamera","_buttonCameraImage2","location","protocol","cameraDisabled","camera","ButtonBold","bold","Z","h","g","v","_","E","O","w","k","C","T","S","P","D","I","j","R","A","K","N","M","L","F","H","z","B","U","W","q","G","V","Y","X","J","Q","ee","_buttonBold2","_buttonCamera2","_buttonCode2","_buttonEmbed2","_buttonH2","_buttonH4","_buttonHline2","_buttonImageAlignCenter2","_buttonImageAlignLeft2","_buttonImageAlignRight2","_buttonImage2","_buttonIndentBlock2","_buttonItalic2","_buttonLink2","_buttonOl2","_buttonOutdentBlock2","_buttonParagraphAlignLeft2","_buttonParagraphAlignRight2","_buttonParagraphCenter2","_buttonParagraphJustify2","_buttonQuote2","_buttonRemoveFormat2","_buttonStrike2","_buttonStyles2","_buttonSubscript2","_buttonSuperscript2","_buttonTableCell2","_buttonTableColumn2","_buttonTableHeading2","_buttonTableRemove2","_buttonTableRow2","_buttonTable2","_buttonTwitter2","_buttonUl2","_buttonUnderline2","UI","hidden","on","_onEditorInteraction","_onActionPerformed","_onEditorKey","_mousedownListener","_setUIHidden","_keyDownListener","debounce","eventsDelay","message","_getAvailableToolbarsMessage","ariaUpdate","_ariaUpdateTemplates","template","_getAriaUpdates","ariaUpdates","noToolbar","ariaUpdateNoToolbar","oneToolbar","ariaUpdateOneToolbar","manyToolbars","ariaUpdateManyToolbars","toolbarsNodeList","toolbarNames","toolbar","_getAriaUpdateTemplate","output","toolbars","join","replace","removeEventListener","detach","Toolbars","_onDismissToolbarFocus","getSelectionData","domEvent","altKey","targetNode","node","contains","DEFAULT_GUTTER","centerToolbar","rect","toolbarNode","halfNodeWidth","scrollPosition","getScrollPosition","widgetXY","SelectionSetPosition","SelectionGetArrowBoxClasses","Selections","_selectionTest2","_selectionPosition2","_selectionArrowbox2","Attribute","__config__","__ATTRS__","attr","currentAttr","ATTRS","_isInitialized","_init","curValue","_callStringOrFunction","set","readOnly","writeOnce","validator","setter","stringOrFunction","args","hasDefaultValue","hasPassedValueViaConfig","valueFn","Base","init","_attribute2","_callChain","destroy","wat","arr","ctor","reverse","plugins","beforeInit","originalUIAddFn","ui","definition","typeHandler","handlers","registerBridgeButton","__processingPlugin__","plugin","cellNodeRegex","createDef","def","extend","contextSensitive","refresh","path","td","th","TRISTATE_OFF","TRISTATE_DISABLED","addCmd","cmd","addFeature","lang","requiredContent","placeCursorInCell","deleteRows","selectionOrRow","cells","getSelectedCells","buildTableMap","startRowIndex","getParent","rowIndex","lastCell","endRowIndex","rowSpan","rowsToDelete","mapRow","cellRowIndex","nextMapRow","insertAfter","append","colSpan","cursorPosition","parentNode","insertRow","selectionOrCell","startColIndex","endColIndex","firstCell","firstRowCells","insertColumn","deleteCells","cellsToDelete","cellToFocus","focusedCell","tr","last","database","setMarker","getPrevious","getCustomData","getNext","clearAllMarkers","getLast","getChild","getChildCount","allowedContent","mergeCells","isDetect","newCell","newRowSpan","newCellRowSpan","newRowIndex","colIndex","cellInRow","ceil","candidateCell","newCellTr","newCellRow","clone","insertBefore","cellsInSameRow","appendBogus","removeAttribute","newColSpan","newCellColSpan","cellsInSameCol","tableMap","oCol","insertCell","ranges","retval","moveOutOfCellGuard","NODE_ELEMENT","collapsed","startNode","nearestCell","walker","guard","is","dtd","parent","doc","getDocument","startRow","endRow","cloneRow","nextRow","newRow","getCellColIndex","isStart","rowCells","mapCell","getColumnsIndices","Infinity","startCol","lastCol","cloneCol","nextCol","nextCell","startElement","getStartElement","trimCell","bogus","getBogus","trim","placeAtEnd","docInner","docOuter","version","selectNodeContents","collapse","select","oRow","mergeDirection","commonAncestor","mapHeight","mapWidth","startColumn","targetCell","rowspan","colspan","er","lastRowIndex","totalRowSpan","totalColSpan","frag","documentFragment","dimension","cellFirstChild","getFirst","getChildren","count","isBlockBoundary","br","whitespaces","moveChildren","setHtml","trs","nodeList","tailTr","getItem","aRows","aMap","oCell","iColSpan","iRowSpan","rs","cs","pxUnit","cssLength","requires","resizer","attachListener","isInline","evt","getTarget","pillars","getPageOffset","move","cancel","setCustomData","pillarIndex","rtl","getComputedStyle","$tr","cellsCount","$elected","$rows","maxCells","len","tbody","tBodies","tbodyPosition","getDocumentPosition","pillarLeft","pillarRight","pillarWidth","nextTd","getBorderWidth","clearPillarsCache","pillar","positionX","columnResizer","attachTo","getWidth","clientWidth","side","computed","borderMap","thin","medium","thick","isResizing","currentShift","leftSideCells","rightSideCells","leftShiftBoundary","rightShiftBoundary","resizeEnd","setOpacity","leftCell","rightCell","leftOldWidth","rightOldWidth","tableWidth","sizeShift","setStyle","removeCustomData","removeListener","onMouseDown","columnIndex","leftColumnCells","rightColumnCells","leftMinSize","Number","MAX_VALUE","rightMinSize","onMouseMove","onMouseUp","getDocumentElement","targetPillar","getBody","posX","resizerNewPosition","round","dest","relatedTarget","toElement","selectionKeystrokes","selectionKeystroke","brFiller","needsBrFiller","enterModeEmptyValue","1","2","3","_checkEmptyData","_removePlaceholderClass","once","editableNode","innerHtml","innerHTML","enterMode","placeholderClass","_onPaste","clipboardData","pastedData","listenerData","imageFile","getAsFile","IMAGE_ALIGNMENT","ALIGN_VALUES","CENTERED_IMAGE_STYLE","getImageAlignment","imageAlignment","every","styleCheck","vendorPrefixes","vendorPrefix","removeImageAlignment","afterInit","self","refreshCommands","lastElement","REGEX_HTTP","REGEX_DEFAULT_LINK","DEFAULT_AE_EMBED_URL_TPL","DEFAULT_AE_EMBED_WIDGET_TPL","DEFAULT_AE_EMBED_DEFAULT_LINK_TPL","AE_EMBED_URL_TPL","embedUrlTemplate","AE_EMBED_WIDGET_TPL","embedWidgetTpl","AE_EMBED_DEFAULT_LINK_TPL","embedLinkDefaultTpl","insertHtml","widgets","mask","widget","jsonp","encodeURIComponent","response","html","createATag","msg","aTagHtml","upcast","embedWidgetUpcastFn","attributes","dataValue","widgetElement","addElementCallback","FILTER_SKIP_TREE","alignmentsObj","center","cursor","both","scale","regexPercent","hidpi","icons","imageScaleResize","initOn","classRegex","alignClasses","image2_alignClasses","captionedClass","image2_captionedClass","helpers","image2","alt","hasCaption","caption","ready","checkHasNaturalRatio","wrapper","align","alignElement","setData","image2_disableResizer","inline","imageOrLink","oldResizeWrapper","resizeWrapper","nativeEvt","newWidth","newHeight","updateData","moveDiffX","moveDiffY","factor","startX","screenX","startY","screenY","startWidth","startHeight","clientHeight","listeners","cursorClass","attachToDocuments","collection","globalDoc","pop","setAttributes","selectElement","getStyleableElement","figcaption","figure","classes","img","contentTransformations","features","checkFeature","contenteditable","data-cke-saved-src","oldData","dimensions","downcast","attrsHolder","replaceWith","parseCssText","wrapWith","htmlParser","float","isEmpty","writeCssText","draggable","editables","selector","getClasses","RegExp","repository","parseElementClasses","getLabel","pathName","styleableElements","isCenterWrapper","validChildren","div","child","isLinkedOrStandaloneImage","ENTER_P","match","onLoad","addCss","natural","getNatural","naturalWidth","naturalHeigh","Image","heigh","IMAGE_HANDLES","POSITION_ELEMENT_FN","bl","handle","box","positionElement","bm","lm","tl","tm","rm","isFirefox","documentElement","enablePlugin","resizeTimeout","Resizer","snapToSize","mouseDownListener","isHandle","initDrag","getType","SELECTION_NONE","hide","resizeElement","getElementById","container","preview","appendChild","handles","handleName","createHandle","classList","otherImages","getElementsByTagName","splice","getBoundingBox","body","showHandles","elements","getElementsByClassName","hideHandles","removeChild","drag","DragEvent","onStart","showPreview","isDragging","onDrag","calculateSize","updatePreview","previewBox","updateHandles","onRelease","hidePreview","onComplete","resizeComplete","start","backgroundImage","delta","ratio","others","other","String","startPos","clientX","clientY","events","mousemove","keydown","mouseup","currentPos","shiftKey","ctrl","ctrlKey","which","release","ctx","getBoundingClientRect","pageXOffset","pageYOffset","DEFAULT_CONFIG","regex","_onKeyDown","_checkForBackspaceAndUndo","bullet","_getListConfig","configRegex","autolist","textContainer","substring","regexLen","autolistCfg","regexItem","_createList","listConfig","setText","userAgent","DELIMITERS","REGEX_LAST_WORD","REGEX_URL","_onKeyUp","_getLastWord","offset","previousText","_currentKeyCode","lastChild","previousNode","_startContainer","_offset","lastWord","_isValidURL","_ckLink","_replaceContentByLink","content","createRange","setStart","setEnd","ckLink","linkNode","_subscribeToKeyEvent","nextEditableNode","getNextEditableNode","nextNode","getNextNode","caretOffset","newRange","setEndAfter","isIE","_onDragEnter","_onDragOver","_onDragDrop","_handleFiles","_processFile","createSelectionFromPoint","dataTransfer","_preventEvent","bin","addimages","autolink","dragresize","dragresizeie","imagealignment","pasteimages","selectionkeystrokes","tableresize","tabletools","ariaState","ariaElement","_createAriaElement","uiTasksTimeout","uicore","timeout","handleUI","allowEsc","handleAria","handleMouseLeave","found","aeUINodes","focusHandler","statusElement","urlTemplate","urlParams","errorCallback","callbackKey","getNextNumber","jsonpCallbacks","cleanUp","scriptElement","simulate","eventInstance","createEvent","initEvent","dispatchEvent","IE_NON_DIRECTLY_EDITABLE_ELEMENT","col","colgroup","tfoot","thead","_editor","HEADING_BOTH","HEADING_COL","HEADING_NONE","HEADING_ROW","_createElement","setHeading","heading","moveToPosition","POSITION_AFTER_START","webkit","shrink","hasAttribute","rowHeadingSettings","tHead","colHeadingSettings","nodeName","headingSettings","POSITION_BEFORE_START","tableHead","tableBody","getElementsByTag","tableHeading","hadColHeading","needColHeading","needRowHeading","tableFirstRow","tableFirstRowChildCount","renameNode","createTHead","previousFirstRow","newFirstRow","newFirstRowChildCount","headingCommands","tableUtils","SelectionRegion","createSelectionFromRange","endX","endY","end","caretPositionFromPoint","offsetNode","caretRangeFromPoint","selectRanges","createTextRange","endRange","duplicate","setEndPoint","getCaretRegion","bookmarkNodeEl","scrollPos","getNative","getSelectionRegion","getClientRectsRegion","getSelectionDirection","nativeSelection","defaultRect","clientRects","getClientRects","rangeCount","getRangeAt","anchorNode","compareDocumentPosition","focusNode","anchorOffset","focusOffset","Node","DOCUMENT_POSITION_PRECEDING","load","override","pluginsLoad","names","scope","pluginName","require","methodName","originalPluginMethod","phase","REGEX_BOOKMARK_SCHEME","REGEX_EMAIL_SCHEME","REGEX_URI_SCHEME","moveToElementEditEnd","whitespace","URI","insertNode","_getCompleteURI","data-cke-saved-href","applyToRange","SHRINK_TEXT","alwaysRemoveElement","uri","removeAttrs","setAttrs","removeAttributes","debounceHandle","callFn","callContext","startIndex","callArgs","selectionRegion","Core","_oop2","_base2","initializer","removePlugins","extraPlugins","pasteFromWordRemoveStyles","pasteFromWordRemoveFontStyles","edge","_addReadOnlyLinkClickListener","loadLanguageResources","_renderUI","destructor","_destroyed","_editorUIElement","unmountComponentAtNode","_clearSelections","empty","getWindow","removeAllRanges","_defaultReadOnlyClickFn","mouseEvent","hasCtrlKey","metaKey","shouldOpen","_redirectLink","_getNativeEditor","open","editorUIElement","_mainUI","render","_main2","_toElement","_validateAllowedContent","_validateToolbars","enableContentEditable","srcNode","uiNode","implementOn","BRIDGE_BUTTONS","implementEventTarget","_core2","getBasePath","ALLOYEDITOR_BASEPATH","scripts","regexBasePath","getButtons","reduce","acc","val","getUrl","resource","basePath","timestamp","charAt","_langResourceRequested","languages","language","userLanguage","locale","scriptLoader","loaded","buttonName"],"mappings":"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","file":"alloy-editor-core-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 100);\n","(function() { module.exports = window[\"React\"]; }());","import Lang from '../../oop/lang';\n\n/**\n * ButtonStateClasses is a mixin that decorates the domElement of a component\n * with different CSS classes based on the current state of the element.\n *\n * To check for state, the component can expose the following methods:\n * - `Function` **isActive** to check the active state\n * - `Function` **isDisabled** to check the disabled state\n *\n * @class ButtonStateClasses\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Returns the list of state classes associated to the current element's state, according\n     * to the results of the isActive and isDisabled methods.\n     *\n     * @instance\n     * @memberof ButtonStateClasses\n     * @method getStateClasses\n     * @return {String} A string with the state CSS classes.\n     */\n    getStateClasses() {\n        var stateClasses = '';\n\n        // Check for active state\n        if (Lang.isFunction(this.isActive) && this.isActive()) {\n            stateClasses += 'ae-button-pressed';\n        }\n\n        // Check for disabled state\n        if (Lang.isFunction(this.isDisabled) && this.isDisabled()) {\n            stateClasses += ' ae-button-disabled';\n        }\n\n        return stateClasses;\n    }\n};","/**\n * ButtonCommand is a mixin that executes a command via CKEDITOR's API.\n *\n * @class ButtonCommand\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Executes a CKEditor command and fires `actionPerformed` event.\n     *\n     * @instance\n     * @memberof ButtonCommand\n     * @param {Object=} data Optional data to be passed to CKEDITOR's `execCommand` method.\n     * @method execCommand\n     */\n    execCommand(data) {\n        var editor = this.props.editor.get('nativeEditor');\n\n        editor.execCommand(this.props.command, data);\n\n        if (this.props.modifiesSelection) {\n            editor.selectionChange(true);\n        }\n\n        editor.fire('actionPerformed', this);\n    }\n};","(function() { module.exports = window[\"ReactDOM\"]; }());","/**\n * Provides core language utilities.\n *\n * @class Lang\n */\nconst Lang = {\n    /**\n     * Check if the passed value is an array.\n     *\n     * @memberof Lang\n     * @method isArray\n     * @param {Any} value The value which have to be checked.\n     * @return {Boolean} True if the passed value is an array, false otherwise.\n     * @static\n     */\n    isArray: function(value) {\n        return Object.prototype.toString.call(value) === '[object Array]';\n    },\n\n    /**\n     * Check if the passed value is boolean.\n     *\n     * @memberof Lang\n     * @method isBoolean\n     * @param {Any} value The value which have to be checked.\n     * @return {Boolean} True if the passed value is boolean, false otherwise.\n     * @static\n     */\n    isBoolean: function(value) {\n        return typeof value === 'boolean';\n    },\n\n    /**\n     * Check if the passed value is a function.\n     *\n     * @memberof Lang\n     * @method isFunction\n     * @param {Any} value The value which have to be checked.\n     * @return {Boolean} True if the passed value is a function, false otherwise.\n     * @static\n     */\n    isFunction: function(value) {\n        return typeof(value) === 'function';\n    },\n\n    /**\n     * Check if the passed value is NULL.\n     *\n     * @memberof Lang\n     * @method isNull\n     * @param {Any} value The value which have to be checked.\n     * @return {Boolean} True if the passed value is NULL, false otherwise.\n     * @static\n     */\n    isNull: function(value) {\n        return value === null;\n    },\n\n    /**\n     * Check if the passed value is number.\n     *\n     * @memberof Lang\n     * @method isNumber\n     * @param {Any} value The value which have to be checked.\n     * @return {Boolean} True if the passed value is number, false otherwise.\n     * @static\n     */\n    isNumber: function(value) {\n        return typeof value === 'number' && isFinite(value);\n    },\n\n    /**\n     * Check if the passed value is an object\n     *\n     * @memberof Lang\n     * @method isObject\n     * @param {Any} value The value which have to be checked.\n     * @return {Boolean} True if the passed value is an object, false otherwise.\n     * @static\n     */\n    isObject: function(value) {\n        var valueType = typeof value;\n\n        return (value && (valueType === 'object' || Lang.isFunction(value)));\n    },\n\n    /**\n     * Check if the passed value is a string.\n     *\n     * @memberof Lang\n     * @method isString\n     * @param {Any} value The value which have to be checked.\n     * @return {Boolean} True if the passed value is a string, false otherwise.\n     * @static\n     */\n    isString: function(value) {\n        return typeof value === 'string';\n    },\n\n    /**\n     * Adds all properties from the supplier to the receiver.\n     * The function will add all properties, not only these owned by the supplier.\n     *\n     * @memberof Lang\n     * @method mix\n     * @param {Object} receiver The object which will receive properties.\n     * @param {Object} supplier The object which provides properties.\n     * @return {Object} The modified receiver.\n     * @static\n     */\n    mix: function(receiver, supplier) {\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var key in supplier) {\n            if (hasOwnProperty.call(supplier, key)) {\n                receiver[key] = supplier[key];\n            }\n        }\n    },\n\n    /**\n     * Converts value to Integer.\n     *\n     * @memberof Lang\n     * @method toInt\n     * @param {Any} value The value which have to be converted to Integer.\n     * @return {Integer} The converted value.\n     * @static\n     */\n    toInt: function(value) {\n        return parseInt(value, 10);\n    }\n};\n\nexport default Lang;","import Lang from '../../oop/lang.js'\n\n/**\n * ButtonStyle is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonStyle\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n     *\n     * @instance\n     * @memberof ButtonStyle\n     * @method componentWillMount\n     */\n    componentWillMount() {\n        if (Lang.isFunction(super.componentWillMount)) {\n            super.componentWillMount();\n        }\n\n        var style = this.props.style;\n\n        if (Lang.isString(style)) {\n            var parts = style.split('.');\n            var currentMember = this.props.editor.get('nativeEditor').config;\n            var property = parts.shift();\n\n            while (property && Lang.isObject(currentMember) && Lang.isObject(currentMember[property])) {\n                currentMember = currentMember[property];\n                property = parts.shift();\n            }\n\n            if (Lang.isObject(currentMember)) {\n                style = currentMember;\n            }\n        }\n\n        this._style = new CKEDITOR.style(style);\n    }\n\n    /**\n     * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n     *\n     * @instance\n     * @memberof ButtonStyle\n     * @method componentWillUnmount\n     */\n    componentWillUnmount() {\n        if (Lang.isFunction(super.componentWillUnmount)) {\n            super.componentWillUnmount();\n        }\n\n        this._style = null;\n    }\n\n    /**\n     * Returns instance of CKEDITOR.style which represents the current button style.\n     *\n     * @instance\n     * @memberof ButtonStyle\n     * @method getStyle\n     * @return {CKEDITOR.style} The current style representation.\n     */\n    getStyle() {\n        return this._style;\n    }\n\n    /**\n     * Checks if style is active in the current selection.\n     *\n     * @instance\n     * @memberof ButtonStyle\n     * @method isActive\n     * @return {Boolean} True if style is active, false otherwise.\n     */\n    isActive() {\n        var result;\n\n        var editor = this.props.editor.get('nativeEditor');\n\n        var elementPath = editor.elementPath();\n\n        result = this.getStyle().checkActive(elementPath, editor);\n\n        return result;\n    }\n};","/**\n * ButtonCommandActive is a mixin that provides an `isActive` method to determine if\n * a context-aware command is currently in an active state.\n *\n * @class ButtonCommandActive\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Checks if the command is active in the current selection.\n     *\n     * @instance\n     * @memberof ButtonCommandActive\n     * @method isActive\n     * @return {Boolean} True if the command is active, false otherwise.\n     */\n    isActive() {\n        var editor = this.props.editor.get('nativeEditor');\n\n        var command = editor.getCommand(this.props.command);\n\n        return command ? command.state === CKEDITOR.TRISTATE_ON : false;\n    }\n};","import Lang from '../../oop/lang.js';\nimport ReactDOM from 'react-dom';\n\nvar DIRECTION_NONE = 0;\nvar DIRECTION_NEXT = 1;\nvar DIRECTION_PREV = -1;\n\nvar ACTION_NONE = 0;\nvar ACTION_MOVE_FOCUS = 1;\nvar ACTION_DISMISS_FOCUS = 2;\n\n/**\n * WidgetFocusManager is a mixin that provides keyboard navigation inside a widget. To do this,\n * it exposes the following props and methods:\n *\n * @class WidgetFocusManager\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        if (Lang.isFunction(super.componentDidMount)) {\n            super.componentDidMount();\n        }\n\n        this._refresh();\n    }\n\n    /**\n     * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n     * Refreshes the descendants list.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method componentDidUpdate\n     */\n    componentDidUpdate() {\n        if (Lang.isFunction(super.componentDidUpdate)) {\n            super.componentDidUpdate();\n        }\n\n        this._refresh();\n    }\n\n    /**\n     * Focuses the current active descendant.\n     *\n     * Several Widgets can be nested in a component hierarchy by attaching this focus method to\n     * the widget DOM node, transferring the DOM focus control to the inner FocusManager.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method focus\n     */\n    focus(event) {\n        if (!event || this._isValidTarget(event.target)) {\n            if (this._descendants && this._descendants.length) {\n                var activeDescendantEl = this._descendants[this._activeDescendant];\n                // When user clicks with the mouse, the activeElement is already set and there\n                // is no need to focus it. Focusing of the active descendant (usually some button) is required\n                // in case of keyboard navigation, because the focused element might be not the first button,\n                // but the div element, which contains the button.\n                if (document.activeElement !== activeDescendantEl && !this.props.focusFirstChild) {\n                    if (this._descendants.indexOf(document.activeElement) === -1) {\n                        activeDescendantEl.focus();\n                    }\n                }\n\n                if (event) {\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }\n        }\n    }\n\n    /**\n     * Handles the key events on a DOM node to execute the appropriate navigation when needed.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @param {Object} event The Keyboard event that was detected on the widget DOM node.\n     * @method handleKey\n     */\n    handleKey(event) {\n        if (this._isValidTarget(event.target) && this._descendants) {\n            var action = this._getFocusAction(event);\n\n            if (action.type) {\n                event.stopPropagation();\n                event.preventDefault();\n\n                if (action.type === ACTION_MOVE_FOCUS) {\n                    this._moveFocus(action.direction);\n                }\n\n                if (action.type === ACTION_DISMISS_FOCUS) {\n                    this.props.onDismiss(action.direction);\n                }\n            }\n        }\n    }\n\n    /**\n     * Moves the focus among descendants in the especified direction.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method moveFocus\n     * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n     */\n    moveFocus(direction) {\n        direction = Lang.isNumber(direction) ? direction : 0;\n\n        this._moveFocus(direction);\n    }\n\n    /**\n     * Returns the action, if any, that a keyboard event in the current focus manager state\n     * should produce.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method _getFocusAction\n     * @param {object} event The Keyboard event.\n     * @protected\n     * @return {Object} An action object with type and direction properties.\n     */\n    _getFocusAction(event) {\n        var action = {\n            type: ACTION_NONE\n        };\n\n        if (this.props.keys) {\n            var direction = this._getFocusMoveDirection(event);\n\n            if (direction) {\n                action.direction = direction;\n                action.type = ACTION_MOVE_FOCUS;\n            }\n\n            var dismissAction = this._getFocusDismissAction(event, direction);\n\n            if (dismissAction.dismiss) {\n                action.direction = dismissAction.direction;\n                action.type = ACTION_DISMISS_FOCUS;\n            }\n        }\n\n        return action;\n    }\n\n    /**\n     * Returns the dismiss action, if any, the focus manager should execute to yield the focus. This\n     * will happen in any of these scenarios if a dismiss callback has been specified:\n     * - A dismiss key has been pressed\n     * - In a non-circular focus manager, when:\n     *     - The active descendant is the first one and a prev key has been pressed.\n     *     - The active descendant is the last one and a next key has been pressed.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method _getFocusDismissAction\n     * @param {Number} focusMoveDirection The focus movement direction (if any).\n     * @param {Object} event The Keyboard event.\n     * @protected\n     * @return {Object} A dismiss action with dismiss and direction properties.\n     */\n    _getFocusDismissAction(event, focusMoveDirection) {\n        var dismissAction = {\n            direction: focusMoveDirection,\n            dismiss: false\n        };\n\n        if (this.props.onDismiss) {\n            if (this._isValidKey(event.keyCode, this.props.keys.dismiss)) {\n                dismissAction.dismiss = true;\n            }\n            if (this._isValidKey(event.keyCode, this.props.keys.dismissNext)) {\n                dismissAction.dismiss = true;\n                dismissAction.direction = DIRECTION_NEXT;\n            }\n            if (this._isValidKey(event.keyCode, this.props.keys.dismissPrev)) {\n                dismissAction.dismiss = true;\n                dismissAction.direction = DIRECTION_PREV;\n            }\n\n            if (!dismissAction.dismiss && !this.props.circular && focusMoveDirection) {\n                dismissAction.dismiss = (\n                    focusMoveDirection === DIRECTION_PREV && this._activeDescendant === 0 ||\n                    focusMoveDirection === DIRECTION_NEXT && this._activeDescendant === this._descendants.length - 1\n                );\n            }\n        }\n\n        return dismissAction;\n    }\n\n    /**\n     * Returns the direction, if any, in which the focus should be moved. In presence of the\n     * shift key modifier, the direction of the movement is inverted.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method _getFocusMoveDirection\n     * @param {Object} event The Keyboard event.\n     * @protected\n     * @return {Number} The computed direction of the expected focus movement.\n     */\n    _getFocusMoveDirection(event) {\n        var direction = DIRECTION_NONE;\n\n        if (this._isValidKey(event.keyCode, this.props.keys.next)) {\n            direction = DIRECTION_NEXT;\n        }\n        if (this._isValidKey(event.keyCode, this.props.keys.prev)) {\n            direction = DIRECTION_PREV;\n        }\n\n        if (event.shifKey) {\n            direction *= -1;\n        }\n\n        return direction;\n    }\n\n    /**\n     * Indicates if a given keyCode is valid for the given set of keys.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method _isValidKey\n     * @param {Array|Number} keys A key set. Can be a number an array of numbers representing the allowed keyCodes.\n     * @param {Number} keyCode An event keyCode.\n     * @protected\n     * @return {Boolean} A boolean value indicating if the key is valid.\n     */\n    _isValidKey(keyCode, keys) {\n        return Lang.isArray(keys) ? (keys.indexOf(keyCode) !== -1) : (keyCode === keys);\n    }\n\n    /**\n     * Indicates if a given element is valid for focus management. User input elements such as\n     * input, select or textarea are excluded.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method _isValidKey\n     * @param {DOMNode} element A DOM element.\n     * @protected\n     * @return {Boolean} A boolean value indicating if the element is valid.\n     */\n    _isValidTarget(element) {\n        var tagName = element.tagName.toLowerCase();\n\n        return (tagName !== 'input' && tagName !== 'select' && tagName !== 'textarea');\n    }\n\n    /**\n     * Moves the focus among descendants in the especified direction.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method _moveFocus\n     * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n     * @protected\n     */\n    _moveFocus(direction) {\n        var numDescendants = this._descendants.length;\n\n        var descendant = this._descendants[this._activeDescendant];\n\n        descendant.setAttribute('tabIndex', -1);\n\n        this._activeDescendant += direction;\n\n        if (this.props.circular) {\n            // Calculate proper modulo result since remainder operator doesn't behave in the\n            // same way for negative numbers\n            this._activeDescendant = ((this._activeDescendant % numDescendants) + numDescendants) % numDescendants;\n        } else {\n            this._activeDescendant = Math.max(Math.min(this._activeDescendant, numDescendants - 1), 0);\n        }\n\n        descendant = this._descendants[this._activeDescendant];\n\n        descendant.setAttribute('tabIndex', 0);\n        descendant.focus();\n    }\n\n    /**\n     * Refreshes the descendants list by executing the CSS selector again and resets the descendants tabIndex.\n     *\n     * @instance\n     * @memberof WidgetFocusManager\n     * @method _refresh\n     * @protected\n     */\n    _refresh() {\n        var domNode = ReactDOM.findDOMNode(this);\n\n        if (domNode) {\n            var descendants = domNode.querySelectorAll(this.props.descendants);\n\n            var priorityDescendants = [];\n\n            this._descendants = [];\n\n            Array.prototype.slice.call(descendants).forEach(function(item) {\n                var dataTabIndex = item.getAttribute('data-tabindex');\n\n                if (dataTabIndex) {\n                    priorityDescendants.push(item);\n                } else {\n                    this._descendants.push(item);\n                }\n            }.bind(this));\n\n            priorityDescendants = priorityDescendants.sort(function(a, b) {\n                return (Lang.toInt(a.getAttribute('data-tabindex')) > Lang.toInt(b.getAttribute('data-tabindex')));\n            });\n\n            this._descendants = priorityDescendants.concat(this._descendants);\n\n            this._activeDescendant = 0;\n\n            this._descendants.some(function(item, index) {\n                if (item.getAttribute('tabindex') === '0') {\n                    this._activeDescendant = index;\n                    this.focus();\n\n                    return true;\n                }\n            }.bind(this));\n        }\n    }\n};\n","import ButtonCommandListItem from './button-command-list-item.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport WidgetFocusManager from '../base/widget-focus-manager.js';\n\n/**\n * The ButtonCommandsList class provides functionality for showing a list of commands that can be\n * executed to the current selection..\n *\n * @class ButtonCommandsList\n * @uses WidgetFocusManager\n */\nclass ButtonCommandsList extends React.Component {\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * Focuses on the list node to allow keyboard interaction.\n     *\n     * @instance\n     * @memberof ButtonCommandsList\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        ReactDOM.findDOMNode(this).focus();\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the list.\n     *\n     * @instance\n     * @memberof ButtonCommandsList\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        return (\n            <div className=\"ae-dropdown ae-arrow-box ae-arrow-box-top-left\" onFocus={this.focus.bind(this)} onKeyDown={this.handleKey.bind(this)} tabIndex=\"0\">\n                <ul className=\"ae-listbox\" id={this.props.listId} role=\"listbox\">\n                    {this._renderActions(this.props.commands)}\n                </ul>\n            </div>\n        );\n    }\n\n    /**\n     * Renders instances of ButtonCommandListItem with the description of the row action that will be executed.\n     *\n     * @instance\n     * @memberof ButtonCommandsList\n     * @method _renderActions\n     * @protected\n     * @return {Array} Rendered instances of ButtonCommandListItem class\n     */\n    _renderActions(commands) {\n        var editor = this.props.editor;\n        var items;\n\n        if (commands && commands.length) {\n            items = commands.map(function(item) {\n                return (\n                    <li key={item.command} role=\"option\">\n                        <ButtonCommandListItem command={item.command} description={typeof item.label === 'string' ? item.label : item.label()} editor={editor} />\n                    </li>\n                );\n            });\n        }\n\n        return items;\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default buttonCommandsList\n * @memberof ButtonCommandsList\n * @property {String} key\n * @static\n */\nButtonCommandsList.key = 'buttonCommandsList';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonCommandsList\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonCommandsList.defaultProps = {\n    circular: false,\n    descendants: '.ae-toolbar-element',\n    keys: {\n        dismiss: [27],\n        dismissNext: [39],\n        dismissPrev: [37],\n        next: [40],\n        prev: [38]\n    }\n};\n\nexport default WidgetFocusManager(\n    ButtonCommandsList\n);","import Lang from '../../oop/lang.js';\n\n/**\n * ButtonKeystroke is a mixin that provides a `keystroke` prop that allows configuring\n * a function of the instance to be invoked upon the keystroke activation.\n *\n * @class ButtonKeystroke\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n     *\n     * @instance\n     * @memberof ButtonKeystroke\n     * @method componentWillMount\n     */\n    componentWillMount() {\n        if (Lang.isFunction(super.componentWillMount)) {\n            super.componentWillMount();\n        }\n\n        var nativeEditor = this.props.editor.get('nativeEditor');\n        var keystroke = this.props.keystroke;\n\n        var commandName = keystroke.name || ((Math.random() * 1e9) >>> 0).toString();\n\n        var command = nativeEditor.getCommand(commandName);\n\n        if (!command) {\n            command = new CKEDITOR.command(nativeEditor, {\n                exec: function(editor) {\n                        var keystrokeFn = keystroke.fn;\n\n                        if (Lang.isString(keystrokeFn)) {\n                            this[keystrokeFn].call(this, editor);\n                        } else if (Lang.isFunction(keystrokeFn)) {\n                            keystrokeFn.call(this, editor);\n                        }\n                    }.bind(this)\n                }\n            );\n\n            nativeEditor.addCommand(commandName, command);\n        }\n\n        this._defaultKeystrokeCommand = nativeEditor.keystrokeHandler.keystrokes[keystroke.keys];\n\n        nativeEditor.setKeystroke(keystroke.keys, commandName);\n    }\n\n    /**\n     * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n     *\n     * @instance\n     * @memberof ButtonKeystroke\n     * @method componentWillUnmount\n     */\n    componentWillUnmount() {\n        if (Lang.isFunction(super.componentWillUnmount)) {\n            super.componentWillUnmount();\n        }\n\n        this.props.editor.get('nativeEditor').setKeystroke(this.props.keystroke.keys, this._defaultKeystrokeCommand);\n    }\n};","import WidgetFocusManager from '../base/widget-focus-manager.js';\nimport React from 'react';\n\n/**\n * The ButtonDropdown class provides markup and keyboard navigation behaviour to a dropdown\n * opened from a button.\n *\n * @class ButtonDropdown\n */\nclass ButtonDropdown extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonDropdown\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        return (\n            <div className=\"ae-dropdown ae-arrow-box ae-arrow-box-top-left\" onFocus={this.focus.bind(this)} onKeyDown={this.handleKey.bind(this)} tabIndex=\"0\">\n                <ul className=\"ae-listbox\" role=\"listbox\">\n                    {this.props.children}\n                </ul>\n            </div>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the dropdown in the configuration.\n *\n * @default dropdown\n * @memberof ButtonDropdown\n * @property {String} key\n * @static\n */\nButtonDropdown.key = 'dropdown';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonDropdown\n * @method getDefaultProps\n */\nButtonDropdown.defaultProps = {\n    circular: false,\n    descendants: '.ae-toolbar-element',\n    keys: {\n        dismiss: [27],\n        dismissNext: [39],\n        dismissPrev: [37],\n        next: [40],\n        prev: [38]\n    }\n};\n\nexport default WidgetFocusManager(\n    ButtonDropdown\n);\n","import Lang from '../../oop/lang.js';\n\n/**\n * ButtonActionStyle is a mixin that provides applying style implementation for a\n * button based on the `applyStyle` and `removeStyle` API of CKEDITOR.\n *\n * To execute properly, the component has to expose the following methods which can be obtained\n * out of the box using the {{#crossLink \"ButtonStyle\"}}{{/crossLink}} mixin:\n * - `Function` {{#crossLink \"ButtonStyle/isActive\"}}{{/crossLink}} to check the active state\n * - `Function` {{#crossLink \"ButtonStyle/getStyle\"}}{{/crossLink}} to return the style that should be applied\n *\n * @class ButtonActionStyle\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Removes or applies the component style to the current selection.\n     *\n     * @instance\n     * @memberof ButtonActionStyle\n     * @method applyStyle\n     */\n    applyStyle() {\n        if (Lang.isFunction(this.isActive) && Lang.isFunction(this.getStyle)) {\n            var editor = this.props.editor.get('nativeEditor');\n\n            editor.getSelection().lock();\n\n            if (this.isActive()) {\n                editor.removeStyle(this.getStyle());\n            } else {\n                editor.applyStyle(this.getStyle());\n            }\n\n            editor.getSelection().unlock();\n\n            editor.fire('actionPerformed', this);\n        }\n    }\n};","import ReactDOM from 'react-dom';\nimport Lang from '../../oop/lang.js';\n\n/**\n * Provides functionality for managing different dropdowns inside a widget.\n *\n * @class WidgetDropdown\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ...this.state,\n            dropdownTrigger: null,\n            itemDropdown: null\n        }\n    }\n\n    /**\n     * Lifecycle. Invoked when a component is receiving new props.\n     * This method is not called for the initial render.\n     *\n     * @instance\n     * @memberof WidgetDropdown\n     * @method componentWillReceiveProps\n     */\n    componentWillReceiveProps(nextProps) {\n        if (Lang.isFunction(super.componentWillReceiveProps)) {\n            super.componentWillReceiveProps();\n        }\n\n        this.setState({\n            dropdownTrigger: null,\n            itemDropdown: null\n        });\n    }\n\n    /**\n     * Merges the provided object with two more properties:\n     * - expanded - boolean flag which indicates if an widget should be rendered exclusively.\n     * - toggleDropdown - function, which can be used by an widget in order to obtain exclusive state.\n     *\n     * @instance\n     * @memberof WidgetDropdown\n     * @method mergeDropdownProps\n     * @param {Object} obj The properties container which should be merged with the properties, related\n     *    to dropdown state.\n     * @param {Object} itemKey They key of an React Widget which contains the dropdown.\n     * @return {Object} The merged object.\n     */\n    mergeDropdownProps(obj, itemKey) {\n        return CKEDITOR.tools.merge(obj, {\n            expanded: this.state.itemDropdown === itemKey ? true : false,\n            tabIndex: this.state.dropdownTrigger === itemKey ? 0 : -1,\n            toggleDropdown: this.toggleDropdown.bind(this, itemKey)\n        });\n    }\n\n    /**\n     * Sets the active dropdown of the widget or discards the toggled item from the state.\n     *\n     * @instance\n     * @memberof WidgetDropdown\n     * @method toggleDropdown\n     * @param {Object} itemDropdown The widget which requests to toggle its dropdown.\n     * @param {Number} toggleDirection User movement direction when toggled via keyboard.\n     */\n    toggleDropdown(itemDropdown, toggleDirection) {\n        this.setState({\n            dropdownTrigger: itemDropdown,\n            itemDropdown: itemDropdown !== this.state.itemDropdown ? itemDropdown : null\n        }, function() {\n            if (!this.state.itemDropdown) {\n                if (this.moveFocus) {\n                    this.moveFocus(toggleDirection);\n                } else {\n                    ReactDOM.findDOMNode(this).focus();\n                }\n            }\n        });\n    }\n};","import Lang from '../../oop/lang.js';\n\n/**\n * Provides functionality for managing exclusive state of an widget.\n * The exclusive state means that a button may request to be the only rendered\n * widget in its parent container. WidgetExclusive will manage this state by\n * filtering and suppressing the other sibling widgets from displaying.\n *\n * @class WidgetExclusive\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Cancels the exclusive state of an widget.\n     *\n     * @instance\n     * @memberof WidgetExclusive\n     * @method cancelExclusive\n     * @param {Object} itemExclusive The widget which exclusive state should be canceled.\n     */\n    cancelExclusive(itemExclusive) {\n        if (this.state.itemExclusive === itemExclusive) {\n            this.setState({\n                itemExclusive: null\n            });\n        }\n    }\n\n    /**\n     * Lifecycle. Invoked when a component is receiving new props.\n     * This method is not called for the initial render.\n     * Calling this.setState() within this function will not trigger an additional render.\n     *\n     * @instance\n     * @memberof WidgetExclusive\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Object containing the current set of properties.\n     */\n    componentWillReceiveProps(nextProps) {\n        if (Lang.isFunction(super.componentWillReceiveProps)) {\n            super.componentWillReceiveProps();\n        }\n\n        // Receiving properties means that the component is being re-rendered.\n        // Re-rendering is triggered by editorInteraction, so we have to\n        // reset the exclusive state and render the UI according to the new selection.\n        this.setState({\n            itemExclusive: null\n        });\n    }\n\n    /**\n     * Filters the items and returns only those with exclusive state.\n     *\n     * @instance\n     * @memberof WidgetExclusive\n     * @method filterExclusive\n     * @param {Array} items The widgets to be filtered.\n     * @return {Array|Object} The item with executive state.\n     */\n    filterExclusive(items) {\n        return items.filter(function(item) {\n            if (this.state.itemExclusive) {\n                if (this.state.itemExclusive === item.key) {\n                    return item;\n                }\n            } else {\n                return item;\n            }\n        }.bind(this));\n    }\n\n    /**\n     * Merges the provided object with three more properties:\n     * - cancelExclusive - function, which can be used by a widget in order to cancel executive state.\n     * - renderExclusive - boolean flag which indicates if an widget should be rendered exclusively.\n     * - requestExclusive - function, which can be used by a widget in order to obtain exclusive state.\n     *\n     * @instance\n     * @memberof WidgetExclusive\n     * @method mergeExclusiveProps\n     * @param {Object} obj The properties container which should be merged with the properties, related\n     *    to exclusive state.\n     * @param {Object} itemKey They key of an React Widget which should be rendered exclusively.\n     * @return {Object} The merged object.\n     */\n    mergeExclusiveProps(obj, itemKey) {\n        return CKEDITOR.tools.merge(obj, {\n            cancelExclusive: this.cancelExclusive.bind(this, itemKey),\n            renderExclusive: (this.state.itemExclusive === itemKey),\n            requestExclusive: this.requestExclusive.bind(this, itemKey)\n        });\n    }\n\n    /**\n     * Requests and sets exclusive state of an widget.\n     *\n     * @instance\n     * @memberof WidgetExclusive\n     * @method requestExclusive\n     * @param {Object} itemExclusive The widget which requests exclusive state.\n     */\n    requestExclusive(itemExclusive) {\n        this.setState({\n            itemExclusive: itemExclusive\n        });\n    }\n};","var _isRangeAtElementEnd = function(range, element) {\n    // Finding if a range is at the end of an element is somewhat tricky due to how CKEditor handles\n    // ranges. It might depend on wether a source node inside the element is selected or not. For now,\n    // we need to cover the following cases:\n    //\n    // - The text length of the element is the same as the endOffset of the range\n    // - Both start and end containers match the element and the start and end offsets are 1\n\n    return element.getText().length === range.endOffset ||\n        (\n            element.equals(range.startContainer) &&\n            element.equals(range.endContainer) &&\n            range.startOffset === range.endOffset &&\n            range.endOffset === 1\n        );\n};\n\nvar embedSelectionTest = function(payload) {\n    var selectionData = payload.data.selectionData;\n\n    return !!(\n        selectionData.element &&\n        selectionData.element.getAttribute('data-widget') === 'ae_embed'\n    );\n};\n\nvar linkSelectionTest = function(payload) {\n    var nativeEditor = payload.editor.get('nativeEditor');\n    var range = nativeEditor.getSelection().getRanges()[0];\n\n    var element;\n\n    return !!(\n        nativeEditor.isSelectionEmpty() &&\n        (element = (new CKEDITOR.Link(nativeEditor)).getFromSelection()) &&\n        element.getText().length !== range.endOffset &&\n        !element.isReadOnly() &&\n        !_isRangeAtElementEnd(range, element)\n    );\n};\n\nvar imageSelectionTest = function(payload) {\n    var selectionData = payload.data.selectionData;\n\n    return !!(\n        selectionData.element &&\n        selectionData.element.getName() === 'img' &&\n        !selectionData.element.isReadOnly()\n    );\n};\n\nvar textSelectionTest = function(payload) {\n    var nativeEditor = payload.editor.get('nativeEditor');\n\n    var selectionEmpty = nativeEditor.isSelectionEmpty();\n\n    var selectionData = payload.data.selectionData;\n\n    return !!(\n        !selectionData.element &&\n        selectionData.region &&\n        !selectionEmpty &&\n        !nativeEditor.getSelection().getCommonAncestor().isReadOnly()\n    );\n};\n\nvar tableSelectionTest = function(payload) {\n    var nativeEditor = payload.editor.get('nativeEditor');\n\n    var table = new CKEDITOR.Table(nativeEditor);\n    var element = table.getFromSelection();\n\n    return !!(element && table.isEditable(element));\n};\n\nconst SelectionTest = {\n    embed: embedSelectionTest,\n    image: imageSelectionTest,\n    link: linkSelectionTest,\n    table: tableSelectionTest,\n    text: textSelectionTest\n};\n\nexport default SelectionTest;","import ReactDOM from 'react-dom';\n\n/**\n * Calculates the position where an Widget should be displayed based on the point\n * where user interacted with the editor.\n *\n * @class WidgetPosition\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Lifecycle. Returns the default values of the properties used in the widget.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method getDefaultProps\n     */\n    static defaultProps = {\n        ...WrappedComponent.defaultProps,\n        gutter: {\n            left: 0,\n            top: 10\n        },\n        constrainToViewport: true\n    }\n\n    /**\n     * Cancels an scheduled animation frame.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method cancelAnimation\n     */\n    cancelAnimation() {\n        if (window.cancelAnimationFrame) {\n            window.cancelAnimationFrame(this._animationFrameId);\n        }\n    }\n\n    /**\n     * Returns an object which contains the position of the element in page coordinates,\n     * restricted to fit to given viewport.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method getConstrainedPosition\n     * @param {Object} attrs The following properties, provided as numbers:\n     * - height\n     * - left\n     * - top\n     * - width\n     * @param {Object} viewPaneSize Optional. If not provided, the current viewport will be used. Should contain at least these properties:\n     * - width\n     * @return {Object} An object with `x` and `y` properties, which represent the constrained position of the\n     * element.\n     */\n    getConstrainedPosition(attrs, viewPaneSize) {\n        viewPaneSize = viewPaneSize || new CKEDITOR.dom.window(window).getViewPaneSize();\n\n        var x = attrs.left;\n        var y = attrs.top;\n\n        if (attrs.left + attrs.width > viewPaneSize.width) {\n            x -= (attrs.left + attrs.width - viewPaneSize.width);\n        }\n\n        if (y < 0) {\n            y = 0;\n        }\n\n        return {\n            x: x,\n            y: y\n        };\n    }\n\n    /**\n     * Returns the position, in page coordinates, according to which a widget should appear.\n     * Depending on the direction of the selection, the wdiget may appear above of or on bottom of the selection.\n     *\n     * It depends on the props editorEvent to analyze the following user-interaction parameters:\n     * - {Object} selectionData The data about the selection in the editor as returned from\n     * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n     * - {Number} pos Contains the coordinates of the position, considered as most appropriate.\n     * This may be the point where the user released the mouse, or just the beginning or the end of\n     * the selection.\n     *\n     * @instance\n     * @memberof WidgetInteractionPoint\n     * @method getInteractionPoint\n     * @return {Object} An Object which contains the following properties:\n     * direction, x, y, where x and y are in page coordinates and direction can be one of these:\n     * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n     */\n    getInteractionPoint() {\n        var eventPayload = this.props.editorEvent ? this.props.editorEvent.data : null;\n\n        if (!eventPayload) {\n            return;\n        }\n\n        var selectionData = eventPayload.selectionData;\n\n        var nativeEvent = eventPayload.nativeEvent;\n\n        var pos = {\n            x: eventPayload.nativeEvent.pageX,\n            y: selectionData.region.top\n        };\n\n        var direction = selectionData.region.direction;\n\n        var endRect = selectionData.region.endRect;\n\n        var startRect = selectionData.region.startRect;\n\n        if (endRect && startRect && startRect.top === endRect.top) {\n            direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n        }\n\n        var x;\n        var y;\n\n        // If we have the point where user released the mouse, show Toolbar at this point\n        // otherwise show it on the middle of the selection.\n\n        if (pos.x && pos.y) {\n            x = this._getXPoint(selectionData, pos.x);\n\n            if (direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n                y = Math.min(pos.y, selectionData.region.top);\n            } else {\n                y = Math.max(pos.y, this._getYPoint(selectionData, nativeEvent));\n            }\n        } else {\n            x = selectionData.region.left + selectionData.region.width / 2;\n\n            if (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n\n                y = this._getYPoint(selectionData, nativeEvent);\n\n            } else {\n                y = selectionData.region.top;\n            }\n        }\n\n        return {\n            direction: direction,\n            x: x,\n            y: y\n        };\n    }\n\n    /**\n     * Returns the position of the Widget.\n     *\n     * @instance\n     * @memberof WidgetInteractionPoint\n     * @method _getXPoint\n     * @param {Object} eventX The X coordinate received from the native event (mouseup).\n     * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n     * @protected\n     * @return {Number} The calculated X point in page coordinates.\n     */\n    _getXPoint(selectionData, eventX) {\n        var region = selectionData.region;\n\n        var left = region.startRect ? region.startRect.left : region.left;\n        var right = region.endRect ? region.endRect.right : region.right;\n\n        var x;\n\n        if (left < eventX && right > eventX) {\n            x = eventX;\n        } else {\n            var leftDist = Math.abs(left - eventX);\n            var rightDist = Math.abs(right - eventX);\n\n            if (leftDist < rightDist) { // user raised the mouse on left on the selection\n                x = left;\n            } else {\n                x = right;\n            }\n        }\n\n        return x;\n    }\n\n    /**\n     * Returns the position of the Widget.\n     *\n     * @instance\n     * @memberof WidgetInteractionPoint\n     * @method _getYPoint\n     * @param {Object} nativeEvent The data about event is fired\n     * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n     * @protected\n     * @return {Number} The calculated Y point in page coordinates.\n     */\n    _getYPoint(selectionData, nativeEvent) {\n        var y = 0;\n\n        if (selectionData && nativeEvent) {\n            var elementTarget = new CKEDITOR.dom.element(nativeEvent.target);\n\n            if (elementTarget.$ && elementTarget.getStyle('overflow') === 'auto') {\n                y = nativeEvent.target.offsetTop + nativeEvent.target.offsetHeight;\n            } else {\n                y = selectionData.region.bottom;\n            }\n        }\n\n        return y;\n    }\n\n    /**\n     * Returns the position of the Widget taking in consideration the\n     * {{#crossLink \"WidgetPosition/gutter:attribute\"}}{{/crossLink}} attribute.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @protected\n     * @method  getWidgetXYPoint\n     * @param {Number} left The left offset in page coordinates where Toolbar should be shown.\n     * @param {Number} top The top offset in page coordinates where Toolbar should be shown.\n     * @param {Number} direction The direction of the selection. May be one of the following:\n     * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n     * @return {Array} An Array with left and top offsets in page coordinates.\n     */\n    getWidgetXYPoint(left, top, direction) {\n        var domNode = ReactDOM.findDOMNode(this);\n\n        var gutter = this.props.gutter;\n\n        if (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM || direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n            left = left - gutter.left - (domNode.offsetWidth / 2);\n\n            top = (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) ? (top + gutter.top) :\n                (top - domNode.offsetHeight - gutter.top);\n\n        } else if (direction === CKEDITOR.SELECTION_LEFT_TO_RIGHT ||\n            direction === CKEDITOR.SELECTION_RIGHT_TO_LEFT) {\n\n            left = (direction === CKEDITOR.SELECTION_LEFT_TO_RIGHT) ?\n                (left + gutter.left + domNode.offsetHeight / 2) :\n                (left - 3 * domNode.offsetHeight / 2 - gutter.left);\n\n            top = top - gutter.top - (domNode.offsetHeight / 2);\n        }\n\n        if (left < 0) {\n            left = 0;\n        }\n\n        if (top < 0) {\n            top = 0;\n        }\n\n        return [left, top];\n    }\n\n    /**\n     * Returns true if the widget is visible, false otherwise\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method isVisible\n     * @return {Boolean} True if the widget is visible, false otherwise\n     */\n    isVisible() {\n        var domNode = ReactDOM.findDOMNode(this);\n\n        if (domNode) {\n            var domElement = new CKEDITOR.dom.element(domNode);\n\n            return domElement.hasClass('alloy-editor-visible');\n        }\n\n        return false;\n    }\n\n    /**\n     * Moves a widget from a starting point to a destination point.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method moveToPoint\n     * @param  {Object} startPoint The starting point for the movement.\n     * @param  {Object} endPoint The destination point for the movement.\n     */\n    moveToPoint(startPoint, endPoint) {\n        var domElement = new CKEDITOR.dom.element(ReactDOM.findDOMNode(this));\n\n        domElement.setStyles({\n            left: startPoint[0] + 'px',\n            top: startPoint[1] + 'px',\n            opacity: 0\n        });\n\n        domElement.removeClass('alloy-editor-invisible');\n\n        this._animate(function() {\n            domElement.addClass('ae-toolbar-transition');\n            domElement.addClass('alloy-editor-visible');\n            domElement.setStyles({\n                left: endPoint[0] + 'px',\n                top: endPoint[1] + 'px',\n                opacity: 1\n            });\n        });\n    }\n\n    /**\n     * Shows the widget with the default animation transition.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method show\n     */\n    show() {\n        var domNode = ReactDOM.findDOMNode(this);\n\n        if (!this.isVisible() && domNode) {\n            var interactionPoint = this.getInteractionPoint();\n\n            if (interactionPoint) {\n                var domElement = new CKEDITOR.dom.element(domNode);\n\n                var finalX,\n                    finalY,\n                    initialX,\n                    initialY;\n\n                finalX = initialX = parseFloat(domElement.getStyle('left'));\n                finalY = initialY = parseFloat(domElement.getStyle('top'));\n\n                if (this.props.constrainToViewport) {\n                    var res = this.getConstrainedPosition({\n                        height: parseFloat(domNode.offsetHeight),\n                        left: finalX,\n                        top: finalY,\n                        width: parseFloat(domNode.offsetWidth)\n                    });\n\n                    finalX = res.x;\n                    finalY = res.y;\n                }\n\n                if (interactionPoint.direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n                    initialY = this.props.selectionData.region.bottom;\n                } else {\n                    initialY = this.props.selectionData.region.top;\n                }\n\n                this.moveToPoint([initialX, initialY], [finalX, finalY]);\n            }\n        }\n    }\n\n    /**\n     * Updates the widget position based on the current interaction point.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method updatePosition\n     */\n    updatePosition() {\n        var interactionPoint = this.getInteractionPoint();\n\n        var domNode = ReactDOM.findDOMNode(this);\n\n        if (interactionPoint && domNode) {\n            var xy = this.getWidgetXYPoint(interactionPoint.x, interactionPoint.y, interactionPoint.direction);\n\n            new CKEDITOR.dom.element(domNode).setStyles({\n                left: xy[0] + 'px',\n                top: xy[1] + 'px'\n            });\n        }\n    }\n\n    /**\n     * Requests an animation frame, if possible, to simulate an animation.\n     *\n     * @instance\n     * @memberof WidgetPosition\n     * @method _animate\n     * @param {Function} callback The function to be executed on the scheduled frame.\n     * @protected\n     */\n    _animate(callback) {\n        if (window.requestAnimationFrame) {\n            this._animationFrameId = window.requestAnimationFrame(callback);\n        } else {\n            callback();\n        }\n    }\n}\n","import Lang from '../../oop/lang.js';\n\n/**\n * Provides functionality for displaying Widget Arrow box on top or on bottom of the widget\n * depending on the point of user interaction with the editor.\n *\n * @class WidgetArrowBox\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Returns the list of arrow box classes associated to the current element's state. It relies\n     * on the getInteractionPoint method to calculate the selection direction.\n     *\n     * @instance\n     * @memberof WidgetArrowBox\n     * @method getArrowBoxClasses\n     * @return {String} A string with the arrow box CSS classes.\n     */\n    getArrowBoxClasses() {\n        var arrowBoxClasses = 'ae-arrow-box';\n\n        if (Lang.isFunction(this.getInteractionPoint) && this.getInteractionPoint()) {\n            if (this.getInteractionPoint().direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n                arrowBoxClasses += ' ae-arrow-box-top';\n            } else {\n                arrowBoxClasses += ' ae-arrow-box-bottom';\n            }\n        }\n\n        return arrowBoxClasses;\n    }\n};","import Lang from '../../oop/lang.js';\nimport React from 'react';\n\n/**\n * ToolbarButtons is a mixin which provides a list of buttons which have to be\n * displayed on the current toolbar depending on user preferences and given state.\n *\n * @class ToolbarButtons\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Analyzes the current selection and the buttons exclusive mode value to figure out which\n     * buttons should be present in a given state.\n     *\n     * @instance\n     * @memberof ToolbarButtons\n     * @method getToolbarButtons\n     * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n     * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n     * @return {Array} An Array which contains the buttons that should be rendered.\n     */\n    getToolbarButtons(buttons, additionalProps) {\n        var buttonProps = {};\n\n        var nativeEditor = this.props.editor.get('nativeEditor');\n        var buttonCfg = nativeEditor.config.buttonCfg || {};\n\n        if (Lang.isFunction(buttons)) {\n            buttons = buttons.call(this) || [];\n        }\n\n        var toolbarButtons = this.filterExclusive(\n                buttons.filter(function(button) {\n                    return button && (AlloyEditor.Buttons[button] || AlloyEditor.Buttons[button.name]);\n                })\n                .map(function(button) {\n                    if (Lang.isString(button)) {\n                        buttonProps[button] = buttonCfg[button];\n                        button = AlloyEditor.Buttons[button];\n                    } else if (Lang.isString(button.name)) {\n                        buttonProps[AlloyEditor.Buttons[button.name].key] = CKEDITOR.tools.merge(buttonCfg[button], button.cfg);\n                        button = AlloyEditor.Buttons[button.name];\n                    }\n\n                    return button;\n                })\n            )\n            .map(function(button) {\n                var props = this.mergeExclusiveProps({\n                    editor: this.props.editor,\n                    key: button.key,\n                    tabKey: button.key,\n                    tabIndex: (this.props.trigger && this.props.trigger.props.tabKey === button.key) ? 0 : -1,\n                    trigger: this.props.trigger\n                }, button.key);\n\n                props = this.mergeDropdownProps(props, button.key);\n\n                if (additionalProps) {\n                    props = CKEDITOR.tools.merge(props, additionalProps);\n                }\n\n                props = CKEDITOR.tools.merge(props, buttonProps[button.key]);\n\n                return React.createElement(button, props);\n            }, this);\n\n        return toolbarButtons;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar KEY_ENTER = 13;\nvar KEY_ESC = 27;\n\n/**\n * The ButtonTableEdit class provides functionality for creating and editing a table in a document.\n * Provides UI for creating a table.\n *\n * @class ButtonTableEdit\n */\nclass ButtonTableEdit extends React.Component {\n    /**\n     * Lifecycle. Invoked once before the component is mounted.\n     *\n     * @instance\n     * @memberof ButtonTableEdit\n     * @method getInitialState\n     */\n    constructor(props) {\n        super(props);\n\n        this.rowsRef = React.createRef();\n        this.colsRef = React.createRef();\n        this.state = {\n            cols: 3,\n            rows: 3\n        };\n    }\n\n    /**\n     * Lifecycle. Invoked once, only on the client (not on the server),\n     * immediately after the initial rendering occurs.\n     *\n     * Focuses on the link input to immediately allow editing.\n     *\n     * @instance\n     * @memberof ButtonTableEdit\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        this.rowsRef.current.focus();\n    }\n\n    /**\n     * Creates a table.\n     *\n     * @instance\n     * @memberof ButtonTableEdit\n     * @method _createTable\n     * @protected\n     */\n    _createTable() {\n        var editor = this.props.editor.get('nativeEditor');\n        var tableUtils = new CKEDITOR.Table(editor);\n\n        tableUtils.create({\n            attrs: this.props.tableAttributes,\n            cols: this.state.cols,\n            rows: this.state.rows\n        });\n\n        this.props.cancelExclusive();\n\n        editor.fire('actionPerformed', this);\n    }\n\n    /**\n     * Handles a change in input value. Sets the provided value from the user back to the input.\n     *\n     * @instance\n     * @memberof ButtonTableEdit\n     * @method _handleChange\n     * @param {String} inputName The name of the input which value should be updated.\n     * @param {SyntheticEvent} event The provided event.\n     * @protected\n     */\n    _handleChange(inputName, event) {\n        var state = {};\n        state[inputName] = event.target.value;\n\n        this.setState(state);\n    }\n\n    /**\n     * Monitors key interaction inside the input element to respond to the keys:\n     * - Enter: Creates the table.\n     * - Escape: Discards the changes.\n     *\n     * @instance\n     * @memberof ButtonTableEdit\n     * @method _handleKeyDown\n     * @param {SyntheticEvent} event The keyboard event.\n     * @protected\n     */\n    _handleKeyDown(event) {\n        if (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n            event.preventDefault();\n        }\n\n        if (event.keyCode === KEY_ENTER) {\n            this._createTable();\n        } else if (event.keyCode === KEY_ESC) {\n            this.props.cancelExclusive();\n        }\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTableEdit\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var time = Date.now();\n        var rowsId = time + 'rows';\n        var colsId = time + 'cols';\n\n        return (\n            <div className=\"ae-container-edit-table\">\n                <label htmlFor={rowsId}>{AlloyEditor.Strings.rows}</label>\n                <div className=\"ae-container-input small\">\n                    <input className=\"ae-input\" id={rowsId} onChange={this._handleChange.bind(this, 'rows')} min=\"1\" onKeyDown={this._handleKeyDown.bind(this)} placeholder=\"Rows\" ref={this.rowsRef} type=\"number\" value={this.state.rows}></input>\n                </div>\n\n                <label htmlFor={colsId}>{AlloyEditor.Strings.columns}</label>\n                <div className=\"ae-container-input small\">\n                    <input className=\"ae-input\" id={colsId} onChange={this._handleChange.bind(this, 'cols')} min=\"1\" onKeyDown={this._handleKeyDown.bind(this)} placeholder=\"Colums\" ref={this.colsRef} type=\"number\" value={this.state.cols}></input>\n                </div>\n\n                <button aria-label=\"Confirm\" className=\"ae-button\" onClick={this._createTable.bind(this)}>\n                    <span className=\"ae-icon-ok\"></span>\n                </button>\n            </div>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default tableEdit\n * @memberof ButtonTableEdit\n * @property {String} key\n * @static\n */\nButtonTableEdit.key = 'tableEdit';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonTableEdit\n * @method getDefaultProps\n */\nButtonTableEdit.defaultProps = {\n    tableAttributes: {\n        border: 1,\n        cellPadding: 0,\n        cellSpacing: 0,\n        style: 'width: 100%'\n    }\n};\n\nexport default ButtonTableEdit;\n","import ButtonDropdown from './button-dropdown.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonsStylesListHeader from './button-styles-list-header.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport WidgetFocusManager from '../base/widget-focus-manager.js';\n\n/**\n * The ButtonStylesList class provides functionality for showing a list of styles that can be\n * applied to the current selection..\n *\n * @class ButtonStylesList\n * @uses WidgetFocusManager\n */\nclass ButtonStylesList extends React.Component {\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * Focuses on the list node to allow keyboard interaction.\n     *\n     * @instance\n     * @memberof ButtonStylesList\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        ReactDOM.findDOMNode(this).focus();\n    }\n\n    /**\n     * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n     *\n     * @instance\n     * @memberof ButtonStylesList\n     * @method componentWillMount\n     */\n    componentWillMount() {\n        var blockStyles = [];\n        var inlineStyles = [];\n        var objectStyles = [];\n\n        this.props.styles.forEach(function(item) {\n            var style = new CKEDITOR.style(item.style);\n\n            if (style.type === CKEDITOR.STYLE_BLOCK) {\n                blockStyles.push(item);\n            } else if (style.type === CKEDITOR.STYLE_INLINE) {\n                inlineStyles.push(item);\n            } else if (style.type === CKEDITOR.STYLE_OBJECT) {\n                objectStyles.push(item);\n            }\n        });\n\n        this._blockStyles = blockStyles;\n        this._inlineStyles = inlineStyles;\n        this._objectStyles = objectStyles;\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the list.\n     *\n     * @instance\n     * @memberof ButtonStylesList\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var removeStylesItem;\n\n        if (this.props.showRemoveStylesItem) {\n            removeStylesItem = <ButtonStylesListItemRemove editor={this.props.editor} onDismiss={this.props.toggleDropdown} />;\n        }\n\n        return (\n            <ButtonDropdown {...this.props}>\n                {removeStylesItem}\n\n                <ButtonsStylesListHeader name={AlloyEditor.Strings.blockStyles} styles={this._blockStyles} />\n                {this._renderStylesItems(this._blockStyles)}\n\n                <ButtonsStylesListHeader name={AlloyEditor.Strings.inlineStyles} styles={this._inlineStyles} />\n                {this._renderStylesItems(this._inlineStyles)}\n\n                <ButtonsStylesListHeader name={AlloyEditor.Strings.objectStyles} styles={this._objectStyles} />\n                {this._renderStylesItems(this._objectStyles)}\n            </ButtonDropdown>\n        );\n    }\n\n    /**\n     * Renders instances of ButtonStylesListItem with the preview of the correspondent block, inline or object styles.\n     *\n     * @instance\n     * @memberof ButtonStylesList\n     * @method _renderStylesItems\n     * @param {Array} styles List of styles for which preview should be rendered.\n     * @protected\n     * @return {Array} Rendered instances of ButtonStylesListItem class\n     */\n    _renderStylesItems(styles) {\n        var editor = this.props.editor;\n        var items;\n\n        if (styles && styles.length) {\n            items = styles.map(function(item) {\n                return (\n                    <li key={item.name} role=\"option\">\n                        <ButtonStylesListItem activeStyle={this.props.activeStyle} editor={editor} name={item.name} style={item.style} />\n                    </li>\n                );\n            }.bind(this));\n        }\n\n        return items;\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @memberof ButtonStylesList\n * @static\n * @property {String} key\n * @default buttonStylesList\n */\nButtonStylesList.key = 'buttonStylesList';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonStylesList\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonStylesList.defaultProps = {\n    circular: false,\n    descendants: '.ae-toolbar-element',\n    keys: {\n        dismiss: [27],\n        dismissNext: [39],\n        dismissPrev: [37],\n        next: [40],\n        prev: [38]\n    },\n    showRemoveStylesItem: true\n};\n\nexport default WidgetFocusManager(\n    ButtonStylesList\n);","import ButtonActionStyle from '../base/button-action-style.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonStylesListItem class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItem\n * @uses ButtonActionStyle\n * @uses ButtonStyle\n */\nclass ButtonStylesListItem extends React.Component {\n    /**\n     * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n     *\n     * @instance\n     * @memberof ButtonStylesListItem\n     * @method componentWillMount\n     */\n    componentWillMount() {\n        // Styles with wildcard element (*) generate an empty tag in their preview < class=\"custom-class\" />.\n        // We default to element span and remove the margins to obtain a more consistent set of previews.\n        var styleCfg = {\n            element: 'span',\n            styles: {\n                margin: 0\n            }\n        };\n\n        styleCfg = CKEDITOR.tools.merge(styleCfg, this.props.style);\n\n        this._preview = new CKEDITOR.style(styleCfg).buildPreview(this.props.name);\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonStylesListItem\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        // We need to use dangerouselySetInnterHTML since we're not in control of the style\n        // preview that is generated by CKEditor.\n        var className = this.props.name === this.props.activeStyle ? 'ae-toolbar-element active' : 'ae-toolbar-element';\n\n        return (\n            <button className={className} dangerouslySetInnerHTML={{__html: this._preview}} onClick={this._onClick.bind(this)} tabIndex={this.props.tabIndex}></button>\n        );\n    }\n\n    /**\n     * Applies the item style to the editor selection.\n     *\n     * @instance\n     * @memberof ButtonStylesListItem\n     * @method _onClick\n     * @protected\n     */\n    _onClick() {\n        // Typically, we want the style to be the only one applied to the current selection, so\n        // we execute the 'removeFormat' command first. Note that block styles won't be cleaned.\n        // However, this is consistent with other editors implementations of this feature.\n        this.props.editor.get('nativeEditor').execCommand('removeFormat');\n\n        this.applyStyle();\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default buttonStylesListItem\n * @memberof ButtonStylesListItem\n * @property {String} key\n * @static\n */\nButtonStylesListItem.key = 'buttonStylesListItem';\n\nexport default ButtonActionStyle(\n    ButtonStyle(\n        ButtonStylesListItem\n));","import React from 'react';\n\n/**\n * The ButtonStylesListItemRemove class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItemRemove\n */\nclass ButtonStylesListItemRemove extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonStylesListItemRemove\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        return (\n            <li role=\"option\">\n                <button className=\"ae-toolbar-element\" onClick={this._removeStyles.bind(this)} tabIndex={this.props.tabIndex}>{AlloyEditor.Strings.normal}</button>\n            </li>\n        );\n    }\n\n    /**\n     * Removes all inline styles and configured block elements applied to the current selection.\n     *\n     * @instance\n     * @memberof ButtonStylesListItemRemove\n     * @method _removeStyles\n     * @protected\n     */\n    _removeStyles() {\n        var editor = this.props.editor.get('nativeEditor');\n\n        editor.execCommand('removeFormat');\n\n        this.props.removeBlocks.forEach(function(blockItem) {\n            var blockStyle = new CKEDITOR.style({element: blockItem});\n\n            editor.removeStyle(blockStyle);\n        });\n\n        editor.fire('actionPerformed', this);\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default buttonStylesListItemRemove\n * @memberof ButtonStylesListItemRemove\n * @property {String} key\n * @static\n */\nButtonStylesListItemRemove.key = 'buttonStylesListItemRemove';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonStylesListItemRemove\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonStylesListItemRemove.defaultProps = {\n    removeBlocks: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'pre']\n};\n\nexport default ButtonStylesListItemRemove;\n","import React from 'react';\n\n/**\n * The ButtonsStylesListHeader class provides the header of an list of style items.\n *\n * @class ButtonsStylesListHeader\n */\nclass ButtonsStylesListHeader extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonsStylesListHeader\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        if (this.props.styles && this.props.styles.length) {\n            return (\n                <span className=\"ae-list-header\">{this.props.name}</span>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default ButtonsStylesListHeader;","import ButtonDropdown from './button-dropdown.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport WidgetFocusManager from '../base/widget-focus-manager.js';\n\n/**\n * The ButtonTargetList class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonTargetList\n * @uses WidgetFocusManager\n */\nclass ButtonTargetList extends React.Component {\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * @instance\n     * @memberof ButtonTargetList\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        ReactDOM.findDOMNode(this).focus();\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTargetList\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var listTargets = this._renderListTargets();\n\n        return (\n            <ButtonDropdown {...this.props}>\n                {listTargets}\n            </ButtonDropdown>\n        );\n    }\n\n    /**\n     * Returns the the allowed link target items.\n     *\n     * @instance\n     * @memberof ButtonTargetList\n     * @method _getAllowedTargetItems\n     * @protected\n     * @return {Array} The allowed target items.\n     */\n    _getAllowedTargetItems() {\n        return this.props.allowedLinkTargets || [{\n            label: AlloyEditor.Strings.linkTargetDefault,\n            value: ''\n        }, {\n            label: AlloyEditor.Strings.linkTargetSelf,\n            value: '_self'\n        }, {\n            label: AlloyEditor.Strings.linkTargetBlank,\n            value: '_blank'\n        }, {\n            label: AlloyEditor.Strings.linkTargetParent,\n            value: '_parent'\n        }, {\n            label: AlloyEditor.Strings.linkTargetTop,\n            value: '_top'\n        }];\n    }\n\n    /**\n     * Renders the allowed link target items.\n     *\n     * @instance\n     * @memberof ButtonTargetList\n     * @method _renderListTargets\n     * @protected\n     * @return {Object} Returns the rendered link items\n     */\n    _renderListTargets() {\n        var targets = this._getAllowedTargetItems();\n\n        var handleLinkTargetChange = this.props.handleLinkTargetChange;\n\n        targets = targets.map(function(target) {\n            var className = this.props.selectedTarget === target.value ? 'ae-toolbar-element active' : 'ae-toolbar-element';\n\n            return (\n                <li key={target.value} role=\"option\">\n                    <button className={className} data-value={target.value} onClick={handleLinkTargetChange}>{target.label}</button>\n                </li>\n            );\n        }.bind(this));\n\n        return targets;\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default linkTargetEdit\n * @memberof ButtonTargetList\n * @property {String} key\n * @static\n */\nButtonTargetList.key = 'targetList';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonTargetList\n * @method getDefaultProps\n */\nButtonTargetList.defaultProps = {\n    circular: true,\n    descendants: '.ae-toolbar-element',\n    keys: {\n        dismiss: [27],\n        dismissNext: [39],\n        dismissPrev: [37],\n        next: [40],\n        prev: [38]\n    }\n};\n\nexport default WidgetFocusManager(\n    ButtonTargetList\n);","import ButtonTargetList from './button-target-list.jsx';\nimport React from 'react';\n\n/**\n * The ButtonLinkTargetEdit class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonLinkTargetEdit\n */\nclass ButtonLinkTargetEdit extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonLinkTargetEdit\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var handleLinkTargetChange = this.props.handleLinkTargetChange;\n        var allowedLinkTargets = this.props.allowedTargets;\n\n        return (\n            <div className=\"ae-container-edit-link-target ae-container-dropdown ae-container-dropdown-medium ae-has-dropdown\" tabIndex=\"0\">\n                <button aria-expanded={this.props.expanded} aria-label={this.props.selectedTarget} className=\"ae-toolbar-element\" onClick={this.props.toggleDropdown.bind(this)} role=\"combobox\" tabIndex={this.props.tabIndex} title={this.props.selectedTarget}>\n                    <div className=\"ae-container\">\n                        <span className=\"ae-container-dropdown-selected-item\">{this.props.selectedTarget}</span>\n                        <span className=\"ae-icon-arrow\"></span>\n                    </div>\n                </button>\n                {this.props.expanded && (\n                    <ButtonTargetList editor={this.props.editor} onDismiss={this.props.toggleDropdown} allowedLinkTargets={allowedLinkTargets} handleLinkTargetChange={handleLinkTargetChange} selectedTarget={this.props.selectedTarget}/>\n                )}\n            </div>\n        );\n    }\n\n    /**\n     * Lifecycle. Invoked before rendering when new props or state are being received.\n     * This method is not called for the initial render or when forceUpdate is used.\n     *\n     * @instance\n     * @memberof ButtonLinkTargetEdit\n     * @method  shouldComponentUpdate\n     * @return {Boolean} Returns false when the transition to the new props and state will not\n     * require a component update.\n     */\n    shouldComponentUpdate(nextProps) {\n        return nextProps.expanded !== this.props.expanded || nextProps.selectedTarget !== this.props.selectedTarget;\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default linkTargetEdit\n * @memberof ButtonLinkTargetEdit\n * @property {String} key\n * @static\n */\nButtonLinkTargetEdit.key = 'linkTargetEdit';\n\nexport default ButtonLinkTargetEdit;\n","/**\n * ButtonCfgProps is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonCfgProps\n */\nexport default WrappedComponent => class extends WrappedComponent {\n    /**\n     * Merges the properties, passed to the current component with user's configuration\n     * via `buttonCfg` property.\n     *\n     * @instance\n     * @memberof ButtonCfgProps\n     * @method mergeButtonCfgProps\n     * @param {Object} props The properties to be merged with the provided configuration for this\n     * button. If not passed, the user configuration will be merged with `this.props`\n     * @return {Object} The merged properties\n     */\n    mergeButtonCfgProps(props) {\n        props = props || this.props;\n\n        var nativeEditor = this.props.editor.get('nativeEditor');\n        var buttonCfg = nativeEditor.config.buttonCfg || {};\n        var result = CKEDITOR.tools.merge(props, buttonCfg['linkEdit']);\n\n        return result;\n    }\n};","import ButtonCfgProps from '../base/button-props.js';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\nimport Lang from '../../oop/lang.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport WidgetDropdown from '../base/widget-dropdown.js';\nimport WidgetFocusManager from '../base/widget-focus-manager.js';\n\n/**\n * The ButtonLinkEdit class provides functionality for creating and editing a link in a document.\n * Provides UI for creating, editing and removing a link.\n *\n * @class ButtonLinkEdit\n * @uses ButtonCfgProps\n * @uses WidgetDropdown\n * @uses WidgetFocusManager\n */\nclass ButtonLinkEdit extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.linkInput = React.createRef();\n        this.state = this._getInitialState();\n    }\n\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * Focuses on the link input to immediately allow editing. This should only happen if the component\n     * is rendered in exclusive mode to prevent aggressive focus stealing.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        if (this.props.renderExclusive || this.props.manualSelection) {\n            // We need to wait for the next rendering cycle before focusing to avoid undesired\n            // scrolls on the page\n            this._focusLinkInput();\n        }\n    }\n\n    /**\n     * Lifecycle. Invoked when a component is receiving new props.\n     * This method is not called for the initial render.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method componentWillReceiveProps\n     */\n    componentWillReceiveProps() {\n        this.setState(this._getInitialState());\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var targetSelector = {\n            allowedTargets: this.props.allowedTargets,\n            editor: this.props.editor,\n            handleLinkTargetChange: this._handleLinkTargetChange.bind(this),\n            selectedTarget: this.state.linkTarget || AlloyEditor.Strings.linkTargetDefault\n        };\n\n        targetSelector = this.mergeDropdownProps(targetSelector, ButtonLinkTargetEdit.key);\n\n        var autocompleteDropdown;\n\n        if (this.props.data) {\n            var dataFn = this.props.data;\n\n            if (!Lang.isFunction(dataFn)) {\n                var items = this.props.data;\n\n                dataFn = () => items;\n            }\n\n            var autocompleteDropdownProps = {\n                autocompleteSelected: this.state.autocompleteSelected,\n                data: dataFn,\n                editor: this.props.editor,\n                handleLinkAutocompleteClick: this._handleLinkAutocompleteClick,\n                onDismiss: this.props.toggleDropdown,\n                setAutocompleteState: this._setAutocompleteState,\n                term: this.state.linkHref\n            };\n\n            autocompleteDropdownProps = this.mergeDropdownProps(autocompleteDropdownProps, ButtonLinkAutocompleteList.key);\n\n            autocompleteDropdown = <ButtonLinkAutocompleteList {...autocompleteDropdownProps} />;\n        }\n\n        var buttonClearLink;\n\n        if (this.state.linkHref) {\n            buttonClearLink = <button aria-label={AlloyEditor.Strings.clearInput} className=\"ae-button ae-icon-remove\" onClick={this._clearLink.bind(this)} title={AlloyEditor.Strings.clear}></button>;\n        }\n\n        var placeholderProp = {};\n\n        if (!CKEDITOR.env.ie && AlloyEditor.Strings) {\n            placeholderProp.placeholder = AlloyEditor.Strings.editLink;\n        }\n\n        return (\n            <div className=\"ae-container-edit-link\">\n                <button aria-label={AlloyEditor.Strings.removeLink} className=\"ae-button\" disabled={!this.state.element} onClick={this._removeLink.bind(this)} title={AlloyEditor.Strings.remove}>\n                    <span className=\"ae-icon-unlink\"></span>\n                </button>\n                <div className=\"ae-container-input xxl\">\n                    {this.props.showTargetSelector && <ButtonLinkTargetEdit {...targetSelector} />}\n                    <div className=\"ae-container-input\">\n                        <input className=\"ae-input\" onChange={this._handleLinkHrefChange.bind(this)} onKeyDown={this._handleKeyDown.bind(this)} { ...placeholderProp } ref={this.linkInput} type=\"text\" value={this.state.linkHref}></input>\n                        {autocompleteDropdown}\n                    </div>\n                    {buttonClearLink}\n                </div>\n                <button aria-label={AlloyEditor.Strings.confirm} className=\"ae-button\" disabled={!this._isValidState()} onClick={this._updateLink.bind(this)} title={AlloyEditor.Strings.confirm}>\n                    <span className=\"ae-icon-ok\"></span>\n                </button>\n            </div>\n        );\n    }\n\n    /**\n     * The return value will be used as the initial value of this.state.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _getInitialState\n     * @protected\n     * @return {Object}\n     */\n    _getInitialState() {\n        const {editor, defaultLinkTarget} = this.props;\n\n        const link = new CKEDITOR.Link(editor.get('nativeEditor')).getFromSelection();\n        const href = link ? link.getAttribute('href') : '';\n        const target = link ? link.getAttribute('target') : defaultLinkTarget;\n\n        return {\n            autocompleteSelected: false,\n            element: link,\n            initialLink: {\n                href: href,\n                target: target\n            },\n            linkHref: href,\n            linkTarget: target\n        };\n    }\n\n    /**\n     * Clears the link input. This only changes the component internal state, but does not\n     * affect the link element of the editor. Only the _removeLink and _updateLink methods\n     * are translated to the editor element.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _clearLink\n     * @protected\n     */\n    _clearLink() {\n        this.setState({\n            linkHref: ''\n        });\n\n        this._focusLinkInput();\n    }\n\n    /**\n     * Focuses the user cursor on the widget's input.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _focusLinkInput\n     * @protected\n     */\n    _focusLinkInput() {\n        var instance = this;\n\n        var focusLinkEl = function() {\n            instance.linkInput.current.focus();\n        };\n\n        if (window.requestAnimationFrame) {\n            window.requestAnimationFrame(focusLinkEl);\n        } else {\n            setTimeout(focusLinkEl, 0);\n        }\n    }\n\n    /**\n     * Monitors key interaction inside the input element to respond to the keys:\n     * - Enter: Creates/updates the link.\n     * - Escape: Discards the changes.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _handleKeyDown\n     * @param {SyntheticEvent} event The keyboard event.\n     * @protected\n     */\n    _handleKeyDown(event) {\n        if (event.keyCode === 13 || event.keyCode === 27) {\n            event.preventDefault();\n        }\n\n        if (event.keyCode === 13) {\n            this._updateLink();\n        } else if (event.keyCode === 40) {\n            this.setState({\n                autocompleteSelected: true\n            });\n        } else if (event.keyCode === 27) {\n            var editor = this.props.editor.get('nativeEditor');\n\n            new CKEDITOR.Link(editor).advanceSelection();\n\n            this.props.editor.get('nativeEditor').fire('actionPerformed', this);\n        }\n    }\n\n    /**\n     * Updates the component state when the link input changes on user interaction.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _handleLinkHrefChange\n     * @param {SyntheticEvent} event The change event.\n     * @protected\n     */\n    _handleLinkHrefChange(event) {\n        this.setState({\n            linkHref: event.target.value\n        });\n\n        this._focusLinkInput();\n    }\n\n    /**\n     * Updates the component state when the link target changes on user interaction.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _handleLinkTargetChange\n     * @param {SyntheticEvent} event The click event.\n     * @protected\n     */\n    _handleLinkTargetChange(event) {\n        this.setState({\n            itemDropdown: null,\n            linkTarget: event.target.getAttribute('data-value')\n        });\n\n        this._focusLinkInput();\n    }\n\n    /**\n     * Updates the component state when an autocomplete link result is selected by user interaction.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _handleLinkAutocompleteClick\n     * @param {SyntheticEvent} event The click event.\n     * @protected\n     */\n    _handleLinkAutocompleteClick(event) {\n        this.setState({\n            itemDropdown: null,\n            linkHref: event.target.getAttribute('data-value')\n        });\n\n        this._focusLinkInput();\n    }\n\n    /**\n     * Verifies that the current link state is valid so the user can save the link. A valid state\n     * means that we have a non-empty href and that either that or the link target are different\n     * from the original link.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _isValidState\n     * @protected\n     * @return {Boolean} [description]\n     */\n    _isValidState() {\n        var validState =\n            this.state.linkHref && (\n                this.state.linkHref !== this.state.initialLink.href ||\n                this.state.linkTarget !== this.state.initialLink.target\n            );\n\n        return validState;\n    }\n\n    /**\n     * Removes the link in the editor element.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _removeLink\n     * @protected\n     */\n    _removeLink() {\n        var editor = this.props.editor.get('nativeEditor');\n        var linkUtils = new CKEDITOR.Link(editor);\n        var selection = editor.getSelection();\n        var bookmarks = selection.createBookmarks();\n\n        linkUtils.remove(this.state.element, { advance: true });\n\n        selection.selectBookmarks(bookmarks);\n\n        // We need to cancelExclusive with the bound parameters in case the button is used\n        // inside another in exclusive mode (such is the case of the link button)\n        this.props.cancelExclusive();\n\n        editor.fire('actionPerformed', this);\n    }\n\n    /**\n     * Update autocompleteSelected state to focus and select autocomplete´s dropdown\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _setAutocompleteState\n     * @protected\n     */\n    _setAutocompleteState(state) {\n        this.setState({\n            autocompleteSelected: state.selected\n        });\n    }\n\n    /**\n     * Updates the link in the editor element. If the element didn't exist previously, it will\n     * create a new <a> element with the href specified in the link input.\n     *\n     * @instance\n     * @memberof ButtonLinkEdit\n     * @method _updateLink\n     * @protected\n     */\n    _updateLink() {\n        var editor = this.props.editor.get('nativeEditor');\n        var linkUtils = new CKEDITOR.Link(editor, {appendProtocol: this.props.appendProtocol});\n        var linkAttrs = {\n            target: this.state.linkTarget\n        };\n        var modifySelection = { advance: true };\n\n        if (this.state.linkHref) {\n            if (this.state.element) {\n                linkAttrs.href = this.state.linkHref;\n\n                linkUtils.update(linkAttrs, this.state.element, modifySelection);\n            } else {\n                linkUtils.create(this.state.linkHref, linkAttrs, modifySelection);\n            }\n\n            editor.fire('actionPerformed', this);\n        }\n\n        // We need to cancelExclusive with the bound parameters in case the button is used\n        // inside another in exclusive mode (such is the case of the link button)\n        this.props.cancelExclusive();\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default linkEdit\n * @memberof ButtonLinkEdit\n * @property {String} key\n * @static\n */\nButtonLinkEdit.key = 'linkEdit';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonLinkEdit\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonLinkEdit.defaultProps = {\n    appendProtocol: true,\n    autocompleteUrl: '',\n    circular: true,\n    customIndexStart: true,\n    defaultLinkTarget: '',\n    descendants: '.ae-toolbar-element',\n    keys: {\n        dismiss: [27],\n        dismissNext: [39],\n        dismissPrev: [37],\n        next: [40],\n        prev: [38]\n    },\n    showTargetSelector: true\n};\n\nexport default ButtonCfgProps(\n    WidgetDropdown(\n    WidgetFocusManager(\n        ButtonLinkEdit\n)));\n","import ButtonDropdown from './button-dropdown.jsx';\nimport WidgetFocusManager from '../base/widget-focus-manager.js';\nimport React from 'react';\n\n/**\n * The ButtonLinkAutocompleteList class provides functionality for showing a list of\n * items that can be selected for the link.\n *\n * @class ButtonLinkAutocompleteList\n * @uses WidgetFocusManager\n */\nclass ButtonLinkAutocompleteList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: []\n        };\n    }\n\n    /**\n     * Lifecycle. Invoked when a component is receiving new props.\n     * This method is not called for the initial render.\n     *\n     * @instance\n     * @memberof ButtonLinkAutocompleteList\n     * @method componentWillReceiveProps\n     */\n    componentWillReceiveProps(nextProps) {\n        if (!nextProps.term || nextProps.term !== this.props.term) {\n            clearTimeout(this._timeout);\n\n            if (nextProps.term) {\n                this._timeout = setTimeout(this._updateItems, this.props.delay);\n            } else {\n                this.setState({\n                    items: []\n                });\n            }\n        }\n\n        if (nextProps.autocompleteSelected) {\n            setTimeout(this.focus, 0);\n            this.props.setAutocompleteState({\n                selected: false\n            });\n        }\n    }\n\n    /**\n     * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n     *\n     * @instance\n     * @memberof ButtonLinkAutocompleteList\n     * @method componentWillUnmount\n     */\n    componentWillUnmount() {\n        clearTimeout(this._timeout);\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the list.\n     *\n     * @instance\n     * @memberof ButtonLinkAutocompleteList\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        if (!this.props.expanded || !this.state.items.length) {\n            return null;\n        }\n\n        return (\n            <ButtonDropdown>\n                {this._renderAutocompleteItems(this.state.items)}\n            </ButtonDropdown>\n        );\n    }\n\n    /**\n     * Lifecycle. Invoked before rendering when new props or state are being received.\n     * This method is not called for the initial render or when forceUpdate is used.\n     *\n     * @instance\n     * @memberof ButtonLinkAutocompleteList\n     * @method  shouldComponentUpdate\n     * @return {Boolean} Returns false when the transition to the new props and state will not\n     * require a component update.\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.expanded !== this.props.expanded || nextProps.term !== this.props.term || nextState.items !== this.state.items;\n    }\n\n    /**\n     * Renders a set of list items for the provided items\n     *\n     * @instance\n     * @memberof ButtonLinkAutocompleteList\n     * @method _renderAutocompleteItems\n     * @param {Array} items List of autocomplete items to render\n     * @protected\n     * @return {Array} Rendered list item instances\n     */\n    _renderAutocompleteItems(items) {\n        items = items || [];\n\n        var handleLinkAutocompleteClick = this.props.handleLinkAutocompleteClick;\n\n        return items.map(function(item) {\n            var className = this.props.term === item.url ? 'ae-toolbar-element active' : 'ae-toolbar-element';\n\n            return (\n                <li key={item.url} role=\"option\">\n                    <button className={className} onClick={handleLinkAutocompleteClick} data-value={item.url}>{item.title}</button>\n                </li>\n            );\n        }.bind(this));\n    }\n\n    /**\n     * Retrieves the data according to {this.props.term} and calls setState() with the returned data\n     *\n     * @instance\n     * @memberof ButtonLinkAutocompleteList\n     * @method _updateItems\n     * @protected\n     */\n    _updateItems() {\n        var instance = this;\n\n        if (!this.props.term) {\n            return;\n        }\n\n        var promise = Promise.resolve(this.props.data(this.props.term));\n\n        promise.then(function(items) {\n            if (items.length) {\n                !instance.props.expanded && instance.props.toggleDropdown();\n            }\n\n            instance.setState({\n                items: items\n            });\n        });\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default buttonLinkAutocompleteList\n * @memberof ButtonLinkAutocompleteList\n * @property {String} key\n * @static\n */\nButtonLinkAutocompleteList.key = 'buttonLinkAutocompleteList';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonLinkAutocompleteList\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonLinkAutocompleteList.defaultProps = {\n    circular: false,\n    data: [],\n    delay: 100,\n    descendants: '.ae-toolbar-element',\n    keys: {\n        dismiss: [27],\n        dismissNext: [39],\n        dismissPrev: [37],\n        next: [40],\n        prev: [38]\n    }\n};\n\nexport default WidgetFocusManager(\n    ButtonLinkAutocompleteList\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar KEY_ENTER = 13;\nvar KEY_ESC = 27;\n\n/**\n * The ButtonEmbedEdit class provides functionality for creating and editing an embed link in a document.\n * Provides UI for creating and editing an embed link.\n *\n * @class ButtonEmbedEdit\n */\nclass ButtonEmbedEdit extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.linkInput = React.createRef();\n        this.state = this.getInitialState();\n    }\n\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * Focuses on the link input to immediately allow editing. This should only happen if the component\n     * is rendered in exclusive mode to prevent aggressive focus stealing.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        if (this.props.renderExclusive || this.props.manualSelection) {\n            // We need to wait for the next rendering cycle before focusing to avoid undesired\n            // scrolls on the page\n            if (window.requestAnimationFrame) {\n                window.requestAnimationFrame(this._focusLinkInput.bind(this));\n            } else {\n                setTimeout(this._focusLinkInput.bind(this), 0);\n            }\n        }\n    }\n\n    /**\n     * Lifecycle. Invoked when a component is receiving new props.\n     * This method is not called for the initial render.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method componentWillReceiveProps\n     */\n    componentWillReceiveProps() {\n        this.setState(this.getInitialState());\n    }\n\n    /**\n     * Lifecycle. Invoked once before the component is mounted.\n     * The return value will be used as the initial value of this.state.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method getInitialState\n     */\n    getInitialState() {\n        var editor = this.props.editor.get('nativeEditor');\n        var embed;\n\n        var selection = editor.getSelection();\n\n        if (selection) {\n            var selectedElement = selection.getSelectedElement();\n\n            if (selectedElement) {\n                embed = selectedElement.findOne('[data-widget=\"ae_embed\"]');\n            }\n        }\n\n        var href = embed ? embed.getAttribute('data-ae-embed-url') : '';\n\n        return {\n            element: embed,\n            initialLink: {\n                href: href\n            },\n            linkHref: href\n        };\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var clearLinkStyle = {\n            opacity: this.state.linkHref ? 1 : 0\n        };\n\n        return (\n            <div className=\"ae-container-edit-link\">\n                <button aria-label={AlloyEditor.Strings.deleteEmbed} className=\"ae-button\" data-type=\"button-embed-remove\" disabled={!this.state.element} onClick={this._removeEmbed.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.deleteEmbed}>\n                    <span className=\"ae-icon-bin\"></span>\n                </button>\n                <div className=\"ae-container-input xxl\">\n                    <input className=\"ae-input\" onChange={this._handleLinkHrefChange.bind(this)} onKeyDown={this._handleKeyDown.bind(this)} placeholder={AlloyEditor.Strings.editLink} ref={this.linkInput} type=\"text\" value={this.state.linkHref}></input>\n                    <button aria-label={AlloyEditor.Strings.clearInput} className=\"ae-button ae-icon-remove\" onClick={this._clearLink.bind(this)} style={clearLinkStyle} title={AlloyEditor.Strings.clear}></button>\n                </div>\n                <button aria-label={AlloyEditor.Strings.confirm} className=\"ae-button\" disabled={!this._isValidState()} onClick={this._embedLink.bind(this)} title={AlloyEditor.Strings.confirm}>\n                    <span className=\"ae-icon-ok\"></span>\n                </button>\n            </div>\n        );\n    }\n\n    /**\n     * Clears the link input. This only changes the component internal state, but does not\n     * affect the link element of the editor. Only the _removeLink and _updateLink methods\n     * are translated to the editor element.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method _clearLink\n     * @protected\n     */\n    _clearLink() {\n        this.setState({\n            linkHref: ''\n        });\n    }\n\n    /**\n     * Triggers the embedUrl command to transform the link into an embed media object\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method _embedLink\n     * @protected\n     */\n    _embedLink() {\n        var nativeEditor = this.props.editor.get('nativeEditor');\n\n        nativeEditor.execCommand('embedUrl', {\n            url: this.state.linkHref\n        });\n\n        // We need to cancelExclusive with the bound parameters in case the button is used\n        // inside another in exclusive mode (such is the case of the link button)\n        this.props.cancelExclusive();\n    }\n\n    /**\n     * Focuses the user cursor on the widget's input.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method _focusLinkInput\n     * @protected\n     */\n    _focusLinkInput() {\n        this.linkInput.current.focus();\n    }\n\n    /**\n     * Monitors key interaction inside the input element to respond to the keys:\n     * - Enter: Creates/updates the link.\n     * - Escape: Discards the changes.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method _handleKeyDown\n     * @param {SyntheticEvent} event The keyboard event.\n     * @protected\n     */\n    _handleKeyDown(event) {\n        if (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n            event.preventDefault();\n        }\n\n        if (event.keyCode === KEY_ENTER) {\n            this._embedLink();\n        } else if (event.keyCode === KEY_ESC) {\n            var editor = this.props.editor.get('nativeEditor');\n\n            // We need to cancelExclusive with the bound parameters in case the button is used\n            // inside another in exclusive mode (such is the case of the link button)\n            this.props.cancelExclusive();\n\n            editor.fire('actionPerformed', this);\n        }\n    }\n\n    /**\n     * Updates the component state when the link input changes on user interaction.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method _handleLinkHrefChange\n     * @param {SyntheticEvent} event The change event.\n     * @protected\n     */\n    _handleLinkHrefChange(event) {\n        this.setState({\n            linkHref: event.target.value\n        });\n    }\n\n    /**\n     * Verifies that the current link state is valid so the user can save the link. A valid state\n     * means that we have a non-empty href that's different from the original one.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method _isValidState\n     * @protected\n     * @return {Boolean} True if the state is valid, false otherwise\n     */\n    _isValidState() {\n        var validState =\n            this.state.linkHref && (\n                this.state.linkHref !== this.state.initialLink.href\n            );\n\n        return validState;\n    }\n\n    /**\n     * Removes the embed in the editor element.\n     *\n     * @instance\n     * @memberof ButtonEmbedEdit\n     * @method _removeEmbed\n     * @protected\n     */\n    _removeEmbed() {\n        var editor = this.props.editor.get('nativeEditor');\n\n        var embedWrapper = this.state.element.getAscendant(function(element) {\n            return element.hasClass('cke_widget_wrapper');\n        });\n\n        embedWrapper.remove();\n\n        editor.fire('actionPerformed', this);\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default embedEdit\n * @memberof ButtonEmbedEdit\n * @property {String} key\n * @static\n */\nButtonEmbedEdit.key = 'embedEdit';\n\nexport default ButtonEmbedEdit;\n","import ButtonCommand from '../base/button-command.js';\nimport React from 'react';\n\n/**\n * The ButtonCommandListItem class is a UI class that renders a ButtonCommand that can be used inside\n * a list as an item, with a string representation of its behaviour.\n *\n * @class ButtonCommandListItem\n * @uses ButtonCommand\n */\nclass ButtonCommandListItem extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonCommandListItem\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        return (\n            <button aria-label={this.props.description} className={this._getClassName()} onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex}>{this.props.description}</button>\n        );\n    }\n\n    /**\n     * Returns the class name of Widget.\n     *\n     * @instance\n     * @memberof ButtonCommandListItem\n     * @method _getClassName\n     * @protected\n     * @return {String} The class name of the Widget.\n     */\n    _getClassName() {\n        var className = 'ae-toolbar-element';\n\n        if (this.props.icon) {\n            className += ' ae-icon-' + this.props.icon;\n        }\n\n        return className;\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default buttonCommandListItem\n * @memberof ButtonCommandListItem\n * @property {String} key\n * @static\n */\nButtonCommandListItem.key = 'buttonCommandListItem';\n\nexport default ButtonCommand(\n    ButtonCommandListItem\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * The ButtonCameraImage class takes photo from camera and inserts it to the content.\n *\n * @class ButtonCameraImage\n */\nclass ButtonCameraImage extends React.Component {\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * Focuses the take photo button.\n     *\n     * @instance\n     * @memberof ButtonCameraImage\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        ReactDOM.findDOMNode(this.refs.buttonTakePhoto).focus();\n    }\n\n    /**\n     * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n     *\n     * @instance\n     * @memberof ButtonCameraImage\n     * @method componentWillUnmount\n     */\n    componentWillUnmount() {\n        if (this._stream) {\n            if (this._stream.stop) {\n                this._stream.stop();\n            } else if (this._stream.getVideoTracks) {\n                this._stream.getVideoTracks().forEach(function(track) {\n                    track.stop();\n                });\n            }\n            this._stream = null;\n        }\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonCameraImage\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var getUserMedia = navigator.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia ||\n            navigator.msGetUserMedia;\n\n        getUserMedia.call(navigator, {\n            video: true,\n            audio: false\n        }, this._handleStreamSuccess.bind(this), this._handleStreamError.bind(this));\n\n        return (\n            <div className=\"ae-camera\">\n                <video ref=\"videoContainer\">Video stream not available.</video>\n                <button className=\"ae-camera-shoot\" onClick={this.takePhoto.bind(this)} ref=\"buttonTakePhoto\">Take photo</button>\n                <canvas className=\"ae-camera-canvas\" ref=\"canvasContainer\"></canvas>\n            </div>\n        );\n    }\n\n    /**\n     * Takes photo from the video stream and inserts in into editor's content.\n     *\n     * @fires ButtonCameraImage#imageCameraAdd\n     * @instance\n     * @memberof ButtonCameraImage\n     * @method takePhoto\n     */\n    takePhoto() {\n        var videoEl = ReactDOM.findDOMNode(this.refs.videoContainer);\n        var canvasEl = ReactDOM.findDOMNode(this.refs.canvasContainer);\n\n        var context = canvasEl.getContext('2d');\n\n        var height = this._videoHeight;\n        var width = this.props.videoWidth;\n\n        if (width && height) {\n            canvasEl.width = width;\n            canvasEl.height = height;\n\n            context.drawImage(videoEl, 0, 0, width, height);\n\n            var imgURL = canvasEl.toDataURL('image/png');\n\n            var el = CKEDITOR.dom.element.createFromHtml('<img src=\"' + imgURL + '\">');\n\n            var editor = this.props.editor.get('nativeEditor');\n\n            editor.insertElement(el);\n\n            this.props.cancelExclusive();\n\n            editor.fire('actionPerformed', this);\n\n            editor.fire('imageCameraAdd', el);\n        }\n    }\n\n    /**\n     * Displays error message in case of video stream capturing failure.\n     *\n     * @instance\n     * @memberof ButtonCameraImage\n     * @method _handleStreamError\n     * @param {Event} error The fired event in case of error.\n     * @protected\n     */\n    _handleStreamError(error) {\n        window.alert('An error occurred! ' + error);\n    }\n\n    /**\n     * Starts streaming video in the video element and sets width/height to the video\n     * and canvas elements.\n     *\n     * @instance\n     * @memberof ButtonCameraImage\n     * @method _handleStreamSuccess\n     * @param {Object} stream The video stream\n     * @protected\n     */\n    _handleStreamSuccess(stream) {\n        var videoEl = ReactDOM.findDOMNode(this.refs.videoContainer);\n        var canvasEl = ReactDOM.findDOMNode(this.refs.canvasContainer);\n\n        videoEl.addEventListener('canplay', function(event) {\n            var height = videoEl.videoHeight / (videoEl.videoWidth/this.props.videoWidth);\n\n            if (isNaN(height)) {\n                height = this.props.videoWidth / (4/3);\n            }\n\n            videoEl.setAttribute('width', this.props.videoWidth);\n            videoEl.setAttribute('height', height);\n            canvasEl.setAttribute('width', this.props.videoWidth);\n            canvasEl.setAttribute('height', height);\n\n            this._videoHeight = height;\n        }.bind(this), false);\n\n        this._stream = stream;\n\n        if (navigator.mozGetUserMedia) {\n            videoEl.mozSrcObject = stream;\n        } else {\n            videoEl.src = (window.URL || window.webkitURL).createObjectURL(stream);\n        }\n\n        videoEl.play();\n\n        ReactDOM.findDOMNode(this.refs.buttonTakePhoto).disabled = false;\n    }\n\n    /**\n     * Fired when an image is being taken from the camera and added as an element to the editor.\n     *\n     * @event ButtonCameraImage#imageCameraAdd\n     * @memberof ButtonCameraImage\n     * @param {CKEDITOR.dom.element} el The created img element in editor.\n     */\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default cameraImage\n * @memberof ButtonCameraImage\n * @property {String} key\n * @static\n */\nButtonCameraImage.key = 'cameraImage';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonCameraImage\n * @method getDefaultProps\n */\nButtonCameraImage.defaultProps = {\n    videoWidth: 320\n};\n\nexport default ButtonCameraImage;\n","import Lang from './lang';\n\n/**\n * Sets the prototype, constructor and superclass properties to support an inheritance strategy\n * that can chain constructors and methods. Static members will not be inherited.\n *\n * @memberof OOP\n * @method extend\n * @param {Function} receiver The class which will extend another class.\n * @param {Function} supplier The class which will provide the properties the child class.\n * @param {Object} protoProps Prototype properties to add/override.\n * @param {Object} staticProps Static properties to add/overwrite.\n * @return {Function} The extended class.\n * @static\n */\nconst extend = function(receiver, supplier, protoProps, staticProps) {\n    if (!supplier || !receiver) {\n        throw 'extend failed, verify dependencies';\n    }\n\n    var supplierProto = supplier.prototype, receiverProto = Object.create(supplierProto);\n    receiver.prototype = receiverProto;\n\n    receiverProto.constructor = receiver;\n    receiver.superclass = supplierProto;\n\n    // assign constructor property\n    if (supplier !== Object && supplierProto.constructor === Object.prototype.constructor) {\n        supplierProto.constructor = supplier;\n    }\n\n    // add prototype overrides\n    if (protoProps) {\n        Lang.mix(receiverProto, protoProps);\n    }\n\n    // add object overrides\n    if (staticProps) {\n        Lang.mix(receiver, staticProps);\n    }\n\n    return receiver;\n};\n\nexport default extend;","import Lang from '../../oop/lang.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ToolbarButtons from '../base/toolbar-buttons.js';\nimport WidgetArrowBox from '../base/widget-arrow-box.js';\nimport WidgetDropdown from '../base/widget-dropdown.js';\nimport WidgetExclusive from '../base/widget-exclusive.js';\nimport WidgetFocusManager from '../base/widget-focus-manager.js';\nimport WidgetPosition from '../base/widget-position.js';\n\n/**\n * The ToolbarStyles class hosts the buttons for styling a text selection.\n *\n * @class ToolbarStyles\n * @uses ToolbarButtons\n * @uses WidgetArrowBox\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n * @uses WidgetPosition\n */\nclass ToolbarStyles extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    /**\n     * Lifecycle. Invoked once, only on the client (not on the server),\n     * immediately after the initial rendering occurs.\n     *\n     * @instance\n     * @memberof ToolbarStyles\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        this._updatePosition();\n    }\n\n    /**\n     * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n     * This method is not called for the initial render.\n     *\n     * @instance\n     * @memberof ToolbarStyles\n     * @method componentDidUpdate\n     * @param {Object} prevProps The previous state of the component's properties.\n     * @param {Object} prevState Component's previous state.\n     */\n    componentDidUpdate(prevProps, prevState) {\n        this._updatePosition();\n    }\n\n    /**\n     * Lifecycle. Renders the buttons for adding content or hides the toolbar\n     * if user interacted with a non-editable element.\n     *\n     * @instance\n     * @memberof ToolbarStyles\n     * @method render\n     * @return {Object|null} The content which should be rendered.\n     */\n    render() {\n        var currentSelection = this._getCurrentSelection();\n\n        if (currentSelection) {\n            var getArrowBoxClassesFn = this._getSelectionFunction(currentSelection.getArrowBoxClasses);\n            var arrowBoxClasses;\n\n            if (getArrowBoxClassesFn) {\n                arrowBoxClasses = getArrowBoxClassesFn();\n            } else {\n                arrowBoxClasses = this.getArrowBoxClasses();\n            }\n\n            var cssClasses = 'ae-toolbar-styles ' + arrowBoxClasses;\n\n            var buttons = this.getToolbarButtons(\n                currentSelection.buttons,\n                {\n                    manualSelection: this.props.editorEvent ? this.props.editorEvent.data.manualSelection : null,\n                    selectionType: currentSelection.name\n                }\n            );\n\n            return (\n                <div aria-label={AlloyEditor.Strings.styles} className={cssClasses} data-tabindex={this.props.config.tabIndex || 0} onFocus={this.focus.bind(this)} onKeyDown={this.handleKey.bind(this)} role=\"toolbar\" tabIndex=\"-1\">\n                    <div className=\"ae-container\">\n                        {buttons}\n                    </div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Retrieve a function from String. It converts a fully qualified string into the mapped function.\n     *\n     * @instance\n     * @memberof ToolbarStyles\n     * @method _getSelectionFunction\n     * @param {Function|String} selectionFn A function, or a fully qualified string pointing to the desired one (e.g. 'AlloyEditor.SelectionTest.image').\n     * @protected\n     * @return {Function} The mapped function.\n     */\n    _getSelectionFunction(selectionFn) {\n        var selectionFunction;\n\n        if (Lang.isFunction(selectionFn)) {\n            selectionFunction = selectionFn;\n\n        } else if (Lang.isString(selectionFn)) {\n            var parts = selectionFn.split('.');\n            var currentMember = window;\n            var property = parts.shift();\n\n            while (property && Lang.isObject(currentMember) && Lang.isObject(currentMember[property])) {\n                currentMember = currentMember[property];\n                property = parts.shift();\n            }\n\n            if (Lang.isFunction(currentMember)) {\n                selectionFunction = currentMember;\n            }\n        }\n\n        return selectionFunction;\n    }\n\n    /**\n     * Analyzes the current editor selection and returns the selection configuration that matches.\n     *\n     * @instance\n     * @memberof ToolbarStyles\n     * @method _getCurrentSelection\n     * @protected\n     * @return {Object} The matched selection configuration.\n     */\n    _getCurrentSelection() {\n        var eventPayload = this.props.editorEvent ? this.props.editorEvent.data : null;\n        var selection;\n\n        if (eventPayload) {\n            this.props.config.selections.some(function(item) {\n                var testFn = this._getSelectionFunction(item.test);\n                var result;\n\n                if (testFn) {\n                    result = eventPayload.manualSelection === item.name || testFn({\n                        data: eventPayload,\n                        editor: this.props.editor\n                    });\n                }\n\n                if (result) {\n                    selection = item;\n                }\n\n                return result;\n            }, this);\n        }\n\n        return selection;\n    }\n\n    /**\n     * Calculates and sets the position of the toolbar.\n     *\n     * @instance\n     * @memberof ToolbarStyles\n     * @method _updatePosition\n     * @protected\n     */\n    _updatePosition() {\n        // If component is not mounted, there is nothing to do\n        if (!ReactDOM.findDOMNode(this)) {\n            return;\n        }\n\n        var currentSelection = this._getCurrentSelection();\n        var result;\n\n        // If current selection has a function called `setPosition`, call it\n        // and check the returned value. If false, fallback to the default positioning logic.\n        if (currentSelection) {\n            var setPositionFn = this._getSelectionFunction(currentSelection.setPosition);\n\n            if (setPositionFn) {\n                result = setPositionFn.call(this, {\n                    editor: this.props.editor,\n                    editorEvent: this.props.editorEvent,\n                    selectionData: this.props.selectionData\n                });\n            }\n        }\n\n        if (!result) {\n            this.updatePosition();\n            this.show();\n        }\n    }\n}\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarStyles\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarStyles.defaultProps = {\n    circular: true,\n    descendants: '.ae-input, .ae-button:not([disabled]), .ae-toolbar-element',\n    keys: {\n        dismiss: [27],\n        next: [39, 40],\n        prev: [37, 38]\n    }\n};\n\n/**\n* The name which will be used as an alias of the button in the configuration.\n*\n* @default styles\n* @memberof ToolbarStyles\n* @property {String} key\n* @static\n*/\nToolbarStyles.key = 'styles';\n\nexport default WidgetArrowBox(\n    WidgetDropdown(\n    WidgetExclusive(\n    WidgetFocusManager(\n    WidgetPosition(\n    ToolbarButtons(\n        ToolbarStyles\n))))));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ToolbarButtons from '../base/toolbar-buttons.js';\nimport WidgetArrowBox from '../base/widget-arrow-box.js';\nimport WidgetDropdown from '../base/widget-dropdown.js';\nimport WidgetExclusive from '../base/widget-exclusive.js';\nimport WidgetFocusManager from '../base/widget-focus-manager.js';\nimport WidgetPosition from '../base/widget-position.js';\n\nvar POSITION_LEFT = 1;\nvar POSITION_RIGHT = 2;\n\n/**\n * The ToolbarAdd class provides functionality for adding content to the editor.\n *\n * @class ToolbarAdd\n * @uses ToolbarButtons\n * @uses WidgetArrowBox\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n * @uses WidgetPosition\n */\nclass ToolbarAdd extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    /**\n     * Lifecycle. Invoked once, only on the client (not on the server),\n     * immediately after the initial rendering occurs.\n     *\n     * @instance\n     * @memberof ToolbarAdd\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        this._updatePosition();\n    }\n\n    /**\n     * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n     * This method is not called for the initial render.\n     *\n     * @instance\n     * @memberof ToolbarAdd\n     * @method componentDidUpdate\n     * @param {Object} prevProps The previous state of the component's properties.\n     * @param {Object} prevState Component's previous state.\n     */\n    componentDidUpdate(prevProps, prevState) {\n        this._updatePosition();\n\n        // In case of exclusive rendering, focus the first descendant (button)\n        // so the user will be able to start interacting with the buttons immediately.\n        if (this.props.renderExclusive) {\n            this.focus();\n        }\n    }\n\n    /**\n     * Lifecycle. Renders the buttons for adding content or hides the toolbar\n     * if user interacted with a non-editable element.\n     *\n     * @instance\n     * @memberof ToolbarAdd\n     * @method render\n     * @return {Object|null} The content which should be rendered.\n     */\n    render() {\n        // Some operations such as `requestExclusive` may force editor to blur which will\n        // invalidate the `props.editorEvent` stored value, without causing a `props` change.\n        // For example, if the editor is empty, `ae_placeholder` plugin will remove\n        // the target from the DOM and will prevent `add` toolbar from rendering.\n        //\n        // It should be safe to assume that if you have been able to render the toolbar\n        // and request the exclusive mode, then rendering might be kept until the exclusive mode is left.\n        if (!this.state.itemExclusive &&\n                this.props.editorEvent &&\n                this.props.editorEvent.data.nativeEvent.target &&\n                !this.props.editorEvent.data.nativeEvent.target.isContentEditable) {\n            return null;\n        }\n\n        var buttons = this._getButtons();\n        var className = this._getToolbarClassName();\n\n        return (\n            <div aria-label={AlloyEditor.Strings.add} className={className} data-tabindex={this.props.config.tabIndex || 0} onFocus={this.focus.bind(this)} onKeyDown={this.handleKey.bind(this)} role=\"toolbar\" tabIndex=\"-1\">\n                <div className=\"ae-container\">\n                    {buttons}\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Returns a list of buttons that will eventually render to HTML.\n     *\n     * @instance\n     * @memberof ToolbarAdd\n     * @method _getButtons\n     * @protected\n     * @return {Object} The buttons which have to be rendered.\n     */\n    _getButtons() {\n        var buttons;\n\n        if (this.props.renderExclusive) {\n            buttons = this.getToolbarButtons(this.props.config.buttons);\n        } else {\n            if (this.props.selectionData && this.props.selectionData.region) {\n                buttons = (\n                    <button aria-label={AlloyEditor.Strings.add} className=\"ae-button ae-button-add\" onClick={this.props.requestExclusive.bind(this, ToolbarAdd.key)} title={AlloyEditor.Strings.add}>\n                        <span className=\"ae-icon-add\"></span>\n                    </button>\n                );\n            }\n        }\n\n        return buttons;\n    }\n\n    /**\n     * Returns the class name of the toolbar in case of both exclusive and normal mode.\n     *\n     * @instance\n     * @memberof ToolbarAdd\n     * @method _getToolbarClassName\n     * @protected\n     * @return {String} The class name which have to be applied to the DOM element.\n     */\n    _getToolbarClassName() {\n        var cssClass = 'ae-toolbar-add';\n\n        if (this.props.renderExclusive) {\n            cssClass = 'ae-toolbar ' + this.getArrowBoxClasses();\n        }\n\n        return cssClass;\n    }\n\n    /**\n     * Calculates and sets the position of the toolbar in exclusive or normal mode.\n     *\n     * @instance\n     * @memberof ToolbarAdd\n     * @method _updatePosition\n     * @protected\n     */\n    _updatePosition() {\n        var region;\n\n        // If component is not mounted, there is nothing to do\n        if (!ReactDOM.findDOMNode(this)) {\n            return;\n        }\n\n        if (this.props.renderExclusive) {\n            this.updatePosition();\n            this.show();\n        } else {\n            if (this.props.selectionData) {\n                region = this.props.selectionData.region;\n            }\n\n            if (region) {\n                var domNode = ReactDOM.findDOMNode(this);\n\n                var domElement = new CKEDITOR.dom.element(domNode);\n\n                var startRect = region.startRect || region;\n\n                var nativeEditor = this.props.editor.get('nativeEditor');\n\n                var clientRect = nativeEditor.editable().getClientRect();\n\n                var offsetLeft;\n\n                var position = this.props.config.position || this.props.position;\n\n                if (position === POSITION_LEFT) {\n                    offsetLeft = clientRect.left - domNode.offsetWidth - this.props.gutterExclusive.left + 'px';\n                } else {\n                    offsetLeft = clientRect.right + this.props.gutterExclusive.left + 'px';\n                }\n\n                domNode.style.left = offsetLeft;\n\n                domNode.style.top = Math.floor((region.bottom + region.top) / 2) + 'px';\n\n                if (nativeEditor.element.getStyle('overflow') !== 'auto') {\n                    domNode.style.top = Math.floor(region.top - domNode.offsetHeight/2 + startRect.height/2) + 'px';\n                } else {\n                    domNode.style.top = Math.floor( nativeEditor.element.$.offsetTop + (startRect.height / 2) - (domNode.offsetHeight / 2) ) + 'px';\n                }\n\n                domNode.style.opacity = 1;\n\n                domElement.removeClass('ae-arrow-box');\n\n                this.cancelAnimation();\n            }\n        }\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default add\n * @memberof ToolbarAdd\n * @property {String} key\n * @static\n */\nToolbarAdd.key = 'add';\n\n/**\n * Defines the constant for positioning the Toolbar on left of the editable area.\n *\n * @default 1\n * @memberof ToolbarAdd\n * @property {String} left\n * @static\n */\nToolbarAdd.left = POSITION_LEFT;\n\n/**\n * Defines the constant for positioning the Toolbar on right of the editable area.\n *\n * @default 2\n * @memberof ToolbarAdd\n * @property {String} right\n * @static\n */\nToolbarAdd.right = POSITION_RIGHT;\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarAdd\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarAdd.defaultProps = {\n    circular: true,\n    descendants: '.ae-button',\n    gutterExclusive: {\n        left: 10,\n        top: 0\n    },\n    keys: {\n        dismiss: [27],\n        next: [39, 40],\n        prev: [37, 38]\n    },\n    position: POSITION_LEFT\n};\n\nexport default WidgetArrowBox(\n    WidgetDropdown(\n    WidgetExclusive(\n    WidgetFocusManager(\n    WidgetPosition(\n    ToolbarButtons(\n        ToolbarAdd\n))))));","import ToolbarAdd from './toolbar-add.jsx';\nimport ToolbarStyles from './toolbar-styles.jsx';\n\nexport default {\n    [ToolbarAdd.key]: ToolbarAdd,\n    [ToolbarStyles.key]: ToolbarStyles\n};","import ButtonCommand from '../base/button-command.js';\nimport ButtonKeystroke from '../base/button-keystroke.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonUnderline class provides functionality for underlying a text selection.\n *\n * @class ButtonUnderline\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnderline extends React.Component{\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonUnderline\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.underline} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-underline\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.underline}>\n                <span className=\"ae-icon-underline\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default underline\n * @memberof ButtonUnderline\n * @property {String} key\n * @static\n */\nButtonUnderline.key = 'underline';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonUnderline\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonUnderline.defaultProps = {\n    command: 'underline',\n    keystroke: {\n        fn: 'execCommand',\n        keys: CKEDITOR.CTRL + 85 /*U*/\n    },\n    style: 'coreStyles_underline'\n};\n\nexport default ButtonCommand(\n    ButtonKeystroke(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonUnderline\n))));","import ButtonCommand from '../base/button-command.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonUnorderedlist class provides functionality for creating unordered lists in an editor.\n *\n * @class ButtonUnorderedlist\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnorderedlist extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonUnorderedlist\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.bulletedlist} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-ul\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.bulletedlist}>\n                <span className=\"ae-icon-bulleted-list\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default ul\n * @memberof ButtonUnorderedlist\n * @property {String} key\n * @static\n */\nButtonUnorderedlist.key = 'ul';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonUnorderedlist\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonUnorderedlist.defaultProps = {\n    command: 'bulletedlist',\n    style: {\n        element: 'ul'\n    }\n};\n\nexport default ButtonCommand(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonUnorderedlist\n)));","import ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonTwitter class provides functionality for creating a link which\n * allows people to tweet part of the content in the editor.\n *\n * @class ButtonTwitter\n * @uses ButtonStateClasses\n */\nclass ButtonTwitter extends React.Component {\n    /**\n     * Creates or removes the twitter link on the selection.\n     *\n     * @instance\n     * @memberof ButtonTwitter\n     * @method handleClick\n     */\n    handleClick() {\n        var editor = this.props.editor.get('nativeEditor');\n\n        var linkUtils = new CKEDITOR.Link(editor);\n\n        if (this.isActive()) {\n            linkUtils.remove(linkUtils.getFromSelection());\n        } else {\n            linkUtils.create(\n                this._getHref(),\n                {\n                    'class': 'ae-twitter-link',\n                    'target': '_blank'\n                }\n            );\n        }\n\n        editor.fire('actionPerformed', this);\n    }\n\n    /**\n     * Checks if the current selection is contained within a link that points to twitter.com/intent/tweet.\n     *\n     * @instance\n     * @memberof ButtonTwitter\n     * @method isActive\n     * @return {Boolean} True if the selection is inside a twitter link, false otherwise.\n     */\n    isActive() {\n        var link = new CKEDITOR.Link(this.props.editor.get('nativeEditor')).getFromSelection();\n\n        return (link && (link.getAttribute('href').indexOf('twitter.com/intent/tweet') !== -1));\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTwitter\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.twitter} className={cssClass} data-type=\"button-twitter\" onClick={this.handleClick.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.twitter}>\n                <span className=\"ae-icon-twitter\"></span>\n            </button>\n        );\n    }\n\n    /**\n     * Generates the appropriate twitter url based on the selected text and the configuration\n     * options received via props.\n     *\n     * @instance\n     * @memberof ButtonTwitter\n     * @method _getHref\n     * @protected\n     * @return {String} A valid twitter url with the selected text and given configuration.\n     */\n    _getHref() {\n        var nativeEditor = this.props.editor.get('nativeEditor');\n        var selectedText = nativeEditor.getSelection().getSelectedText();\n        var url = this.props.url;\n        var via = this.props.via;\n        var twitterHref = 'https://twitter.com/intent/tweet?text=' + selectedText;\n\n        if (url) {\n            twitterHref += '&url=' + url;\n        }\n\n        if (via) {\n            twitterHref += '&via=' + via;\n        }\n\n        return twitterHref;\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default twitter\n * @memberof ButtonTwitter\n * @property {String} key\n * @static\n */\nButtonTwitter.key = 'twitter';\n\nexport default ButtonStateClasses(\n    ButtonTwitter\n);","import ButtonTableEdit from './button-table-edit.jsx';\nimport React from 'react';\n\n/**\n * The ButtonTable class provides functionality for creating and editing a table in a document. ButtonTable\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonTableEdit UI with all the table edition controls.\n *\n * @class ButtonTable\n */\nclass ButtonTable extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTable\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        if (this.props.renderExclusive) {\n            return (\n                <ButtonTableEdit {...this.props} />\n            );\n        } else {\n            return (\n                <button aria-label={AlloyEditor.Strings.table} className=\"ae-button\" data-type=\"button-table\" onClick={this.props.requestExclusive} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.table}>\n                    <span className=\"ae-icon-table\"></span>\n                </button>\n            );\n        }\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default table\n * @memberof ButtonTable\n * @property {String} key\n * @static\n */\nButtonTable.key = 'table';\n\nexport default ButtonTable;","import ButtonCommandsList from './button-commands-list.jsx';\nimport React from 'react';\n\n/**\n * The ButtonTableRow class provides functionality to work with table rows.\n *\n * @class ButtonTableRow\n */\nclass ButtonTableRow extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTableRow\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var buttonCommandsList;\n        var buttonCommandsListId;\n\n        if (this.props.expanded) {\n            buttonCommandsListId = ButtonTableRow.key + 'List';\n            buttonCommandsList = <ButtonCommandsList commands={this._getCommands()} editor={this.props.editor} listId={buttonCommandsListId} onDismiss={this.props.toggleDropdown} />;\n        }\n\n        return (\n            <div className=\"ae-container ae-has-dropdown\">\n                <button aria-expanded={this.props.expanded} aria-label={AlloyEditor.Strings.row} aria-owns={buttonCommandsListId} className=\"ae-button\" onClick={this.props.toggleDropdown.bind(this)} role=\"combobox\" tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.row}>\n                    <span className=\"ae-icon-row\"></span>\n                </button>\n                {buttonCommandsList}\n            </div>\n        );\n    }\n\n    /**\n     * Returns a list of commands. If a list of commands was passed\n     * as property `commands`, it will take a precedence over the default ones.\n     *\n     * @instance\n     * @memberof ButtonTableRow\n     * @method _getCommands\n     * @protected\n     * @return {Array} The list of available commands.\n     */\n    _getCommands() {\n        return this.props.commands || [\n            {\n                command: 'rowInsertBefore',\n                label: AlloyEditor.Strings.rowInsertBefore\n            },\n            {\n                command: 'rowInsertAfter',\n                label: AlloyEditor.Strings.rowInsertAfter\n            },\n            {\n                command: 'rowDelete',\n                label: AlloyEditor.Strings.rowDelete\n            }\n        ];\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default tableRow\n * @memberof ButtonTableRow\n * @property {String} key\n * @static\n */\nButtonTableRow.key = 'tableRow';\n\nexport default ButtonTableRow;","import React from 'react';\n\n/**\n * The ButtonTableRemove class provides functionality for removing a table\n *\n * @class ButtonTableRemove\n */\nclass ButtonTableRemove extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTableRemove\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        return (\n            <button aria-label={AlloyEditor.Strings.deleteTable} className=\"ae-button\" data-type=\"button-table-remove\" onClick={this._removeTable.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.deleteTable}>\n                <span className=\"ae-icon-bin\"></span>\n            </button>\n        );\n    }\n\n    /**\n     * Removes the table in the editor element.\n     *\n     * @instance\n     * @memberof ButtonTableRemove\n     * @method _removeTable\n     * @protected\n     */\n    _removeTable() {\n        var editor = this.props.editor.get('nativeEditor');\n        var tableUtils = new CKEDITOR.Table(editor);\n\n        tableUtils.remove();\n\n        editor.fire('actionPerformed', this);\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default tableRemove\n * @memberof ButtonTableRemove\n * @property {String} key\n * @static\n */\nButtonTableRemove.key = 'tableRemove';\n\nexport default ButtonTableRemove;","import ButtonCommandsList from './button-commands-list.jsx';\nimport React from 'react';\n\n/**\n * The ButtonTableHeading class provides functionality to work with table heading.\n *\n * @class ButtonTableHeading\n */\nclass ButtonTableHeading extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTableHeading\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var buttonCommandsList;\n        var buttonCommandsListId;\n\n        if (this.props.expanded) {\n            buttonCommandsListId = ButtonTableHeading.key + 'List';\n            buttonCommandsList = <ButtonCommandsList commands={this._getCommands()} editor={this.props.editor} listId={buttonCommandsListId} onDismiss={this.props.toggleDropdown} />;\n        }\n\n        var activeHeading = new CKEDITOR.Table(this.props.editor.get('nativeEditor')).getHeading();\n        var activeHeadingIntro = AlloyEditor.Strings.headers + ':';\n        var activeHeadingLabel = AlloyEditor.Strings['headers' + activeHeading];\n\n        return (\n            <div className=\"ae-container-dropdown-xl ae-has-dropdown\">\n                <button aria-expanded={this.props.expanded} aria-label=\"\" className=\"ae-toolbar-element\" onClick={this.props.toggleDropdown.bind(this)} role=\"combobox\" tabIndex={this.props.tabIndex} title=\"\">\n                    <div className=\"ae-container\">\n                        <span className=\"ae-container-dropdown-selected-item\">{activeHeadingIntro} <strong>{activeHeadingLabel}</strong></span>\n                        <span className=\"ae-icon-arrow\"></span>\n                    </div>\n                </button>\n                {buttonCommandsList}\n            </div>\n        );\n    }\n\n    /**\n     * Returns a list of commands. If a list of commands was passed\n     * as property `commands`, it will take a precedence over the default ones.\n     *\n     * @instance\n     * @memberof ButtonTableHeading\n     * @method _getCommands\n     * @protected\n     * @return {Array} The list of available commands.\n     */\n    _getCommands() {\n        return this.props.commands || [\n            {\n                command: 'tableHeadingNone',\n                label: AlloyEditor.Strings.headersNone\n            },\n            {\n                command: 'tableHeadingRow',\n                label: AlloyEditor.Strings.headersRow\n            },\n            {\n                command: 'tableHeadingColumn',\n                label: AlloyEditor.Strings.headersColumn\n            },\n            {\n                command: 'tableHeadingBoth',\n                label: AlloyEditor.Strings.headersBoth\n            }\n        ];\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default tableRow\n * @memberof ButtonTableHeading\n * @property {String} key\n * @static\n */\nButtonTableHeading.key = 'tableHeading';\n\nexport default ButtonTableHeading;","import ButtonCommandsList from './button-commands-list.jsx';\nimport React from 'react';\n\n/**\n * The ButtonTableColumn class provides functionality to work with table columns.\n *\n * @class ButtonTableColumn\n */\nclass ButtonTableColumn extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTableColumn\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var buttonCommandsList,\n            buttonCommandsListId;\n\n        if (this.props.expanded) {\n            buttonCommandsListId = ButtonTableColumn.key + 'List';\n            buttonCommandsList = <ButtonCommandsList commands={this._getCommands()} editor={this.props.editor} listId={buttonCommandsListId} onDismiss={this.props.toggleDropdown} />;\n        }\n\n        return (\n            <div className=\"ae-container ae-has-dropdown\">\n                <button aria-expanded={this.props.expanded} aria-label={AlloyEditor.Strings.column} aria-owns={buttonCommandsListId} className=\"ae-button\" onClick={this.props.toggleDropdown.bind(this)} role=\"listbox\" tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.column}>\n                    <span className=\"ae-icon-column\"></span>\n                </button>\n                {buttonCommandsList}\n            </div>\n        );\n    }\n\n    /**\n     * Returns a list of commands. If a list of commands was passed\n     * as property `commands`, it will take a precedence over the default ones.\n     *\n     * @instance\n     * @memberof ButtonTableColumn\n     * @method _getCommands\n     * @protected\n     * @return {Array} The list of available commands.\n     */\n    _getCommands() {\n        return this.props.commands || [\n            {\n                command: 'columnInsertBefore',\n                label: AlloyEditor.Strings.columnInsertBefore\n            },\n            {\n                command: 'columnInsertAfter',\n                label: AlloyEditor.Strings.columnInsertAfter\n            },\n            {\n                command: 'columnDelete',\n                label: AlloyEditor.Strings.columnDelete\n            }\n        ];\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default tableColumn\n * @memberof ButtonTableColumn\n * @property {String} key\n * @static\n */\nButtonTableColumn.key = 'tableColumn';\n\nexport default ButtonTableColumn;","import ButtonCommandsList from './button-commands-list.jsx';\nimport React from 'react';\n\n/**\n * The ButtonTableCell class provides functionality to work with table cells.\n *\n * @class ButtonTableCell\n */\nclass ButtonTableCell extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonTableCell\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var buttonCommandsList;\n        var buttonCommandsListId;\n\n        if (this.props.expanded) {\n            buttonCommandsListId = ButtonTableCell.key + 'List';\n            buttonCommandsList = <ButtonCommandsList commands={this._getCommands()} editor={this.props.editor} listId={buttonCommandsListId} onDismiss={this.props.toggleDropdown} />;\n        }\n\n        return (\n            <div className=\"ae-container ae-has-dropdown\">\n                <button aria-expanded={this.props.expanded} aria-label={AlloyEditor.Strings.cell} aria-owns={buttonCommandsListId} className=\"ae-button\" onClick={this.props.toggleDropdown.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.cell}>\n                    <span className=\"ae-icon-cell\"></span>\n                </button>\n                {buttonCommandsList}\n            </div>\n        );\n    }\n\n    /**\n     * Returns a list of commands. If a list of commands was passed\n     * as property `commands`, it will take a precedence over the default ones.\n     *\n     * @instance\n     * @memberof ButtonTableCell\n     * @method _getCommands\n     * @protected\n     * @return {Array} The list of available commands.\n     */\n    _getCommands() {\n        return this.props.commands || [\n            {\n                command: 'cellInsertBefore',\n                label: AlloyEditor.Strings.cellInsertBefore\n            },\n            {\n                command: 'cellInsertAfter',\n                label: AlloyEditor.Strings.cellInsertAfter\n            },\n            {\n                command: 'cellDelete',\n                label: AlloyEditor.Strings.cellDelete\n            },\n            {\n                command: 'cellMerge',\n                label: AlloyEditor.Strings.cellMerge\n            },\n            {\n                command: 'cellMergeDown',\n                label: AlloyEditor.Strings.cellMergeDown\n            },\n            {\n                command: 'cellMergeRight',\n                label: AlloyEditor.Strings.cellMergeRight\n            },\n            {\n                command: 'cellHorizontalSplit',\n                label: AlloyEditor.Strings.cellSplitHorizontal\n            },\n            {\n                command: 'cellVerticalSplit',\n                label: AlloyEditor.Strings.cellSplitVertical\n            }\n        ];\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default tableCell\n * @memberof ButtonTableCell\n * @property {String} key\n * @static\n */\nButtonTableCell.key = 'tableCell';\n\nexport default ButtonTableCell;","import ButtonCommand from '../base/button-command.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonSuperscript class provides functionality for applying superscript style to a text selection.\n *\n * @class ButtonSuperscript\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSuperscript extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonSuperscript\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.superscript} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-superscript\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.superscript}>\n                <span className=\"ae-icon-superscript\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default superscript\n * @memberof ButtonSuperscript\n * @property {String} key\n * @static\n */\nButtonSuperscript.key = 'superscript';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonSuperscript\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonSuperscript.defaultProps = {\n    command: 'superscript',\n    style: 'coreStyles_superscript'\n};\n\nexport default ButtonCommand(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonSuperscript\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonSubscript class provides functionality for applying subscript style to a text selection.\n *\n * @class ButtonSubscript\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSubscript extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonSubscript\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.subscript} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-subscript\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.subscript}>\n                <span className=\"ae-icon-subscript\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default subscript\n * @memberof ButtonSubscript\n * @property {String} key\n * @static\n */\nButtonSubscript.key = 'subscript';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonSubscript\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonSubscript.defaultProps = {\n    command: 'subscript',\n    style: 'coreStyles_subscript'\n};\n\nexport default ButtonCommand(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonSubscript\n)));","import ButtonStylesList from './button-styles-list.jsx';\nimport React from 'react';\n\n/**\n * The ButtonStyles class provides functionality for styling a selection with a list of\n * configurable and customizable styles. The allowed styles follow CKEDITOR.Style configuration\n * (http://docs.ckeditor.com/#!/api/CKEDITOR.style)\n *\n * @class ButtonStyles\n */\nclass ButtonStyles extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonStyles\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var activeStyle = AlloyEditor.Strings.normal;\n\n        var styles = this._getStyles();\n\n        styles.forEach(function(item) {\n            if (this._checkActive(item.style)) {\n                activeStyle = item.name;\n            }\n        }.bind(this));\n\n        var buttonStylesList;\n\n        if (this.props.expanded) {\n            buttonStylesList = <ButtonStylesList activeStyle={activeStyle} editor={this.props.editor} onDismiss={this.props.toggleDropdown} showRemoveStylesItem={this.props.showRemoveStylesItem} styles={styles} />;\n        }\n\n        return (\n            <div className=\"ae-container-dropdown ae-has-dropdown\">\n                <button aria-expanded={this.props.expanded} aria-label={AlloyEditor.Strings.styles + ' ' + activeStyle} className=\"ae-toolbar-element\" onClick={this.props.toggleDropdown.bind(this)} role=\"combobox\" tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.styles + ' ' + activeStyle}>\n                    <div className=\"ae-container\">\n                        <span className=\"ae-container-dropdown-selected-item\">{activeStyle}</span>\n                        <span className=\"ae-icon-arrow\"></span>\n                    </div>\n                </button>\n                {buttonStylesList}\n            </div>\n        );\n    }\n\n    /**\n     * Checks if the given style definition is applied to the current selection in the editor.\n     *\n     * @instance\n     * @memberof ButtonStyles\n     * @method _checkActive\n     * @param {Object} styleConfig Style definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n     * @protected\n     * @return {Boolean} Returns true if the style is applied to the selection, false otherwise.\n     */\n    _checkActive(styleConfig) {\n        var nativeEditor = this.props.editor.get('nativeEditor');\n\n        // Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n        // to a 'span' element works for most of those cases with no defined element.\n        styleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n        var style = new CKEDITOR.style(styleConfig);\n\n        return style.checkActive(nativeEditor.elementPath(), nativeEditor);\n    }\n\n    /**\n     * Returns an array of styles. Each style consists from two properties:\n     * - name - the style name, for example \"h1\"\n     * - style - an object with one property, called `element` which value\n     * represents the style which have to be applied to the element.\n     *\n     * @instance\n     * @memberof ButtonStyles\n     * @method _getStyles\n     * @protected\n     * @return {Array<object>} An array of objects containing the styles.\n     */\n    _getStyles() {\n        return this.props.styles || [\n            {\n                name: AlloyEditor.Strings.h1,\n                style: {\n                    element: 'h1'\n                }\n            },\n            {\n                name: AlloyEditor.Strings.h2,\n                style: {\n                    element: 'h2'\n                }\n            },\n            {\n                name: AlloyEditor.Strings.formatted,\n                style: {\n                    element: 'pre'\n                }\n            },\n            {\n                name: AlloyEditor.Strings.cite,\n                style: {\n                    element: 'cite'\n                }\n            },\n            {\n                name: AlloyEditor.Strings.code,\n                style: {\n                    element: 'code'\n                }\n            }\n        ];\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default styles\n * @memberof ButtonStyles\n * @property {String} key\n * @static\n */\nButtonStyles.key = 'styles';\n\nexport default ButtonStyles;","import ButtonCommand from '../base/button-command.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonStrike class styles a selection with strike style.\n *\n * @class ButtonStrike\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonStrike extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     * @instance\n     * @memberof ButtonStrike\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.strike} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-strike\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.strike}>\n                <span className=\"ae-icon-strike\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default strike\n * @memberof ButtonStrike\n * @property {String} key\n * @static\n */\nButtonStrike.key = 'strike';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonStrike\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonStrike.defaultProps = {\n    command: 'strike',\n    style: 'coreStyles_strike'\n};\n\nexport default ButtonCommand(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonStrike\n)));","import ButtonCommand from '../base/button-command.js';\nimport React from 'react';\n\n/**\n * The ButtonRemoveFormat class removes style formatting.\n *\n * @class ButtonRemoveFormat\n * @uses ButtonCommand\n */\nclass ButtonRemoveFormat extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonRemoveFormat\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        return (\n            <button aria-label={AlloyEditor.Strings.removeformat} className='ae-button' data-type=\"button-removeformat\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.removeformat}>\n                <span className=\"ae-icon-removeformat\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default removeFormat\n * @memberof ButtonRemoveFormat\n * @property {String} key\n * @static\n */\nButtonRemoveFormat.key = 'removeFormat';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonRemoveFormat\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonRemoveFormat.defaultProps = {\n    command: 'removeFormat'\n};\n\nexport default ButtonCommand(\n    ButtonRemoveFormat\n);","import ButtonCommand from '../base/button-command.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonQuote class wraps a selection in `blockquote` element.\n *\n * @class ButtonQuote\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonQuote extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonQuote\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.quote} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-quote\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.quote}>\n                <span className=\"ae-icon-quote\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default quote\n * @memberof ButtonQuote\n * @property {String} key\n * @static\n */\nButtonQuote.key = 'quote';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonQuote\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonQuote.defaultProps = {\n    command: 'blockquote',\n    style: {\n        element: 'blockquote'\n    }\n};\n\nexport default ButtonCommand(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonQuote\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonParagraphJustify class provides functionality for justfying a paragraph.\n *\n * @class ButtonParagraphJustify\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphJustify extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonParagraphJustify\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.alignJustify} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-paragraph-justify\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.alignJustify}>\n                <span className=\"ae-icon-align-justified\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default paragraphJustify\n * @memberof ButtonParagraphJustify\n * @property {String} key\n * @static\n */\nButtonParagraphJustify.key = 'paragraphJustify';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonParagraphJustify\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonParagraphJustify.defaultProps = {\n    command: 'justifyblock'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonParagraphJustify\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonParagraphCenter class provides functionality for centering a paragraph.\n *\n * @class ButtonParagraphCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphCenter extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonParagraphCenter\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.alignCenter} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-paragraph-center\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.alignCenter}>\n                <span className=\"ae-icon-align-center\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default paragraphCenter\n * @memberof ButtonParagraphCenter\n * @property {String} key\n * @static\n */\nButtonParagraphCenter.key = 'paragraphCenter';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonParagraphCenter\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonParagraphCenter.defaultProps = {\n    command: 'justifycenter'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonParagraphCenter\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n/**\n * The ButtonParagraphAlignRight class provides functionality for aligning a paragraph on right.\n *\n * @class ButtonParagraphAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignRight extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonParagraphAlignRight\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.alignRight} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-paragraph-align-right\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.alignRight}>\n                <span className=\"ae-icon-align-right\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default paragraphRight\n * @memberof ButtonParagraphAlignRight\n * @property {String} key\n * @static\n */\nButtonParagraphAlignRight.key = 'paragraphRight';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonParagraphAlignRight\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonParagraphAlignRight.defaultProps = {\n    command: 'justifyright'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonParagraphAlignRight\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n/**\n * The ButtonParagraphAlignLeft class provides functionality for aligning a paragraph on left.\n *\n * @class ButtonParagraphAlignLeft\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignLeft extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonParagraphAlignLeft\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.alignLeft} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-paragraph-align-left\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.alignLeft}>\n                <span className=\"ae-icon-align-left\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default paragraphLeft\n * @memberof ButtonParagraphAlignLeft\n * @property {String} key\n * @static\n */\nButtonParagraphAlignLeft.key = 'paragraphLeft';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonParagraphAlignLeft\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonParagraphAlignLeft.defaultProps = {\n    command: 'justifyleft'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonParagraphAlignLeft\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonOutdentBlock class provides functionality for outdenting blocks.\n *\n * @class ButtonOutdentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonOutdentBlock extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonOutdentBlock\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.outdent} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-outdent-block\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.outdent}>\n                <span className=\"ae-icon-outdent-block\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default indentBlock\n * @memberof ButtonOutdentBlock\n * @property {String} key\n * @static\n */\nButtonOutdentBlock.key = 'outdentBlock';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonOutdentBlock\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonOutdentBlock.defaultProps = {\n    command: 'outdent'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonOutdentBlock\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonOrderedList class provides functionality for creating ordered lists in an editor.\n *\n * @class ButtonOrderedList\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonOrderedList extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonOrderedList\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.numberedlist} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-ol\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.numberedlist}>\n                <span className=\"ae-icon-numbered-list\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default ol\n * @memberof ButtonOrderedList\n * @property {String} key\n * @static\n */\nButtonOrderedList.key = 'ol';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonOrderedList\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonOrderedList.defaultProps = {\n    command: 'numberedlist',\n    style: {\n        element: 'ol'\n    }\n};\n\nexport default ButtonCommand(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonOrderedList\n)));","import ButtonCfgProps from '../base/button-props.js';\nimport ButtonLinkEdit from './button-link-edit.jsx';\nimport ButtonKeystroke from '../base/button-keystroke.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonLink class provides functionality for creating and editing a link in a document. ButtonLink\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonLinkEdit UI with all the link edition controls.\n *\n * @class ButtonLink\n * @uses ButtonCfgProps\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n */\nclass ButtonLink extends React.Component {\n    /**\n     * Checks if the current selection is contained within a link.\n     *\n     * @instance\n     * @memberof ButtonLink\n     * @method isActive\n     * @return {Boolean} True if the selection is inside a link, false otherwise.\n     */\n    isActive() {\n        return (new CKEDITOR.Link(this.props.editor.get('nativeEditor')).getFromSelection() !== null);\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonLink\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        if (this.props.renderExclusive) {\n            var props = this.mergeButtonCfgProps();\n\n            return (\n                <ButtonLinkEdit {...props} />\n            );\n        } else {\n            return (\n                <button aria-label={AlloyEditor.Strings.link} className={cssClass} data-type=\"button-link\" onClick={this._requestExclusive.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.link}>\n                    <span className=\"ae-icon-link\"></span>\n                </button>\n            );\n        }\n    }\n\n    /**\n     * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n     *\n     * @instance\n     * @memberof ButtonLink\n     * @method _requestExclusive\n     * @protected\n     */\n    _requestExclusive() {\n        this.props.requestExclusive(ButtonLink.key);\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default link\n * @memberof ButtonLink\n * @property {String} key\n * @static\n */\nButtonLink.key = 'link';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonLink\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonLink.defaultProps = {\n    keystroke: {\n        fn: '_requestExclusive',\n        keys: CKEDITOR.CTRL + 76 /*L*/\n    }\n};\n\nexport default ButtonCfgProps(\n    ButtonKeystroke(\n    ButtonStateClasses(\n        ButtonLink\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonKeystroke from '../base/button-keystroke.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonItalic class provides functionality for styling an selection with italic (em) style.\n *\n * @class ButtonItalic\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonItalic extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonItalic\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.italic} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-italic\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.italic}>\n                <span className=\"ae-icon-italic\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default italic\n * @memberof ButtonItalic\n * @property {String} key\n * @static\n */\nButtonItalic.key = 'italic';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonItalic\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonItalic.defaultProps = {\n    command: 'italic',\n    keystroke: {\n        fn: 'execCommand',\n        keys: CKEDITOR.CTRL + 73 /*I*/\n    },\n    style: 'coreStyles_italic'\n};\n\nexport default ButtonCommand(\n    ButtonKeystroke(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonItalic\n))));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonIndentBlock class provides functionality for indenting the selected blocks.\n *\n * @class ButtonIndentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonIndentBlock extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonIndentBlock\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.indent} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-indent-block\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.indent}>\n                <span className=\"ae-icon-indent-block\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default indentBlock\n * @memberof ButtonIndentBlock\n * @property {String} key\n * @static\n */\nButtonIndentBlock.key = 'indentBlock';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonIndentBlock\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonIndentBlock.defaultProps = {\n    command: 'indent'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonIndentBlock\n)));","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * The ButtonImage class inserts an image to the content.\n *\n * @class ButtonImage\n */\nclass ButtonImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonImage\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var inputSyle = {display: 'none'};\n\n        return (\n            <div>\n                <button aria-label={AlloyEditor.Strings.image} className=\"ae-button\" data-type=\"button-image\" onClick={this.handleClick.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.image}>\n                    <span className=\"ae-icon-image\"></span>\n                </button>\n\n                <input accept=\"image/*\" onChange={this._onInputChange.bind(this)} ref={this.fileInput} style={inputSyle} type=\"file\"/>\n            </div>\n        );\n    }\n\n    /**\n     * Simulates click on the input element. This will open browser's native file open dialog.\n     *\n     * @instance\n     * @memberof ButtonImage\n     * @method handleClick\n     * @param {SyntheticEvent} event The received click event on the button.\n     */\n    handleClick() {\n        this.fileInput.current.click();\n    }\n\n    /**\n     * On input change, reads the chosen file and fires an event `beforeImageAdd` with the image which will be added\n     * to the content. The image file will be passed in the `imageFiles` property.\n     * If any of the listeners returns `false` or cancels the event, the image won't be added to the content.\n     * Otherwise, an event `imageAdd` will be fired with the inserted element into the editable area.\n     * The passed params will be:\n     * - `el` - the created img element\n     * - `file` - the original image file from the input element\n     *\n     * @fires ButtonImage#beforeImageAdd\n     * @fires ButtonImage#imageAdd\n     * @instance\n     * @memberof ButtonImage\n     * @method _onInputChange\n     * @protected\n     */\n    _onInputChange() {\n        var inputEl = this.fileInput.current;\n\n        // On IE11 the function might be called with an empty array of\n        // files. In such a case, no actions will be taken.\n        if (!inputEl.files.length) {\n            return;\n        }\n\n        var reader = new FileReader();\n        var file = inputEl.files[0];\n\n        reader.onload = function(event) {\n            var editor = this.props.editor.get('nativeEditor');\n\n            var result = editor.fire('beforeImageAdd', {\n                imageFiles: file\n            });\n\n            if (!!result) {\n                var el = CKEDITOR.dom.element.createFromHtml('<img src=\"' + event.target.result + '\">');\n\n                editor.insertElement(el);\n\n                editor.fire('actionPerformed', this);\n\n                var imageData = {\n                    el: el,\n                    file: file\n                };\n\n\n                editor.fire('imageAdd', imageData);\n            }\n        }.bind(this);\n\n        reader.readAsDataURL(file);\n\n        inputEl.value = '';\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default image\n * @memberof ButtonImage\n * @property {String} key\n * @static\n */\nButtonImage.key = 'image';\n\nexport default ButtonImage;\n","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonImageAlignRight class provides functionality for aligning an image on right.\n *\n * @class ButtonImageAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignRight extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonImageAlignRight\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.alignRight} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-image-align-right\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.alignRight}>\n                <span className=\"ae-icon-align-right\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default imageRight\n * @memberof ButtonImageAlignRight\n * @property {String} key\n * @static\n */\nButtonImageAlignRight.key = 'imageRight';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonImageAlignRight\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonImageAlignRight.defaultProps = {\n    command: 'justifyright'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonImageAlignRight\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonImageAlignLeft class provides functionality for aligning an image on left.\n *\n * @class ButtonImageAlignLeft\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignLeft extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonImageAlignLeft\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.alignLeft} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-image-align-left\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.alignLeft}>\n                <span className=\"ae-icon-align-left\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default imageLeft\n * @memberof ButtonImageAlignLeft\n * @property {String} key\n * @static\n */\nButtonImageAlignLeft.key = 'imageLeft';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonImageAlignLeft\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonImageAlignLeft.defaultProps = {\n    command: 'justifyleft'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonImageAlignLeft\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonCommandActive from '../base/button-command-active.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport React from 'react';\n\n/**\n * The ButtonImageAlignCenter class provides functionality for aligning an image in the center.\n *\n * @class ButtonImageAlignCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignCenter extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonImageAlignCenter\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.alignCenter} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-image-align-center\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.alignCenter}>\n                <span className=\"ae-icon-align-center\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default imageCenter\n * @memberof ButtonImageAlignCenter\n * @property {String} key\n * @static\n */\nButtonImageAlignCenter.key = 'imageCenter';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonImageAlignCenter\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonImageAlignCenter.defaultProps = {\n    command: 'justifycenter'\n};\n\nexport default ButtonCommand(\n    ButtonCommandActive(\n    ButtonStateClasses(\n        ButtonImageAlignCenter\n)));","import ButtonCommand from '../base/button-command.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonHline class provides inserts horizontal line.\n *\n * @class ButtonHline\n * @uses ButtonCommand\n * @uses ButtonStyle\n */\nclass ButtonHline extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonHline\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        return (\n            <button aria-label={AlloyEditor.Strings.horizontalrule} className=\"ae-button\" data-type=\"button-hline\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.horizontalrule}>\n                <span className=\"ae-icon-separator\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default hline\n * @memberof ButtonHline\n * @property {String} key\n * @static\n */\nButtonHline.key = 'hline';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonHline\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonHline.defaultProps = {\n    command: 'horizontalrule',\n    style: {\n        element: 'hr'\n    }\n};\n\nexport default ButtonCommand(\n    ButtonStyle(\n        ButtonHline\n));","import ButtonActionStyle from '../base/button-action-style.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonH2 class provides wraps a selection in `h2` element.\n *\n * @class ButtonH2\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH2 extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonH2\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.h2} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-h2\" onClick={this.applyStyle.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.h2}>\n                <span className=\"ae-icon-h2\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default h2\n * @memberof ButtonH2\n * @property {String} key\n * @static\n */\nButtonH2.key = 'h2';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonH2\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonH2.defaultProps = {\n    style: {\n        element: 'h2'\n    }\n};\n\nexport default ButtonActionStyle(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonH2\n)));","import ButtonActionStyle from '../base/button-action-style.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonH1 class provides wraps a selection in `h1` element.\n *\n * @class ButtonH1\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH1 extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonH1\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.h1} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-h1\" onClick={this.applyStyle.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.h1}>\n                <span className=\"ae-icon-h1\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default h1\n * @memberof ButtonH1\n * @property {String} key\n * @static\n */\nButtonH1.key = 'h1';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonH1\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonH1.defaultProps = {\n    style: {\n        element: 'h1'\n    }\n};\n\nexport default ButtonActionStyle(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonH1\n)));","import ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonKeystroke from '../base/button-keystroke.js';\nimport React from 'react';\n\n/**\n * The ButtonEmbed class provides functionality for creating and editing an embed link in a document.\n * ButtonEmbed renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonEmbedEdit UI with all the link edition controls.\n *\n * @class ButtonEmbed\n * @uses ButtonKeystroke\n */\nclass ButtonEmbed extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonEmbed\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        if (this.props.renderExclusive) {\n            return (\n                <ButtonEmbedEdit {...this.props} />\n            );\n        } else {\n            return (\n                <button aria-label={AlloyEditor.Strings.link} className=\"ae-button\" data-type=\"button-embed\" onClick={this._requestExclusive.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.link}>\n                    <span className=\"ae-icon-add\"></span>\n                </button>\n            );\n        }\n    }\n\n    /**\n     * Requests the link button to be rendered in exclusive mode to allow the embedding of a link.\n     *\n     * @instance\n     * @memberof ButtonEmbed\n     * @method _requestExclusive\n     * @protected\n     */\n    _requestExclusive() {\n        this.props.requestExclusive(ButtonEmbed.key);\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default embed\n * @memberof ButtonEmbed\n * @property {String} key\n * @static\n */\nButtonEmbed .key = 'embed';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonEmbed\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonEmbed.defaultProps = {\n    keystroke: {\n        fn: '_requestExclusive',\n        keys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /*L*/\n    }\n};\n\nexport default ButtonKeystroke(\n    ButtonEmbed\n);","import ButtonActionStyle from '../base/button-action-style.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonCode class provides wraps a selection in `pre` element.\n *\n * @class ButtonCode\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonCode extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonCode\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.code} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-code\" onClick={this.applyStyle.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.code}>\n                <span className=\"ae-icon-code\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default code\n * @memberof ButtonCode\n * @property {String} key\n * @static\n */\nButtonCode.key = 'code';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonCode\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonCode.defaultProps = {\n    style: {\n        element: 'pre'\n    }\n};\n\nexport default ButtonActionStyle(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonCode\n)));","import ButtonCameraImage from './button-camera-image.jsx';\nimport React from 'react';\n\n/**\n * The ButtonCamera class renders in two different ways:\n *\n * - Normal: Just a button that allows to switch to the edition mode.\n * - Exclusive: Renders ButtonCameraImage in order to take photo from the camera.\n *\n * @class ButtonCamera\n */\nclass ButtonCamera extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonCamera\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        if (this.props.renderExclusive) {\n            return (\n                <ButtonCameraImage {...this.props} />\n            );\n        } else {\n            var disabled = !(navigator.getUserMedia ||\n                (navigator.webkitGetUserMedia && location.protocol === 'https') ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia);\n\n            var label = disabled ? AlloyEditor.Strings.cameraDisabled : AlloyEditor.Strings.camera;\n\n            return (\n                <button aria-label={label} className=\"ae-button\" data-type=\"button-image-camera\" disabled={disabled} onClick={this.props.requestExclusive.bind(ButtonCamera.key)} tabIndex={this.props.tabIndex} title={label}>\n                    <span className=\"ae-icon-camera\"></span>\n                </button>\n            );\n        }\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default camera\n * @memberof ButtonCamera\n * @property {String} key\n * @static\n */\nButtonCamera.key = 'camera';\n\nexport default ButtonCamera;\n","import ButtonCommand from '../base/button-command.js';\nimport ButtonKeystroke from '../base/button-keystroke.js';\nimport ButtonStateClasses from '../base/button-state-classes.js';\nimport ButtonStyle from '../base/button-style.js';\nimport React from 'react';\n\n/**\n * The ButtonBold class provides functionality for styling an selection with strong (bold) style.\n *\n * @class ButtonBold\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonBold extends React.Component {\n    /**\n     * Lifecycle. Renders the UI of the button.\n     *\n     * @instance\n     * @memberof ButtonBold\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        var cssClass = 'ae-button ' + this.getStateClasses();\n\n        return (\n            <button aria-label={AlloyEditor.Strings.bold} aria-pressed={cssClass.indexOf('pressed') !== -1} className={cssClass} data-type=\"button-bold\" onClick={this.execCommand.bind(this)} tabIndex={this.props.tabIndex} title={AlloyEditor.Strings.bold}>\n                <span className=\"ae-icon-bold\"></span>\n            </button>\n        );\n    }\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default bold\n * @memberof ButtonBold\n * @property {String} key\n * @static\n */\nButtonBold.key = 'bold';\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ButtonBold\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nButtonBold.defaultProps = {\n    command: 'bold',\n    keystroke: {\n        fn: 'execCommand',\n        keys: CKEDITOR.CTRL + 66 /*B*/\n    },\n    style: 'coreStyles_bold'\n};\n\nexport default ButtonCommand(\n    ButtonKeystroke(\n    ButtonStateClasses(\n    ButtonStyle(\n        ButtonBold\n))));\n","import ButtonBold from './button-bold.jsx';\nimport ButtonCameraImage from './button-camera-image.jsx';\nimport ButtonCamera from './button-camera.jsx';\nimport ButtonCode from './button-code.jsx';\nimport ButtonCommandListItem from './button-command-list-item.jsx';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonDropdown from './button-dropdown.jsx';\nimport ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonEmbed from './button-embed.jsx';\nimport ButtonH1 from './button-h1.jsx';\nimport ButtonH2 from './button-h2.jsx';\nimport ButtonHline from './button-hline.jsx';\nimport ButtonImageAlignCenter from './button-image-align-center.jsx';\nimport ButtonImageAlignLeft from './button-image-align-left.jsx';\nimport ButtonImageAlignRight from './button-image-align-right.jsx';\nimport ButtonImage from './button-image.jsx';\nimport ButtonIndentBlock from './button-indent-block.jsx';\nimport ButtonItalic from './button-italic.jsx';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\nimport ButtonLink from './button-link.jsx';\nimport ButtonOl from './button-ol.jsx';\nimport ButtonOutdentBlock from './button-outdent-block.jsx';\nimport ButtonParagraphAlignLeft from './button-paragraph-align-left.jsx';\nimport ButtonParagraphAlignRight from './button-paragraph-align-right.jsx';\nimport ButtonParagraphCenter from './button-paragraph-center.jsx';\nimport ButtonParagraphJustify from './button-paragraph-justify.jsx';\nimport ButtonQuote from './button-quote.jsx';\nimport ButtonRemoveFormat from './button-remove-format.jsx';\nimport ButtonStrike from './button-strike.jsx';\nimport ButtonStylesListHeader from './button-styles-list-header.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\nimport ButtonStyles from './button-styles.jsx';\nimport ButtonSubscript from './button-subscript.jsx';\nimport ButtonSuperscript from './button-superscript.jsx';\nimport ButtonTableCell from './button-table-cell.jsx';\nimport ButtonTableColumn from './button-table-column.jsx';\nimport ButtonTableEdit from './button-table-edit.jsx';\nimport ButtonTableHeading from './button-table-heading.jsx';\nimport ButtonTableRemove from './button-table-remove.jsx';\nimport ButtonTableRow from './button-table-row.jsx';\nimport ButtonTable from './button-table.jsx';\nimport ButtonTargetList from './button-target-list.jsx';\nimport ButtonTwitter from './button-twitter.jsx';\nimport ButtonUl from './button-ul.jsx';\nimport ButtonUnderline from './button-underline.jsx';\n\nexport default {\n    [ButtonBold.key]: ButtonBold,\n    [ButtonCameraImage.key]: ButtonCameraImage,\n    [ButtonCamera.key]: ButtonCamera,\n    [ButtonCode.key]: ButtonCode,\n    [ButtonCommandListItem.key]: ButtonCommandListItem,\n    [ButtonCommandsList.key]: ButtonCommandsList,\n    [ButtonDropdown.key]: ButtonDropdown,\n    [ButtonEmbedEdit.key]: ButtonEmbedEdit,\n    [ButtonEmbed.key]: ButtonEmbed,\n    [ButtonH1.key]: ButtonH1,\n    [ButtonH2.key]: ButtonH2,\n    [ButtonHline.key]: ButtonHline,\n    [ButtonImageAlignCenter.key]: ButtonImageAlignCenter,\n    [ButtonImageAlignLeft.key]: ButtonImageAlignLeft,\n    [ButtonImageAlignRight.key]: ButtonImageAlignRight,\n    [ButtonImage.key]: ButtonImage,\n    [ButtonIndentBlock.key]: ButtonIndentBlock,\n    [ButtonItalic.key]: ButtonItalic,\n    [ButtonLinkAutocompleteList.key]: ButtonLinkAutocompleteList,\n    [ButtonLinkEdit.key]: ButtonLinkEdit,\n    [ButtonLinkTargetEdit.key]: ButtonLinkTargetEdit,\n    [ButtonLink.key]: ButtonLink,\n    [ButtonOl.key]: ButtonOl,\n    [ButtonOutdentBlock.key]: ButtonOutdentBlock,\n    [ButtonParagraphAlignLeft.key]: ButtonParagraphAlignLeft,\n    [ButtonParagraphAlignRight.key]: ButtonParagraphAlignRight,\n    [ButtonParagraphCenter.key]: ButtonParagraphCenter,\n    [ButtonParagraphJustify.key]: ButtonParagraphJustify,\n    [ButtonQuote.key]: ButtonQuote,\n    [ButtonRemoveFormat.key]: ButtonRemoveFormat,\n    [ButtonStrike.key]: ButtonStrike,\n    [ButtonStylesListHeader.key]: ButtonStylesListHeader,\n    [ButtonStylesListItemRemove.key]: ButtonStylesListItemRemove,\n    [ButtonStylesListItem.key]: ButtonStylesListItem,\n    [ButtonStylesList.key]: ButtonStylesList,\n    [ButtonStyles.key]: ButtonStyles,\n    [ButtonSubscript.key]: ButtonSubscript,\n    [ButtonSuperscript.key]: ButtonSuperscript,\n    [ButtonTableCell.key]: ButtonTableCell,\n    [ButtonTableColumn.key]: ButtonTableColumn,\n    [ButtonTableEdit.key]: ButtonTableEdit,\n    [ButtonTableHeading.key]: ButtonTableHeading,\n    [ButtonTableRemove.key]: ButtonTableRemove,\n    [ButtonTableRow.key]: ButtonTableRow,\n    [ButtonTable.key]: ButtonTable,\n    [ButtonTargetList.key]: ButtonTargetList,\n    [ButtonTwitter.key]: ButtonTwitter,\n    [ButtonUl.key]: ButtonUl,\n    [ButtonUnderline.key]: ButtonUnderline\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WidgetExclusive from './base/widget-exclusive.js';\nimport WidgetFocusManager from './base/widget-focus-manager.js';\n\n/**\n * The main editor UI class manages a hierarchy of widgets (toolbars and buttons).\n *\n * @class UI\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass UI extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hidden: false\n        };\n    }\n\n    /**\n     * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n     *\n     * @instance\n     * @memberof UI\n     * @method componentDidMount\n     */\n    componentDidMount() {\n        var editor = this.props.editor.get('nativeEditor');\n\n        editor.on('editorInteraction', this._onEditorInteraction, this);\n        editor.on('actionPerformed', this._onActionPerformed, this);\n        editor.on('key', this._onEditorKey, this);\n\n        // Set up events for hiding the UI when user stops interacting with the editor.\n        // This may happen when he just clicks outside of the editor. However,\n        // this does not include a situation when he clicks on some button, part of\n        // editor's UI.\n\n        // It is not easy to debounce _setUIHidden on mousedown, because if we\n        // debounce it, when the handler is being invoked, the target might be no more part\n        // of the editor's UI - onActionPerformed causes re-render.\n        this._mousedownListener = function (event) {\n            this._setUIHidden(event.target);\n        }.bind(this);\n\n        this._keyDownListener = CKEDITOR.tools.debounce(function(event) {\n            this._setUIHidden(document.activeElement);\n        }, this.props.eventsDelay, this);\n\n        document.addEventListener('mousedown', this._mousedownListener);\n        document.addEventListener('keydown', this._keyDownListener);\n    }\n\n    /**\n     * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n     * Fires `ariaUpdate` event passing ARIA related messages.\n     * Fires `editorUpdate` event passing the previous and current properties and state.\n     *\n     * @instance\n     * @memberof UI\n     * @method componentDidUpdate\n     */\n    componentDidUpdate (prevProps, prevState) {\n        var domNode = ReactDOM.findDOMNode(this);\n\n        var editor = this.props.editor.get('nativeEditor');\n\n        if (domNode) {\n            editor.fire('ariaUpdate', {\n                message: this._getAvailableToolbarsMessage(domNode)\n            });\n        }\n\n        editor.fire('editorUpdate', {\n            prevProps: prevProps,\n            prevState: prevState,\n            props: this.props,\n            state: this.state\n        });\n    }\n\n    _getAriaUpdateTemplate(ariaUpdate) {\n        if (!this._ariaUpdateTemplates) {\n            this._ariaUpdateTemplates = {};\n        }\n\n        if (!this._ariaUpdateTemplates[ariaUpdate]) {\n            this._ariaUpdateTemplates[ariaUpdate] = new CKEDITOR.template(this._getAriaUpdates()[ariaUpdate]);\n        }\n\n        return this._ariaUpdateTemplates[ariaUpdate];\n    }\n\n    /**\n     * Returns the templates for ARIA messages.\n     *\n     * @instance\n     * @memberof UI\n     * @protected\n     * @method _getAriaUpdates\n     * @return {Object} ARIA relates messages. Default:\n     * {\n     *      noToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n     *      oneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n     *      manyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars\n     *  }\n     */\n    _getAriaUpdates() {\n        return this.props.ariaUpdates || {\n            noToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n            oneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n            manyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars\n        };\n    }\n\n    /**\n     * Returns an ARIA message which represents the number of currently available toolbars.\n     *\n     * @instance\n     * @memberof UI\n     * @method _getAvailableToolbarsMessage\n     * @protected\n     * @param {CKEDITOR.dom.element} domNode The DOM node from which the available toolbars will be retrieved.\n     * @return {String} The ARIA message for the number of available toolbars\n     */\n    _getAvailableToolbarsMessage(domNode) {\n        var toolbarsNodeList = domNode.querySelectorAll('[role=\"toolbar\"]');\n\n        if (!toolbarsNodeList.length) {\n            return this._getAriaUpdates().noToolbar;\n        } else {\n            var toolbarNames = Array.prototype.slice.call(toolbarsNodeList).map(function(toolbar) {\n                return toolbar.getAttribute('aria-label');\n            });\n\n            var ariaUpdate = toolbarNames.length === 1 ? 'oneToolbar' : 'manyToolbars';\n\n            return this._getAriaUpdateTemplate(ariaUpdate).output({\n                toolbars: toolbarNames.join(',').replace(/,([^,]*)$/, ' and ' + '$1')\n            });\n        }\n    }\n\n    /**\n     * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n     *\n     * @instance\n     * @memberof UI\n     * @method componentWillUnmount\n     */\n    componentWillUnmount() {\n        if (this._mousedownListener) {\n            document.removeEventListener('mousedown', this._mousedownListener);\n        }\n\n        if (this._keyDownListener) {\n            this._keyDownListener.detach();\n            document.removeEventListener('keydown', this._keyDownListener);\n        }\n    }\n\n    /**\n     * Lifecycle. Renders the UI of the editor. This may include several toolbars and buttons.\n     * The editor's UI also takes care of rendering the items in exclusive mode.\n     *\n     * @instance\n     * @memberof UI\n     * @method render\n     * @return {Object} The content which should be rendered.\n     */\n    render() {\n        if (this.state.hidden) {\n            return null;\n        }\n\n        var toolbars = Object.keys(this.props.toolbars).map(function(toolbar) {\n            return AlloyEditor.Toolbars[toolbar] || window[toolbar];\n        });\n\n        toolbars = this.filterExclusive(toolbars).map(function(toolbar) {\n            var props = this.mergeExclusiveProps({\n                config: this.props.toolbars[toolbar.key],\n                editor: this.props.editor,\n                editorEvent: this.state.editorEvent,\n                key: toolbar.key,\n                onDismiss: this._onDismissToolbarFocus,\n                selectionData: this.state.selectionData\n            }, toolbar.key);\n\n            return React.createElement(toolbar, props);\n        }.bind(this));\n\n        return (\n            <div className=\"ae-toolbars\" onKeyDown={this.handleKey.bind(this)}>\n                {toolbars}\n            </div>\n        );\n    }\n\n    /**\n     * Listener to the editor's `actionPerformed` event. Sets state and redraws the UI of the editor.\n     *\n     * @instance\n     * @memberof UI\n     * @protected\n     * @method _onActionPerformed\n     * @param {SynteticEvent} event The provided event\n     */\n    _onActionPerformed(event) {\n        var editor = this.props.editor.get('nativeEditor');\n\n        editor.focus();\n\n        this.setState({\n            itemExclusive: null,\n            selectionData: editor.getSelectionData()\n        });\n    }\n\n    /**\n     * Executed when a dismiss key is pressed over a toolbar to return the focus to the editor.\n     *\n     * @instance\n     * @memberof UI\n     * @protected\n     * @method _onDismissToolbarFocus\n     */\n    _onDismissToolbarFocus() {\n        var editor = this.props.editor.get('nativeEditor');\n\n        editor.focus();\n    }\n\n    /**\n     * Listener to the editor's `userInteraction` event. Retrieves the data about the user selection and\n     * provides it via component's state property.\n     *\n     * @instance\n     * @memberof UI\n     * @protected\n     * @method _onEditorInteraction\n     * @param {SynteticEvent} event The provided event\n     */\n    _onEditorInteraction(event) {\n        this.setState({\n            editorEvent: event,\n            hidden: false,\n            itemExclusive: null,\n            selectionData: event.data.selectionData\n        });\n    }\n\n    /**\n     * Focuses on the active toolbar when the combination ALT+F10 is pressed inside the editor.\n     *\n     * @instance\n     * @memberof UI\n     * @protected\n     * @method _onEditorKey\n     */\n    _onEditorKey(event) {\n        var nativeEvent = event.data.domEvent.$;\n\n        if (nativeEvent.altKey && nativeEvent.keyCode === 121) {\n            this.focus();\n        }\n    }\n\n    /**\n     * Checks if the target with which the user interacted is part of editor's UI or it is\n     * the editable area. If none of these, sets the state of editor's UI to be hidden.\n     *\n     * @instance\n     * @memberof UI\n     * @protected\n     * @method _setUIHidden\n     * @param {DOMElement} target The DOM element with which user interacted lastly.\n     */\n    _setUIHidden(target) {\n        var domNode = ReactDOM.findDOMNode(this);\n\n        if (domNode) {\n            var editable = this.props.editor.get('nativeEditor').editable();\n            var targetNode = new CKEDITOR.dom.node(target);\n\n            if (!editable) {\n                this.setState({\n                    hidden: true\n                });\n            } else {\n                var res = (editable.$ === target) || editable.contains(targetNode) ||\n                    (new CKEDITOR.dom.element(domNode)).contains(targetNode);\n\n                if (!res) {\n                    this.setState({\n                        hidden: true\n                    });\n                }\n            }\n        }\n    }\n}\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof UI\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nUI.defaultProps = {\n    circular: true,\n    descendants: '[class^=ae-toolbar-]',\n    eventsDelay: 0,\n    keys: {\n        next: 9\n    }\n};\n\n/**\n * Fired when component updates and when it is rendered in the DOM.\n * The payload consists from a `message` property containing the ARIA message.\n *\n * @event ariaUpdate\n */\n\n/**\n * Fired when component updates. The payload consists from an object with the following\n * properties:\n * - prevProps - The previous properties of the component\n * - prevState - The previous state of the component\n * - props - The current properties of the component\n * - state - The current state of the component\n *\n * @event ariaUpdate\n */\n\nexport default WidgetExclusive(\n    WidgetFocusManager(\n        UI\n));","import ReactDOM from 'react-dom';\n\n// Default gutter value for toolbar positioning\nvar DEFAULT_GUTTER = {\n    left: 0,\n    top: 0\n};\n\n/**\n * Centers a Toolbar according to given rectangle\n *\n * @method centerToolbar\n * @param {Object} toolbar The toolbar to be centered\n * @param {Object} rect The rectangle according to which the Toolbar will be centered\n */\nvar centerToolbar = function(toolbar, rect) {\n    var toolbarNode = ReactDOM.findDOMNode(toolbar);\n\n    var halfNodeWidth = toolbarNode.offsetWidth / 2;\n    var scrollPosition = new CKEDITOR.dom.window(window).getScrollPosition();\n\n    var gutter = toolbar.props.gutter || DEFAULT_GUTTER;\n\n    var widgetXY = toolbar.getWidgetXYPoint(rect.left + rect.width / 2 - scrollPosition.x, rect.top + scrollPosition.y, CKEDITOR.SELECTION_BOTTOM_TO_TOP);\n\n    toolbar.moveToPoint([\n        widgetXY[0],\n        widgetXY[1]\n    ], [\n        rect.left + rect.width / 2 - halfNodeWidth - scrollPosition.x,\n        rect.top - toolbarNode.offsetHeight + scrollPosition.y - gutter.top\n    ]);\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method imageSelectionSetPosition\n * @param {Object} payload Payload, should contain the selection data for retrieving the\n * client rectangle of the selected image\n * @return {Boolean} True, in all cases\n */\nvar imageSelectionSetPosition = function(payload) {\n    centerToolbar(this, payload.selectionData.element.getClientRect());\n\n    return true;\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method tableSelectionSetPosition\n * @param {Object} payload Object, which contains the selection data for retrieving the\n * client rectangle of the selected table\n * @return {Boolean} True, in all cases\n */\nvar tableSelectionSetPosition = function(payload) {\n    var nativeEditor = payload.editor.get('nativeEditor');\n\n    var table = new CKEDITOR.Table(nativeEditor).getFromSelection();\n\n    centerToolbar(this, table.getClientRect());\n\n    return true;\n};\n\nconst SelectionSetPosition = {\n    image: imageSelectionSetPosition,\n    table: tableSelectionSetPosition\n};\n\nexport default SelectionSetPosition;","var tableSelectionGetArrowBoxClasses = function() {\n    return 'ae-arrow-box ae-arrow-box-bottom';\n};\n\nconst SelectionGetArrowBoxClasses = {\n    table: tableSelectionGetArrowBoxClasses\n};\n\nexport default SelectionGetArrowBoxClasses;","import SelectionGetArrowBoxClasses from './selection-arrowbox.js';\nimport SelectionSetPosition from './selection-position.js';\nimport SelectionTest from './selection-test.js';\n\nconst Selections = [{\n    name: 'embed',\n    buttons: ['embedRemove', 'embedEdit'],\n    test: SelectionTest.embed\n}, {\n    name: 'link',\n    buttons: ['linkEdit'],\n    test: SelectionTest.link\n}, {\n    name: 'image',\n    buttons: ['imageLeft', 'imageCenter', 'imageRight'],\n    setPosition: SelectionSetPosition.image,\n    test: SelectionTest.image\n}, {\n    name: 'text',\n    buttons: ['styles', 'bold', 'italic', 'underline', 'link', 'twitter'],\n    test: SelectionTest.text\n}, {\n    name: 'table',\n    buttons: ['tableHeading', 'tableRow', 'tableColumn', 'tableCell', 'tableRemove'],\n    getArrowBoxClasses: SelectionGetArrowBoxClasses.table,\n    setPosition: SelectionSetPosition.table,\n    test: SelectionTest.table\n}];\n\nexport default Selections;","import Lang from './lang.js';\n\n/**\n * Attribute implementation.\n *\n * @class Attribute\n * @constructor\n*/\nfunction Attribute(config) {\n    this.__config__ = config || {};\n    this.__ATTRS__ = {};\n}\n\nAttribute.prototype = {\n    constructor: Attribute,\n\n    /**\n     * Retrieves the value of an attribute.\n     *\n     * @instance\n     * @memberof Attribute\n     * @method get\n     * @param {String} attr The attribute which value should be retrieved.\n     * @return {Any} The value of the attribute.\n     */\n    get: function(attr) {\n        var currentAttr = this.constructor.ATTRS[attr];\n\n        if (!currentAttr) {\n            return;\n        }\n\n        if (!this._isInitialized(attr)) {\n            this._init(attr);\n        }\n\n        var curValue = this.__ATTRS__[attr];\n\n        if (currentAttr.getter) {\n            curValue = this._callStringOrFunction(currentAttr.getter, curValue);\n        }\n\n        return curValue;\n    },\n\n    /**\n     * Sets the value of an attribute.\n     *\n     * @instance\n     * @memberof Attribute\n     * @method set\n     * @param {String} attr The attribute which value should be set.\n     * @param {Any} value The value which should be set to the attribute.\n     */\n    set: function(attr, value) {\n        var currentAttr = this.constructor.ATTRS[attr];\n\n        if (!currentAttr) {\n            return;\n        }\n\n        if (!this._isInitialized(attr)) {\n            this._init(attr);\n        }\n\n        if (currentAttr.readOnly) {\n            return;\n        }\n\n        if (currentAttr.writeOnce && this._isInitialized(attr)) {\n            return;\n        }\n\n        if (currentAttr.validator && !this._callStringOrFunction(currentAttr.validator, value)) {\n            return;\n        }\n\n        if (currentAttr.setter) {\n            value = this._callStringOrFunction(currentAttr.setter, value);\n        }\n\n        this.__ATTRS__[attr] = value;\n    },\n\n    /**\n     * Calls the provided param as function with the supplied arguments.\n     * If param provided as string, a corresponding function in this object will\n     * be called. If provided param is a function, it will be directly called.\n     *\n     * @instance\n     * @memberof Attribute\n     * @method _callStringOrFunction\n     * @param  {Any|Array} args The arguments which will be provided to the called function\n     * @param  {String|Function} stringOrFunction The function which should be called\n     * @protected\n     * @return {Any} The returned value from the called function\n     */\n    _callStringOrFunction: function(stringOrFunction, args) {\n        var result = null;\n\n        if (!Lang.isArray(args)) {\n            args = [args];\n        }\n\n        if (Lang.isString(stringOrFunction) && Lang.isFunction(this[stringOrFunction])) {\n            result = this[stringOrFunction].apply(this, args);\n        } else if (Lang.isFunction(stringOrFunction)) {\n            result = stringOrFunction.apply(this, args);\n        }\n\n        return result;\n    },\n\n    /**\n     * Initializes an attribute. Sets its default value depending on the flags of the\n     * attribute and the passed configuration object to the constructor.\n     *\n     * @instance\n     * @memberof Attribute\n     * @method _init\n     * @param {String} attr The name of the attribute which have to be initialized.\n     * @protected\n     */\n    _init: function(attr) {\n        var value;\n\n        var currentAttr = this.constructor.ATTRS[attr];\n\n        // Check if there is default value or passed one via configuration object\n        var hasDefaultValue = Object.prototype.hasOwnProperty.call(currentAttr, 'value');\n        var hasPassedValueViaConfig = Object.prototype.hasOwnProperty.call(this.__config__, attr);\n\n        // If there is valueFn, set the value to be the result of invocation of this function\n        if (currentAttr.valueFn) {\n            value = this._callStringOrFunction(currentAttr.valueFn, value);\n\n            this.__ATTRS__[attr] = value;\n        }\n        // else if the attribute has readOnly flag, set the default value from the attribute,\n        // regardless if there is value or not\n        else if (currentAttr.readOnly) {\n            value = currentAttr.value;\n        }\n        // else if the attribute has writeOnce value, set it from the passed configuration or from the\n        // default value, in this order. Otherwise, return miserable.\n        else if (currentAttr.writeOnce) {\n            if (hasPassedValueViaConfig) {\n                value = this.__config__[attr];\n            } else if (hasDefaultValue) {\n                value = currentAttr.value;\n            } else {\n                return;\n            }\n        }\n        // These two cases below are easy - set the value to be from the passed config or\n        // from the default value, in this order.\n        else if (hasPassedValueViaConfig) {\n            value = this.__config__[attr];\n        } else if (hasDefaultValue) {\n            value = currentAttr.value;\n        }\n\n        // If there is validator, and user passed config object - check the returned value.\n        // If it is false, then set as initial value the default one.\n        // However, if there is no default value, just return.\n        if (currentAttr.validator && hasPassedValueViaConfig && !this._callStringOrFunction(currentAttr.validator, value)) {\n            if (hasDefaultValue) {\n                value = currentAttr.value;\n            } else {\n                return;\n            }\n        }\n\n        // If there is setter and user passed config object - pass the value thought the setter.\n        // The value might be one from defaultFn, default value or provided from the config.\n        if (currentAttr.setter && hasPassedValueViaConfig) {\n            value = this._callStringOrFunction(currentAttr.setter, value);\n        }\n\n        // Finally, set the value as initial value to the storage with values.\n        this.__ATTRS__[attr] = value;\n    },\n\n    /**\n     * Checks if an attribute is initialized. An attribute is considered as initialized\n     * when there is an own property with this name in the local collection of attribute values\n     * for the current instance.\n     *\n     * @instance\n     * @memberof Attribute\n     * @method _isInitialized\n     * @param {String} attr The attribute which should be checked if it is initialized.\n     * @protected\n     * @return {Boolean} Returns true if the attribute has been initialized, false otherwise.\n     */\n    _isInitialized: function(attr) {\n        return Object.prototype.hasOwnProperty.call(this.__ATTRS__, attr);\n    }\n};\n\nexport default Attribute;","import Attribute from './attribute.js';\nimport Lang from './lang.js';\nimport extend from './oop.js';\n\n/**\n * Quick and dirty impl of Base class.\n *\n * @class Base\n * @constructor\n */\nfunction Base(config) {\n    Base.superclass.constructor.call(this, config);\n\n    this.init(config);\n}\n\nextend(Base, Attribute, {\n    /**\n     * Calls the `initializer` method of each class which extends Base starting from the parent to the child.\n     * Will pass the configuration object to each initializer method.\n     *\n     * @instance\n     * @memberof Base\n     * @method init\n     * @param {Object} config Configuration object\n     */\n    init: function(config) {\n        this._callChain('initializer', config);\n    },\n\n    /**\n     * Calls the `destructor` method of each class which extends Base starting from the parent to the child.\n     *\n     * @instance\n     * @memberof Base\n     * @method destroy\n     */\n    destroy: function() {\n        this._callChain('destructor');\n    },\n\n    /**\n     * Calls a method of each class, which is being present in the hierarchy starting from parent to the child.\n     *\n     * @instance\n     * @memberof Base\n     * @method _callChain\n     * @param {Object|Array} args The arguments with which the method should be invoked\n     * @param {String} wat  The method, which should be invoked\n     * @protected\n     */\n    _callChain: function(wat, args) {\n        var arr = [];\n\n        var ctor = this.constructor;\n\n        while (ctor) {\n            if (Lang.isFunction(ctor.prototype[wat])) {\n                arr.push(ctor.prototype[wat]);\n            }\n\n            ctor = ctor.superclass ? ctor.superclass.constructor : null;\n        }\n\n        arr = arr.reverse();\n\n        args = Lang.isArray(args) ? args : [args];\n\n        for (var i = 0; i < arr.length; i++) {\n            var item = arr[i];\n\n            item.apply(this, args);\n        }\n    }\n});\n\nexport default Base;","(function() {\n    'use strict';\n\n    /* istanbul ignore if */\n    if (CKEDITOR.plugins.get('ae_uibridge')) {\n        return;\n    }\n\n    /**\n     * CKEditor plugin that extends CKEDITOR.ui.add function so an add handler can be specified\n     * on top of the original ones. It bridges the calls to add components via:\n     * - editor.ui.add(name, type, definition)\n     *\n     * @class CKEDITOR.plugins.ae_uibridge\n     * @constructor\n     */\n    CKEDITOR.plugins.add('ae_uibridge', {\n        /**\n         * Initialization of the plugin, part of CKEditor plugin lifecycle.\n         *\n         * @method beforeInit\n         * @param {Object} editor The current editor instance\n         */\n        beforeInit: function(editor) {\n            var originalUIAddFn = editor.ui.add;\n\n            editor.ui.add = function(name, type, definition) {\n                originalUIAddFn.apply(this, arguments);\n\n                var typeHandler = this._.handlers[type];\n\n                if (typeHandler && typeHandler.add) {\n                    typeHandler.add(name, definition, editor);\n                    AlloyEditor.registerBridgeButton(name, editor.__processingPlugin__.plugin.name);\n                }\n            };\n        }\n    });\n}());","/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\n( function() {\n\t'use strict';\n\n    if (CKEDITOR.plugins.get('ae_tabletools')){\n\t\treturn;\n    }\n\n\tvar cellNodeRegex = /^(?:td|th)$/;\n\n\tfunction getSelectedCells( selection ) {\n\t\tvar ranges = selection.getRanges();\n\t\tvar retval = [];\n\t\tvar database = {};\n\n\t\tfunction moveOutOfCellGuard( node ) {\n\t\t\t// Apply to the first cell only.\n\t\t\tif ( retval.length > 0 )\n\t\t\t\treturn;\n\n\t\t\t// If we are exiting from the first </td>, then the td should definitely be\n\t\t\t// included.\n\t\t\tif ( node.type == CKEDITOR.NODE_ELEMENT && cellNodeRegex.test( node.getName() ) && !node.getCustomData( 'selected_cell' ) ) {\n\t\t\t\tCKEDITOR.dom.element.setMarker( database, node, 'selected_cell', true );\n\t\t\t\tretval.push( node );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var i = 0; i < ranges.length; i++ ) {\n\t\t\tvar range = ranges[ i ];\n\n\t\t\tif ( range.collapsed ) {\n\t\t\t\t// Walker does not handle collapsed ranges yet - fall back to old API.\n\t\t\t\tvar startNode = range.getCommonAncestor();\n\t\t\t\tvar nearestCell = startNode.getAscendant( 'td', true ) || startNode.getAscendant( 'th', true );\n\t\t\t\tif ( nearestCell )\n\t\t\t\t\tretval.push( nearestCell );\n\t\t\t} else {\n\t\t\t\tvar walker = new CKEDITOR.dom.walker( range );\n\t\t\t\tvar node;\n\t\t\t\twalker.guard = moveOutOfCellGuard;\n\n\t\t\t\twhile ( ( node = walker.next() ) ) {\n\t\t\t\t\t// If may be possible for us to have a range like this:\n\t\t\t\t\t// <td>^1</td><td>^2</td>\n\t\t\t\t\t// The 2nd td shouldn't be included.\n\t\t\t\t\t//\n\t\t\t\t\t// So we have to take care to include a td we've entered only when we've\n\t\t\t\t\t// walked into its children.\n\n\t\t\t\t\tif ( node.type != CKEDITOR.NODE_ELEMENT || !node.is( CKEDITOR.dtd.table ) ) {\n\t\t\t\t\t\tvar parent = node.getAscendant( 'td', true ) || node.getAscendant( 'th', true );\n\t\t\t\t\t\tif ( parent && !parent.getCustomData( 'selected_cell' ) ) {\n\t\t\t\t\t\t\tCKEDITOR.dom.element.setMarker( database, parent, 'selected_cell', true );\n\t\t\t\t\t\t\tretval.push( parent );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers( database );\n\n\t\treturn retval;\n\t}\n\n\tfunction getFocusElementAfterDelCells( cellsToDelete ) {\n\t\tvar i = 0,\n\t\t\tlast = cellsToDelete.length - 1,\n\t\t\tdatabase = {},\n\t\t\tcell, focusedCell, tr;\n\n\t\twhile ( ( cell = cellsToDelete[ i++ ] ) )\n\t\t\tCKEDITOR.dom.element.setMarker( database, cell, 'delete_cell', true );\n\n\t\t// 1.first we check left or right side focusable cell row by row;\n\t\ti = 0;\n\t\twhile ( ( cell = cellsToDelete[ i++ ] ) ) {\n\t\t\tif ( ( focusedCell = cell.getPrevious() ) && !focusedCell.getCustomData( 'delete_cell' ) || ( focusedCell = cell.getNext() ) && !focusedCell.getCustomData( 'delete_cell' ) ) {\n\t\t\t\tCKEDITOR.dom.element.clearAllMarkers( database );\n\t\t\t\treturn focusedCell;\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers( database );\n\n\t\t// 2. then we check the toppest row (outside the selection area square) focusable cell\n\t\ttr = cellsToDelete[ 0 ].getParent();\n\t\tif ( ( tr = tr.getPrevious() ) )\n\t\t\treturn tr.getLast();\n\n\t\t// 3. last we check the lowerest  row focusable cell\n\t\ttr = cellsToDelete[ last ].getParent();\n\t\tif ( ( tr = tr.getNext() ) )\n\t\t\treturn tr.getChild( 0 );\n\n\t\treturn null;\n\t}\n\n\tfunction insertRow( selection, insertBefore ) {\n\t\tvar cells = getSelectedCells( selection ),\n\t\t\tfirstCell = cells[ 0 ],\n\t\t\ttable = firstCell.getAscendant( 'table' ),\n\t\t\tdoc = firstCell.getDocument(),\n\t\t\tstartRow = cells[ 0 ].getParent(),\n\t\t\tstartRowIndex = startRow.$.rowIndex,\n\t\t\tlastCell = cells[ cells.length - 1 ],\n\t\t\tendRowIndex = lastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1,\n\t\t\tendRow = new CKEDITOR.dom.element( table.$.rows[ endRowIndex ] ),\n\t\t\trowIndex = insertBefore ? startRowIndex : endRowIndex,\n\t\t\trow = insertBefore ? startRow : endRow;\n\n\t\tvar map = CKEDITOR.tools.buildTableMap( table ),\n\t\t\tcloneRow = map[ rowIndex ],\n\t\t\tnextRow = insertBefore ? map[ rowIndex - 1 ] : map[ rowIndex + 1 ],\n\t\t\twidth = map[ 0 ].length;\n\n\t\tvar newRow = doc.createElement( 'tr' );\n\t\tfor ( var i = 0; cloneRow[ i ] && i < width; i++ ) {\n\t\t\tvar cell;\n\t\t\t// Check whether there's a spanning row here, do not break it.\n\t\t\tif ( cloneRow[ i ].rowSpan > 1 && nextRow && cloneRow[ i ] == nextRow[ i ] ) {\n\t\t\t\tcell = cloneRow[ i ];\n\t\t\t\tcell.rowSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element( cloneRow[ i ] ).clone();\n\t\t\t\tcell.removeAttribute( 'rowSpan' );\n\t\t\t\tcell.appendBogus();\n\t\t\t\tnewRow.append( cell );\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\ti += cell.colSpan - 1;\n\t\t}\n\n\t\tinsertBefore ? newRow.insertBefore( row ) : newRow.insertAfter( row );\n\t}\n\n\tfunction deleteRows( selectionOrRow ) {\n\t\tif ( selectionOrRow instanceof CKEDITOR.dom.selection ) {\n\t\t\tvar cells = getSelectedCells( selectionOrRow ),\n\t\t\t\tfirstCell = cells[ 0 ],\n\t\t\t\ttable = firstCell.getAscendant( 'table' ),\n\t\t\t\tmap = CKEDITOR.tools.buildTableMap( table ),\n\t\t\t\tstartRow = cells[ 0 ].getParent(),\n\t\t\t\tstartRowIndex = startRow.$.rowIndex,\n\t\t\t\tlastCell = cells[ cells.length - 1 ],\n\t\t\t\tendRowIndex = lastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1,\n\t\t\t\trowsToDelete = [];\n\n\t\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\t\tfor ( var i = startRowIndex; i <= endRowIndex; i++ ) {\n\t\t\t\tvar mapRow = map[ i ],\n\t\t\t\t\trow = new CKEDITOR.dom.element( table.$.rows[ i ] );\n\n\t\t\t\tfor ( var j = 0; j < mapRow.length; j++ ) {\n\t\t\t\t\tvar cell = new CKEDITOR.dom.element( mapRow[ j ] ),\n\t\t\t\t\t\tcellRowIndex = cell.getParent().$.rowIndex;\n\n\t\t\t\t\tif ( cell.$.rowSpan == 1 )\n\t\t\t\t\t\tcell.remove();\n\t\t\t\t\t// Row spanned cell.\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Span row of the cell, reduce spanning.\n\t\t\t\t\t\tcell.$.rowSpan -= 1;\n\t\t\t\t\t\t// Root row of the cell, root cell to next row.\n\t\t\t\t\t\tif ( cellRowIndex == i ) {\n\t\t\t\t\t\t\tvar nextMapRow = map[ i + 1 ];\n\t\t\t\t\t\t\tnextMapRow[ j - 1 ] ? cell.insertAfter( new CKEDITOR.dom.element( nextMapRow[ j - 1 ] ) ) : new CKEDITOR.dom.element( table.$.rows[ i + 1 ] ).append( cell, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tj += cell.$.colSpan - 1;\n\t\t\t\t}\n\n\t\t\t\trowsToDelete.push( row );\n\t\t\t}\n\n\t\t\tvar rows = table.$.rows;\n\n\t\t\t// Where to put the cursor after rows been deleted?\n\t\t\t// 1. Into next sibling row if any;\n\t\t\t// 2. Into previous sibling row if any;\n\t\t\t// 3. Into table's parent element if it's the very last row.\n\t\t\tvar cursorPosition = new CKEDITOR.dom.element( rows[ endRowIndex + 1 ] || ( startRowIndex > 0 ? rows[ startRowIndex - 1 ] : null ) || table.$.parentNode );\n\n\t\t\tfor ( i = rowsToDelete.length; i >= 0; i-- )\n\t\t\t\tdeleteRows( rowsToDelete[ i ] );\n\n\t\t\treturn cursorPosition;\n\t\t} else if ( selectionOrRow instanceof CKEDITOR.dom.element ) {\n\t\t\ttable = selectionOrRow.getAscendant( 'table' );\n\n\t\t\tif ( table.$.rows.length == 1 )\n\t\t\t\ttable.remove();\n\t\t\telse\n\t\t\t\tselectionOrRow.remove();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getCellColIndex( cell, isStart ) {\n\t\tvar row = cell.getParent(),\n\t\t\trowCells = row.$.cells;\n\n\t\tvar colIndex = 0;\n\t\tfor ( var i = 0; i < rowCells.length; i++ ) {\n\t\t\tvar mapCell = rowCells[ i ];\n\t\t\tcolIndex += isStart ? 1 : mapCell.colSpan;\n\t\t\tif ( mapCell == cell.$ )\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn colIndex - 1;\n\t}\n\n\tfunction getColumnsIndices( cells, isStart ) {\n\t\tvar retval = isStart ? Infinity : 0;\n\t\tfor ( var i = 0; i < cells.length; i++ ) {\n\t\t\tvar colIndex = getCellColIndex( cells[ i ], isStart );\n\t\t\tif ( isStart ? colIndex < retval : colIndex > retval )\n\t\t\t\tretval = colIndex;\n\t\t}\n\t\treturn retval;\n\t}\n\n\tfunction insertColumn( selection, insertBefore ) {\n\t\tvar cells = getSelectedCells( selection ),\n\t\t\tfirstCell = cells[ 0 ],\n\t\t\ttable = firstCell.getAscendant( 'table' ),\n\t\t\tstartCol = getColumnsIndices( cells, 1 ),\n\t\t\tlastCol = getColumnsIndices( cells ),\n\t\t\tcolIndex = insertBefore ? startCol : lastCol;\n\n\t\tvar map = CKEDITOR.tools.buildTableMap( table ),\n\t\t\tcloneCol = [],\n\t\t\tnextCol = [],\n\t\t\theight = map.length;\n\n\t\tfor ( var i = 0; i < height; i++ ) {\n\t\t\tcloneCol.push( map[ i ][ colIndex ] );\n\t\t\tvar nextCell = insertBefore ? map[ i ][ colIndex - 1 ] : map[ i ][ colIndex + 1 ];\n\t\t\tnextCol.push( nextCell );\n\t\t}\n\n\t\tfor ( i = 0; i < height; i++ ) {\n\t\t\tvar cell;\n\n\t\t\tif ( !cloneCol[ i ] )\n\t\t\t\tcontinue;\n\n\t\t\t// Check whether there's a spanning column here, do not break it.\n\t\t\tif ( cloneCol[ i ].colSpan > 1 && nextCol[ i ] == cloneCol[ i ] ) {\n\t\t\t\tcell = cloneCol[ i ];\n\t\t\t\tcell.colSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element( cloneCol[ i ] ).clone();\n\t\t\t\tcell.removeAttribute( 'colSpan' );\n\t\t\t\tcell.appendBogus();\n\t\t\t\tcell[ insertBefore ? 'insertBefore' : 'insertAfter' ].call( cell, new CKEDITOR.dom.element( cloneCol[ i ] ) );\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\ti += cell.rowSpan - 1;\n\t\t}\n\t}\n\n\tfunction deleteColumns( selectionOrCell ) {\n\t\tvar cells = getSelectedCells( selectionOrCell ),\n\t\t\tfirstCell = cells[ 0 ],\n\t\t\tlastCell = cells[ cells.length - 1 ],\n\t\t\ttable = firstCell.getAscendant( 'table' ),\n\t\t\tmap = CKEDITOR.tools.buildTableMap( table ),\n\t\t\tstartColIndex, endColIndex,\n\t\t\trowsToDelete = [];\n\n\t\t// Figure out selected cells' column indices.\n\t\tfor ( var i = 0, rows = map.length; i < rows; i++ ) {\n\t\t\tfor ( var j = 0, cols = map[ i ].length; j < cols; j++ ) {\n\t\t\t\tif ( map[ i ][ j ] == firstCell.$ )\n\t\t\t\t\tstartColIndex = j;\n\t\t\t\tif ( map[ i ][ j ] == lastCell.$ )\n\t\t\t\t\tendColIndex = j;\n\t\t\t}\n\t\t}\n\n\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\tfor ( i = startColIndex; i <= endColIndex; i++ ) {\n\t\t\tfor ( j = 0; j < map.length; j++ ) {\n\t\t\t\tvar mapRow = map[ j ],\n\t\t\t\t\trow = new CKEDITOR.dom.element( table.$.rows[ j ] ),\n\t\t\t\t\tcell = new CKEDITOR.dom.element( mapRow[ i ] );\n\n\t\t\t\tif ( cell.$ ) {\n\t\t\t\t\tif ( cell.$.colSpan == 1 )\n\t\t\t\t\t\tcell.remove();\n\t\t\t\t\t// Reduce the col spans.\n\t\t\t\t\telse\n\t\t\t\t\t\tcell.$.colSpan -= 1;\n\n\t\t\t\t\tj += cell.$.rowSpan - 1;\n\n\t\t\t\t\tif ( !row.$.cells.length )\n\t\t\t\t\t\trowsToDelete.push( row );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar firstRowCells = table.$.rows[ 0 ] && table.$.rows[ 0 ].cells;\n\n\t\t// Where to put the cursor after columns been deleted?\n\t\t// 1. Into next cell of the first row if any;\n\t\t// 2. Into previous cell of the first row if any;\n\t\t// 3. Into table's parent element;\n\t\tvar cursorPosition = new CKEDITOR.dom.element( firstRowCells[ startColIndex ] || ( startColIndex ? firstRowCells[ startColIndex - 1 ] : table.$.parentNode ) );\n\n\t\t// Delete table rows only if all columns are gone (do not remove empty row).\n\t\tif ( rowsToDelete.length == rows )\n\t\t\ttable.remove();\n\n\t\treturn cursorPosition;\n\t}\n\n\tfunction insertCell( selection, insertBefore ) {\n\t\tvar startElement = selection.getStartElement();\n\t\tvar cell = startElement.getAscendant( 'td', 1 ) || startElement.getAscendant( 'th', 1 );\n\n\t\tif ( !cell )\n\t\t\treturn;\n\n\t\t// Create the new cell element to be added.\n\t\tvar newCell = cell.clone();\n\t\tnewCell.appendBogus();\n\n\t\tif ( insertBefore )\n\t\t\tnewCell.insertBefore( cell );\n\t\telse\n\t\t\tnewCell.insertAfter( cell );\n\t}\n\n\tfunction deleteCells( selectionOrCell ) {\n\t\tif ( selectionOrCell instanceof CKEDITOR.dom.selection ) {\n\t\t\tvar cellsToDelete = getSelectedCells( selectionOrCell );\n\t\t\tvar table = cellsToDelete[ 0 ] && cellsToDelete[ 0 ].getAscendant( 'table' );\n\t\t\tvar cellToFocus = getFocusElementAfterDelCells( cellsToDelete );\n\n\t\t\tfor ( var i = cellsToDelete.length - 1; i >= 0; i-- )\n\t\t\t\tdeleteCells( cellsToDelete[ i ] );\n\n\t\t\tif ( cellToFocus )\n\t\t\t\tplaceCursorInCell( cellToFocus, true );\n\t\t\telse if ( table )\n\t\t\t\ttable.remove();\n\t\t} else if ( selectionOrCell instanceof CKEDITOR.dom.element ) {\n\t\t\tvar tr = selectionOrCell.getParent();\n\t\t\tif ( tr.getChildCount() == 1 )\n\t\t\t\ttr.remove();\n\t\t\telse\n\t\t\t\tselectionOrCell.remove();\n\t\t}\n\t}\n\n\t// Remove filler at end and empty spaces around the cell content.\n\tfunction trimCell( cell ) {\n\t\tvar bogus = cell.getBogus();\n\t\tbogus && bogus.remove();\n\t\tcell.trim();\n\t}\n\n\tfunction placeCursorInCell( cell, placeAtEnd ) {\n\t\tvar docInner = cell.getDocument(),\n\t\t\tdocOuter = CKEDITOR.document;\n\n\t\t// Fixing \"Unspecified error\" thrown in IE10 by resetting\n\t\t// selection the dirty and shameful way (#10308).\n\t\t// We can not apply this hack to IE8 because\n\t\t// it causes error (#11058).\n\t\tif ( CKEDITOR.env.ie && CKEDITOR.env.version == 10 ) {\n\t\t\tdocOuter.focus();\n\t\t\tdocInner.focus();\n\t\t}\n\n\t\tvar range = new CKEDITOR.dom.range( docInner );\n\t\tif ( !range[ 'moveToElementEdit' + ( placeAtEnd ? 'End' : 'Start' ) ]( cell ) ) {\n\t\t\trange.selectNodeContents( cell );\n\t\t\trange.collapse( placeAtEnd ? false : true );\n\t\t}\n\t\trange.select( true );\n\t}\n\n\tfunction cellInRow( tableMap, rowIndex, cell ) {\n\t\tvar oRow = tableMap[ rowIndex ];\n\t\tif ( typeof cell == 'undefined' )\n\t\t\treturn oRow;\n\n\t\tfor ( var c = 0; oRow && c < oRow.length; c++ ) {\n\t\t\tif ( cell.is && oRow[ c ] == cell.$ )\n\t\t\t\treturn c;\n\t\t\telse if ( c == cell )\n\t\t\t\treturn new CKEDITOR.dom.element( oRow[ c ] );\n\t\t}\n\t\treturn cell.is ? -1 : null;\n\t}\n\n\tfunction cellInCol( tableMap, colIndex ) {\n\t\tvar oCol = [];\n\t\tfor ( var r = 0; r < tableMap.length; r++ ) {\n\t\t\tvar row = tableMap[ r ];\n\t\t\toCol.push( row[ colIndex ] );\n\n\t\t\t// Avoid adding duplicate cells.\n\t\t\tif ( row[ colIndex ].rowSpan > 1 )\n\t\t\t\tr += row[ colIndex ].rowSpan - 1;\n\t\t}\n\t\treturn oCol;\n\t}\n\n\tfunction mergeCells( selection, mergeDirection, isDetect ) {\n\t\tvar cells = getSelectedCells( selection );\n\n\t\t// Invalid merge request if:\n\t\t// 1. In batch mode despite that less than two selected.\n\t\t// 2. In solo mode while not exactly only one selected.\n\t\t// 3. Cells distributed in different table groups (e.g. from both thead and tbody).\n\t\tvar commonAncestor;\n\t\tif ( ( mergeDirection ? cells.length != 1 : cells.length < 2 ) || ( commonAncestor = selection.getCommonAncestor() ) && commonAncestor.type == CKEDITOR.NODE_ELEMENT && commonAncestor.is( 'table' ) )\n\t\t\treturn false;\n\n\t\tvar cell,\n\t\t\tfirstCell = cells[ 0 ],\n\t\t\ttable = firstCell.getAscendant( 'table' ),\n\t\t\tmap = CKEDITOR.tools.buildTableMap( table ),\n\t\t\tmapHeight = map.length,\n\t\t\tmapWidth = map[ 0 ].length,\n\t\t\tstartRow = firstCell.getParent().$.rowIndex,\n\t\t\tstartColumn = cellInRow( map, startRow, firstCell );\n\n\t\tif ( mergeDirection ) {\n\t\t\tvar targetCell;\n\t\t\ttry {\n\t\t\t\tvar rowspan = parseInt( firstCell.getAttribute( 'rowspan' ), 10 ) || 1;\n\t\t\t\tvar colspan = parseInt( firstCell.getAttribute( 'colspan' ), 10 ) || 1;\n\n\t\t\t\ttargetCell = map[ mergeDirection == 'up' ? ( startRow - rowspan ) : mergeDirection == 'down' ? ( startRow + rowspan ) : startRow ][\n\t\t\t\t\tmergeDirection == 'left' ?\n\t\t\t\t\t\t( startColumn - colspan ) :\n\t\t\t\t\tmergeDirection == 'right' ? ( startColumn + colspan ) : startColumn ];\n\n\t\t\t} catch ( er ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// 1. No cell could be merged.\n\t\t\t// 2. Same cell actually.\n\t\t\tif ( !targetCell || firstCell.$ == targetCell )\n\t\t\t\treturn false;\n\n\t\t\t// Sort in map order regardless of the DOM sequence.\n\t\t\tcells[ ( mergeDirection == 'up' || mergeDirection == 'left' ) ? 'unshift' : 'push' ]( new CKEDITOR.dom.element( targetCell ) );\n\t\t}\n\n\t\t// Start from here are merging way ignorance (merge up/right, batch merge).\n\t\tvar doc = firstCell.getDocument(),\n\t\t\tlastRowIndex = startRow,\n\t\t\ttotalRowSpan = 0,\n\t\t\ttotalColSpan = 0,\n\t\t\t// Use a documentFragment as buffer when appending cell contents.\n\t\t\tfrag = !isDetect && new CKEDITOR.dom.documentFragment( doc ),\n\t\t\tdimension = 0;\n\n\t\tfor ( var i = 0; i < cells.length; i++ ) {\n\t\t\tcell = cells[ i ];\n\n\t\t\tvar tr = cell.getParent(),\n\t\t\t\tcellFirstChild = cell.getFirst(),\n\t\t\t\tcolSpan = cell.$.colSpan,\n\t\t\t\trowSpan = cell.$.rowSpan,\n\t\t\t\trowIndex = tr.$.rowIndex,\n\t\t\t\tcolIndex = cellInRow( map, rowIndex, cell );\n\n\t\t\t// Accumulated the actual places taken by all selected cells.\n\t\t\tdimension += colSpan * rowSpan;\n\t\t\t// Accumulated the maximum virtual spans from column and row.\n\t\t\ttotalColSpan = Math.max( totalColSpan, colIndex - startColumn + colSpan );\n\t\t\ttotalRowSpan = Math.max( totalRowSpan, rowIndex - startRow + rowSpan );\n\n\t\t\tif ( !isDetect ) {\n\t\t\t\t// Trim all cell fillers and check to remove empty cells.\n\t\t\t\tif ( trimCell( cell ), cell.getChildren().count() ) {\n\t\t\t\t\t// Merge vertically cells as two separated paragraphs.\n\t\t\t\t\tif ( rowIndex != lastRowIndex && cellFirstChild && !( cellFirstChild.isBlockBoundary && cellFirstChild.isBlockBoundary( { br: 1 } ) ) ) {\n\t\t\t\t\t\tvar last = frag.getLast( CKEDITOR.dom.walker.whitespaces( true ) );\n\t\t\t\t\t\tif ( last && !( last.is && last.is( 'br' ) ) )\n\t\t\t\t\t\t\tfrag.append( 'br' );\n\t\t\t\t\t}\n\n\t\t\t\t\tcell.moveChildren( frag );\n\t\t\t\t}\n\t\t\t\ti ? cell.remove() : cell.setHtml( '' );\n\t\t\t}\n\t\t\tlastRowIndex = rowIndex;\n\t\t}\n\n\t\tif ( !isDetect ) {\n\t\t\tfrag.moveChildren( firstCell );\n\n\t\t\tfirstCell.appendBogus();\n\n\t\t\tif ( totalColSpan >= mapWidth )\n\t\t\t\tfirstCell.removeAttribute( 'rowSpan' );\n\t\t\telse\n\t\t\t\tfirstCell.$.rowSpan = totalRowSpan;\n\n\t\t\tif ( totalRowSpan >= mapHeight )\n\t\t\t\tfirstCell.removeAttribute( 'colSpan' );\n\t\t\telse\n\t\t\t\tfirstCell.$.colSpan = totalColSpan;\n\n\t\t\t// Swip empty <tr> left at the end of table due to the merging.\n\t\t\tvar trs = new CKEDITOR.dom.nodeList( table.$.rows ),\n\t\t\t\tcount = trs.count();\n\n\t\t\tfor ( i = count - 1; i >= 0; i-- ) {\n\t\t\t\tvar tailTr = trs.getItem( i );\n\t\t\t\tif ( !tailTr.$.cells.length ) {\n\t\t\t\t\ttailTr.remove();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn firstCell;\n\t\t}\n\t\t// Be able to merge cells only if actual dimension of selected\n\t\t// cells equals to the caculated rectangle.\n\t\telse {\n\t\t\treturn ( totalRowSpan * totalColSpan ) == dimension;\n\t\t}\n\t}\n\n\tfunction verticalSplitCell( selection, isDetect ) {\n\t\tvar cells = getSelectedCells( selection );\n\t\tif ( cells.length > 1 )\n\t\t\treturn false;\n\t\telse if ( isDetect )\n\t\t\treturn true;\n\n\t\tvar cell = cells[ 0 ],\n\t\t\ttr = cell.getParent(),\n\t\t\ttable = tr.getAscendant( 'table' ),\n\t\t\tmap = CKEDITOR.tools.buildTableMap( table ),\n\t\t\trowIndex = tr.$.rowIndex,\n\t\t\tcolIndex = cellInRow( map, rowIndex, cell ),\n\t\t\trowSpan = cell.$.rowSpan,\n\t\t\tnewCell, newRowSpan, newCellRowSpan, newRowIndex;\n\n\t\tif ( rowSpan > 1 ) {\n\t\t\tnewRowSpan = Math.ceil( rowSpan / 2 );\n\t\t\tnewCellRowSpan = Math.floor( rowSpan / 2 );\n\t\t\tnewRowIndex = rowIndex + newRowSpan;\n\t\t\tvar newCellTr = new CKEDITOR.dom.element( table.$.rows[ newRowIndex ] ),\n\t\t\t\tnewCellRow = cellInRow( map, newRowIndex ),\n\t\t\t\tcandidateCell;\n\n\t\t\tnewCell = cell.clone();\n\n\t\t\t// Figure out where to insert the new cell by checking the vitual row.\n\t\t\tfor ( var c = 0; c < newCellRow.length; c++ ) {\n\t\t\t\tcandidateCell = newCellRow[ c ];\n\t\t\t\t// Catch first cell actually following the column.\n\t\t\t\tif ( candidateCell.parentNode == newCellTr.$ && c > colIndex ) {\n\t\t\t\t\tnewCell.insertBefore( new CKEDITOR.dom.element( candidateCell ) );\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcandidateCell = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The destination row is empty, append at will.\n\t\t\tif ( !candidateCell )\n\t\t\t\tnewCellTr.append( newCell );\n\t\t} else {\n\t\t\tnewCellRowSpan = newRowSpan = 1;\n\n\t\t\tnewCellTr = tr.clone();\n\t\t\tnewCellTr.insertAfter( tr );\n\t\t\tnewCellTr.append( newCell = cell.clone() );\n\n\t\t\tvar cellsInSameRow = cellInRow( map, rowIndex );\n\t\t\tfor ( var i = 0; i < cellsInSameRow.length; i++ )\n\t\t\t\tcellsInSameRow[ i ].rowSpan++;\n\t\t}\n\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.rowSpan = newRowSpan;\n\t\tnewCell.$.rowSpan = newCellRowSpan;\n\t\tif ( newRowSpan == 1 )\n\t\t\tcell.removeAttribute( 'rowSpan' );\n\t\tif ( newCellRowSpan == 1 )\n\t\t\tnewCell.removeAttribute( 'rowSpan' );\n\n\t\treturn newCell;\n\t}\n\n\tfunction horizontalSplitCell( selection, isDetect ) {\n\t\tvar cells = getSelectedCells( selection );\n\t\tif ( cells.length > 1 )\n\t\t\treturn false;\n\t\telse if ( isDetect )\n\t\t\treturn true;\n\n\t\tvar cell = cells[ 0 ],\n\t\t\ttr = cell.getParent(),\n\t\t\ttable = tr.getAscendant( 'table' ),\n\t\t\tmap = CKEDITOR.tools.buildTableMap( table ),\n\t\t\trowIndex = tr.$.rowIndex,\n\t\t\tcolIndex = cellInRow( map, rowIndex, cell ),\n\t\t\tcolSpan = cell.$.colSpan,\n\t\t\tnewCell, newColSpan, newCellColSpan;\n\n\t\tif ( colSpan > 1 ) {\n\t\t\tnewColSpan = Math.ceil( colSpan / 2 );\n\t\t\tnewCellColSpan = Math.floor( colSpan / 2 );\n\t\t} else {\n\t\t\tnewCellColSpan = newColSpan = 1;\n\t\t\tvar cellsInSameCol = cellInCol( map, colIndex );\n\t\t\tfor ( var i = 0; i < cellsInSameCol.length; i++ )\n\t\t\t\tcellsInSameCol[ i ].colSpan++;\n\t\t}\n\t\tnewCell = cell.clone();\n\t\tnewCell.insertAfter( cell );\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.colSpan = newColSpan;\n\t\tnewCell.$.colSpan = newCellColSpan;\n\t\tif ( newColSpan == 1 )\n\t\t\tcell.removeAttribute( 'colSpan' );\n\t\tif ( newCellColSpan == 1 )\n\t\t\tnewCell.removeAttribute( 'colSpan' );\n\n\t\treturn newCell;\n\t}\n\n\tCKEDITOR.plugins.add('ae_tabletools', {\n\t\tinit: function( editor ) {\n\t\t\tvar lang = editor.lang.table;\n\n\t\t\tfunction createDef( def ) {\n\t\t\t\treturn CKEDITOR.tools.extend( def || {}, {\n\t\t\t\t\tcontextSensitive: 1,\n\t\t\t\t\trefresh: function( editor, path ) {\n\t\t\t\t\t\tthis.setState( path.contains( { td: 1, th: 1 }, 1 ) ? CKEDITOR.TRISTATE_OFF : CKEDITOR.TRISTATE_DISABLED );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\tfunction addCmd( name, def ) {\n\t\t\t\tvar cmd = editor.getCommand(name);\n\n\t\t\t\tif (cmd) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcmd = editor.addCommand(name, def);\n\t\t\t\teditor.addFeature(cmd);\n\t\t\t}\n\n\t\t\taddCmd( 'rowDelete', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tplaceCursorInCell( deleteRows( selection ) );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'rowInsertBefore', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tinsertRow( selection, true );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'rowInsertAfter', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tinsertRow( selection );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'columnDelete', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tvar element = deleteColumns( selection );\n\t\t\t\t\telement && placeCursorInCell( element, true );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'columnInsertBefore', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tinsertColumn( selection, true );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'columnInsertAfter', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tinsertColumn( selection );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellDelete', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tdeleteCells( selection );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellMerge', createDef( {\n\t\t\t\tallowedContent: 'td[colspan,rowspan]',\n\t\t\t\trequiredContent: 'td[colspan,rowspan]',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tplaceCursorInCell( mergeCells( editor.getSelection() ), true );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellMergeRight', createDef( {\n\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tplaceCursorInCell( mergeCells( editor.getSelection(), 'right' ), true );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellMergeDown', createDef( {\n\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tplaceCursorInCell( mergeCells( editor.getSelection(), 'down' ), true );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellVerticalSplit', createDef( {\n\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tplaceCursorInCell( verticalSplitCell( editor.getSelection() ) );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellHorizontalSplit', createDef( {\n\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tplaceCursorInCell( horizontalSplitCell( editor.getSelection() ) );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellInsertBefore', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tinsertCell( selection, true );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t\taddCmd( 'cellInsertAfter', createDef( {\n\t\t\t\trequiredContent: 'table',\n\t\t\t\texec: function( editor ) {\n\t\t\t\t\tvar selection = editor.getSelection();\n\t\t\t\t\tinsertCell( selection );\n\t\t\t\t}\n\t\t\t} ) );\n\t\t},\n\n\t\tgetSelectedCells: getSelectedCells\n\n\t});\n} )();\n\n/**\n * Create a two-dimension array that reflects the actual layout of table cells,\n * with cell spans, with mappings to the original td elements.\n *\n * @param {CKEDITOR.dom.element} table\n * @member CKEDITOR.tools\n */\nCKEDITOR.tools.buildTableMap = function( table ) {\n\tvar aRows = table.$.rows;\n\n\t// Row and Column counters.\n\tvar r = -1;\n\n\tvar aMap = [];\n\n\tfor ( var i = 0; i < aRows.length; i++ ) {\n\t\tr++;\n\t\t!aMap[ r ] && ( aMap[ r ] = [] );\n\n\t\tvar c = -1;\n\n\t\tfor ( var j = 0; j < aRows[ i ].cells.length; j++ ) {\n\t\t\tvar oCell = aRows[ i ].cells[ j ];\n\n\t\t\tc++;\n\t\t\twhile ( aMap[ r ][ c ] )\n\t\t\t\tc++;\n\n\t\t\tvar iColSpan = isNaN( oCell.colSpan ) ? 1 : oCell.colSpan;\n\t\t\tvar iRowSpan = isNaN( oCell.rowSpan ) ? 1 : oCell.rowSpan;\n\n\t\t\tfor ( var rs = 0; rs < iRowSpan; rs++ ) {\n\t\t\t\tif ( !aMap[ r + rs ] )\n\t\t\t\t\taMap[ r + rs ] = [];\n\n\t\t\t\tfor ( var cs = 0; cs < iColSpan; cs++ ) {\n\t\t\t\t\taMap[ r + rs ][ c + cs ] = aRows[ i ].cells[ j ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc += iColSpan - 1;\n\t\t}\n\t}\n\treturn aMap;\n};\n","/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\n(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_tableresize')) {\n        return;\n    }\n\n    var pxUnit = CKEDITOR.tools.cssLength;\n\n    function getWidth(el) {\n        return CKEDITOR.env.ie ? el.$.clientWidth : parseInt(el.getComputedStyle('width'), 10);\n    }\n\n    function getBorderWidth(element, side) {\n        var computed = element.getComputedStyle('border-' + side + '-width'),\n            borderMap = {\n                thin: '0px',\n                medium: '1px',\n                thick: '2px'\n            };\n\n        if (computed.indexOf('px') < 0) {\n            // look up keywords\n            if (computed in borderMap && element.getComputedStyle('border-style') != 'none') {\n                computed = borderMap[computed];\n            } else {\n                computed = 0;\n            }\n        }\n\n        return parseInt(computed, 10);\n    }\n\n    // Gets the table row that contains the most columns.\n    function getMasterPillarRow(table) {\n        var $rows = table.$.rows,\n            maxCells = 0,\n            cellsCount, $elected, $tr;\n\n        for (var i = 0, len = $rows.length; i < len; i++) {\n            $tr = $rows[i];\n            cellsCount = $tr.cells.length;\n\n            if (cellsCount > maxCells) {\n                maxCells = cellsCount;\n                $elected = $tr;\n            }\n        }\n\n        return $elected;\n    }\n\n    function buildTableColumnPillars(table) {\n        var pillars = [],\n            pillarIndex = -1,\n            rtl = (table.getComputedStyle('direction') === 'rtl');\n\n        // Get the raw row element that cointains the most columns.\n        var $tr = getMasterPillarRow(table);\n\n        // Get the tbody element and position, which will be used to set the\n        // top and bottom boundaries.\n        var tbody = new CKEDITOR.dom.element(table.$.tBodies[0]),\n            tbodyPosition = tbody.getDocumentPosition();\n\n        // Loop thorugh all cells, building pillars after each one of them.\n        for (var i = 0, len = $tr.cells.length; i < len; i++) {\n            // Both the current cell and the successive one will be used in the\n            // pillar size calculation.\n            var td = new CKEDITOR.dom.element($tr.cells[i]),\n                nextTd = $tr.cells[i + 1] && new CKEDITOR.dom.element($tr.cells[i + 1]);\n\n            pillarIndex += td.$.colSpan || 1;\n\n            // Calculate the pillar boundary positions.\n            var pillarLeft, pillarRight, pillarWidth;\n\n            var x = td.getDocumentPosition().x;\n\n            // Calculate positions based on the current cell.\n            rtl ? pillarRight = x + getBorderWidth(td, 'left') : pillarLeft = x + td.$.offsetWidth - getBorderWidth(td, 'right');\n\n            // Calculate positions based on the next cell, if available.\n            if (nextTd) {\n                x = nextTd.getDocumentPosition().x;\n\n                rtl ? pillarLeft = x + nextTd.$.offsetWidth - getBorderWidth(nextTd, 'right') : pillarRight = x + getBorderWidth(nextTd, 'left');\n            }\n            // Otherwise calculate positions based on the table (for last cell).\n            else {\n                x = table.getDocumentPosition().x;\n\n                rtl ? pillarLeft = x : pillarRight = x + table.$.offsetWidth;\n            }\n\n            pillarWidth = Math.max(pillarRight - pillarLeft, 4);\n\n            // The pillar should reflects exactly the shape of the hovered\n            // column border line.\n            pillars.push({\n                table: table,\n                index: pillarIndex,\n                x: pillarLeft,\n                y: tbodyPosition.y,\n                width: pillarWidth,\n                height: tbody.$.offsetHeight,\n                rtl: rtl\n            });\n        }\n\n        return pillars;\n    }\n\n    function getPillarAtPosition(pillars, positionX) {\n        for (var i = 0, len = pillars.length; i < len; i++) {\n            var pillar = pillars[i];\n\n            if (positionX >= pillar.x && positionX <= (pillar.x + pillar.width)) {\n                return pillar;\n            }\n        }\n\n        return null;\n    }\n\n    function cancel(evt) {\n        (evt.data || evt).preventDefault();\n    }\n\n    function columnResizer(editor) {\n        var pillar, document, resizer, isResizing, startOffset, currentShift;\n\n        var leftSideCells, rightSideCells, leftShiftBoundary, rightShiftBoundary;\n\n        function detach() {\n            pillar = null;\n            currentShift = 0;\n            isResizing = 0;\n\n            document.removeListener('mouseup', onMouseUp);\n            resizer.removeListener('mousedown', onMouseDown);\n            resizer.removeListener('mousemove', onMouseMove);\n\n            document.getBody().setStyle('cursor', 'auto');\n        }\n\n        function resizeStart() {\n            // Before starting to resize, figure out which cells to change\n            // and the boundaries of this resizing shift.\n\n            var columnIndex = pillar.index,\n                map = CKEDITOR.tools.buildTableMap(pillar.table),\n                leftColumnCells = [],\n                rightColumnCells = [],\n                leftMinSize = Number.MAX_VALUE,\n                rightMinSize = leftMinSize,\n                rtl = pillar.rtl;\n\n            for (var i = 0, len = map.length; i < len; i++) {\n                var row = map[i],\n                    leftCell = row[columnIndex + (rtl ? 1 : 0)],\n                    rightCell = row[columnIndex + (rtl ? 0 : 1)];\n\n                leftCell = leftCell && new CKEDITOR.dom.element(leftCell);\n                rightCell = rightCell && new CKEDITOR.dom.element(rightCell);\n\n                if (!leftCell || !rightCell || !leftCell.equals(rightCell)) {\n                    leftCell && (leftMinSize = Math.min(leftMinSize, getWidth(leftCell)));\n                    rightCell && (rightMinSize = Math.min(rightMinSize, getWidth(rightCell)));\n\n                    leftColumnCells.push(leftCell);\n                    rightColumnCells.push(rightCell);\n                }\n            }\n\n            // Cache the list of cells to be resized.\n            leftSideCells = leftColumnCells;\n            rightSideCells = rightColumnCells;\n\n            // Cache the resize limit boundaries.\n            leftShiftBoundary = pillar.x - leftMinSize;\n            rightShiftBoundary = pillar.x + rightMinSize;\n\n            resizer.setOpacity(0.5);\n            startOffset = parseInt(resizer.getStyle('left'), 10);\n            currentShift = 0;\n            isResizing = 1;\n\n            resizer.on('mousemove', onMouseMove);\n\n            // Prevent the native drag behavior otherwise 'mousemove' won't fire.\n            document.on('dragstart', cancel);\n        }\n\n        function resizeEnd() {\n            isResizing = 0;\n\n            resizer.setOpacity(0);\n\n            currentShift && resizeColumn();\n\n            var table = pillar.table;\n            setTimeout(function() {\n                table.removeCustomData('_cke_table_pillars');\n            }, 0);\n\n            document.removeListener('dragstart', cancel);\n        }\n\n        function resizeColumn() {\n            var rtl = pillar.rtl,\n                cellsCount = rtl ? rightSideCells.length : leftSideCells.length;\n\n            // Perform the actual resize to table cells, only for those by side of the pillar.\n            for (var i = 0; i < cellsCount; i++) {\n                var leftCell = leftSideCells[i],\n                    rightCell = rightSideCells[i],\n                    table = pillar.table;\n\n                // Defer the resizing to avoid any interference among cells.\n                CKEDITOR.tools.setTimeout(function(leftCell, leftOldWidth, rightCell, rightOldWidth, tableWidth, sizeShift) {\n                    // 1px is the minimum valid width (#11626).\n                    leftCell && leftCell.setStyle('width', pxUnit(Math.max(leftOldWidth + sizeShift, 1)));\n                    rightCell && rightCell.setStyle('width', pxUnit(Math.max(rightOldWidth - sizeShift, 1)));\n\n                    // If we're in the last cell, we need to resize the table as well\n                    if (tableWidth) {\n                        table.setStyle('width', pxUnit(tableWidth + sizeShift * (rtl ? -1 : 1)));\n                    }\n                }, 0, this, [\n                    leftCell, leftCell && getWidth(leftCell),\n                    rightCell, rightCell && getWidth(rightCell), (!leftCell || !rightCell) && (getWidth(table) + getBorderWidth(table, 'left') + getBorderWidth(table, 'right')),\n                    currentShift\n                ]);\n            }\n        }\n\n        function onMouseDown(evt) {\n            cancel(evt);\n\n            resizeStart();\n\n            document.on('mouseup', onMouseUp, this);\n        }\n\n        function onMouseUp(evt) {\n            evt.removeListener();\n\n            resizeEnd();\n        }\n\n        function onMouseMove(evt) {\n            move(evt.data.getPageOffset().x);\n        }\n\n        document = editor.document;\n\n        resizer = CKEDITOR.dom.element.createFromHtml('<div data-cke-temp=1 contenteditable=false unselectable=on ' +\n            'style=\"position:absolute;cursor:col-resize;filter:alpha(opacity=0);opacity:0;' +\n            'padding:0;background-color:#004;background-image:none;border:0px none;z-index:10\"></div>', document);\n\n        // Clean DOM when editor is destroyed.\n        editor.on('destroy', function() {\n            resizer.remove();\n        });\n\n        // Place the resizer after body to prevent it\n        // from being editable.\n        document.getDocumentElement().append(resizer);\n\n        this.attachTo = function(targetPillar) {\n            // Accept only one pillar at a time.\n            if (isResizing) {\n                return;\n            }\n\n            pillar = targetPillar;\n\n            resizer.setStyles({\n                width: pxUnit(targetPillar.width),\n                height: pxUnit(targetPillar.height),\n                left: pxUnit(targetPillar.x),\n                top: pxUnit(targetPillar.y)\n            });\n\n            resizer.on('mousedown', onMouseDown, this);\n\n            document.getBody().setStyle('cursor', 'col-resize');\n\n            // Display the resizer to receive events but don't show it,\n            // only change the cursor to resizable shape.\n            resizer.show();\n        };\n\n        var move = this.move = function(posX) {\n            if (!pillar){\n                return 0;\n            }\n\n            if (!isResizing && (posX < pillar.x || posX > (pillar.x + pillar.width))) {\n                detach();\n                return 0;\n            }\n\n            var resizerNewPosition = posX - Math.round(resizer.$.offsetWidth / 2);\n\n            if (isResizing) {\n                if (resizerNewPosition === leftShiftBoundary || resizerNewPosition === rightShiftBoundary) {\n                    return 1;\n                }\n\n                resizerNewPosition = Math.max(resizerNewPosition, leftShiftBoundary);\n                resizerNewPosition = Math.min(resizerNewPosition, rightShiftBoundary);\n\n                currentShift = resizerNewPosition - startOffset;\n            }\n\n            resizer.setStyle('left', pxUnit(resizerNewPosition));\n\n            return 1;\n        };\n    }\n\n    function clearPillarsCache(evt) {\n        var target = evt.data.getTarget();\n\n        if (evt.name === 'mouseout') {\n            // Bypass interal mouse move.\n            if (!target.is('table')) {\n                return;\n            }\n\n            var dest = new CKEDITOR.dom.element(evt.data.$.relatedTarget || evt.data.$.toElement);\n            while (dest && dest.$ && !dest.equals(target) && !dest.is('body')) {\n                dest = dest.getParent();\n            }\n            if (!dest || dest.equals(target)) {\n                return;\n            }\n        }\n\n        target.getAscendant('table', 1).removeCustomData('_cke_table_pillars');\n        evt.removeListener();\n    }\n\n    CKEDITOR.plugins.add('ae_tableresize', {\n        requires: 'ae_tabletools',\n\n        init: function(editor) {\n            editor.on('contentDom', function() {\n                var resizer,\n                    editable = editor.editable();\n\n                // In Classic editor it is better to use document\n                // instead of editable so event will work below body.\n                editable.attachListener(editable.isInline() ? editable : editor.document, 'mousemove', function(evt) {\n                    evt = evt.data;\n\n                    var target = evt.getTarget();\n\n                    // FF may return document and IE8 some UFO (object with no nodeType property...)\n                    // instead of an element (#11823).\n                    if (target.type !== CKEDITOR.NODE_ELEMENT) {\n                        return;\n                    }\n\n                    var pageX = evt.getPageOffset().x;\n\n                    // If we're already attached to a pillar, simply move the\n                    // resizer.\n                    if (resizer && resizer.move(pageX)) {\n                        cancel(evt);\n                        return;\n                    }\n\n                    // Considering table, tr, td, tbody but nothing else.\n                    var table, pillars;\n\n                    if (!target.is('table') && !target.getAscendant('tbody', 1)) {\n                        return;\n                    }\n\n                    table = target.getAscendant('table', 1);\n\n                    // Make sure the table we found is inside the container\n                    // (eg. we should not use tables the editor is embedded within)\n                    if (!editor.editable().contains(table)) {\n                        return;\n                    }\n\n                    if (!(pillars = table.getCustomData('_cke_table_pillars'))) {\n                        // Cache table pillars calculation result.\n                        table.setCustomData('_cke_table_pillars', (pillars = buildTableColumnPillars(table)));\n                        table.on('mouseout', clearPillarsCache);\n                        table.on('mousedown', clearPillarsCache);\n                    }\n\n                    var pillar = getPillarAtPosition(pillars, pageX);\n                    if (pillar) {\n                        !resizer && (resizer = new columnResizer(editor));\n                        resizer.attachTo(pillar);\n                    }\n                });\n            });\n        }\n    });\n\n}());\n","(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_selectionkeystrokes')) {\n        return;\n    }\n\n    /**\n     * CKEditor plugin that simulates editor interaction events based on manual keystrokes. This\n     * can be used to trigger different reactions in the editor.\n     *\n     * @class CKEDITOR.plugins.ae_selectionkeystrokes\n     */\n    CKEDITOR.plugins.add(\n        'ae_selectionkeystrokes', {\n            requires: 'ae_selectionregion',\n\n            /**\n             * Initialization of the plugin, part of CKEditor plugin lifecycle.\n             * The function adds a command to the editor for every defined selectionKeystroke\n             * in the configuration and maps it to the specified keystroke.\n             *\n             * @method init\n             * @param {Object} editor The current editor instance\n             */\n            init: function(editor) {\n                if (editor.config.selectionKeystrokes) {\n                    editor.config.selectionKeystrokes.forEach(function(selectionKeystroke) {\n                        var command = new CKEDITOR.command(editor, {\n                            exec: function(editor) {\n                                editor.fire('editorInteraction', {\n                                    manualSelection: selectionKeystroke.selection,\n                                    nativeEvent: {},\n                                    selectionData: editor.getSelectionData()\n                                });\n                            }\n                        });\n\n                        var commandName = 'selectionKeystroke' + selectionKeystroke.selection;\n\n                        editor.addCommand(commandName, command);\n                        editor.setKeystroke(selectionKeystroke.keys, commandName);\n                    });\n                }\n            }\n        }\n    );\n}());","(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_placeholder')) {\n        return;\n    }\n\n    /**\n     * CKEDITOR enterMode config set the behavior of paragraphs\n     * When the content is empty CKEDITOR keeps the enterMode string\n     * into the content\n     * @property\n     * @type {string}\n     */\n    var brFiller = CKEDITOR.env.needsBrFiller ? '<br>' : '';\n\n    var enterModeEmptyValue = {\n        1: ['<p>' + brFiller + '</p>'],\n        2: ['', ' ', brFiller],\n        3: ['<div>' + brFiller + '</div>']\n    };\n\n    /**\n     * CKEditor plugin which allows adding a placeholder to the editor. In this case, if there\n     * is no content to the editor, there will be hint to the user.\n     *\n     * @class CKEDITOR.plugins.ae_placeholder\n     */\n\n    /**\n     * Specifies the placeholder class which have to be aded to editor when editor is not focused.\n     *\n     * @attribute placeholderClass\n     * @default ae_placeholder\n     * @type String\n     */\n\n    CKEDITOR.plugins.add(\n        'ae_placeholder', {\n\n            /**\n             * Initialization of the plugin, part of CKEditor plugin lifecycle.\n             * The function registers a 'blur' and 'contentDom' event listeners.\n             *\n             * @method init\n             * @param {Object} editor The current editor instance\n             */\n            init: function(editor) {\n                editor.on('blur', this._checkEmptyData, this);\n                editor.on('change', this._checkEmptyData, this);\n                editor.on('focus', this._removePlaceholderClass, this);\n                editor.once('contentDom', this._checkEmptyData, this);\n            },\n\n            /**\n             * Removes any data from the content and adds a class,\n             * specified by the \"placeholderClass\" config attribute.\n             *\n             * @protected\n             * @method _checkEmptyData\n             * @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n             */\n            _checkEmptyData: function(event) {\n                var editor = event.editor;\n\n                var editableNode = editor.editable();\n\n                var innerHtml = editableNode.$.innerHTML.trim();\n\n                var isEmpty = enterModeEmptyValue[editor.config.enterMode].some(function(element) {\n                    return innerHtml === element;\n                });\n\n                if (isEmpty) {\n                    editableNode.addClass(editor.config.placeholderClass);\n                } else {\n                    editableNode.removeClass(editor.config.placeholderClass);\n                }\n            },\n\n            /**\n             * Remove placeholder class when input is focused\n             *\n             * @protected\n             * @method _removePlaceholderClass\n             + @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n             */\n            _removePlaceholderClass: function(event) {\n                var editor = event.editor;\n\n                var editorNode = new CKEDITOR.dom.element(editor.element.$);\n\n                editorNode.removeClass(editor.config.placeholderClass);\n            }\n        }\n    );\n}());","(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_pasteimages')) {\n        return;\n    }\n\n    /**\n     * CKEditor plugin which allows pasting images directly into the editable area. The image will be encoded\n     * as Data URI. An event `beforeImageAdd` will be fired with the list of pasted images. If any of the listeners\n     * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n     * an event `imageAdd` will be fired with the inserted element into the editable area.\n     *\n     * @class CKEDITOR.plugins.ae_pasteimages\n     */\n\n    /**\n     * Fired before adding images to the editor.\n     * @event beforeImageAdd\n     * @param {Array} imageFiles Array of image files\n     */\n\n    /**\n     * Fired when an image is being added to the editor successfully.\n     *\n     * @event imageAdd\n     * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n     * @param {File} file The image file\n     */\n\n    CKEDITOR.plugins.add(\n        'ae_pasteimages', {\n            /**\n             * Initialization of the plugin, part of CKEditor plugin lifecycle.\n             * The function registers a 'paste' event on the editing area.\n             *\n             * @method init\n             * @param {Object} editor The current editor instance\n             */\n            init: function(editor) {\n                editor.once('contentDom', function() {\n                    var editable = editor.editable();\n\n                    editable.attachListener(editable, 'paste', this._onPaste, this, {\n                        editor: editor\n                    });\n                }.bind(this));\n            },\n\n            /**\n             * The function creates an img element with src the image data as Data URI.\n             * Then, it fires an 'imageAdd' event via CKEditor's event system. The passed\n             * params will be:\n             * - `el` - the created img element\n             * - `file` - the original pasted data\n             *\n             * @method _onPaste\n             * @protected\n             * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n             */\n            _onPaste: function(event) {\n                if (event.data.$.clipboardData) {\n                    var pastedData = event.data.$.clipboardData.items[0];\n                    var editor = event.listenerData.editor;\n\n                    if (pastedData.type.indexOf('image') === 0) {\n                        var reader = new FileReader();\n                        var imageFile = pastedData.getAsFile();\n\n                        reader.onload = function(event) {\n                            var result = editor.fire('beforeImageAdd', {\n                                imageFiles: imageFile\n                            });\n\n                            if (!!result) {\n                                var el = CKEDITOR.dom.element.createFromHtml('<img src=\"' + event.target.result + '\">');\n\n                                editor.insertElement(el);\n\n                                var imageData = {\n                                    el: el,\n                                    file: imageFile\n                                };\n\n                                editor.fire('imageAdd', imageData);\n                            }\n                        }.bind(this);\n\n                        reader.readAsDataURL(imageFile);\n                    }\n                }\n            }\n        }\n    );\n}());","import SelectionTest from '../selections/selection-test.js';\n\n(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_imagealignment')) {\n        return;\n    }\n\n    /**\n     * Enum for supported image alignments\n     * @type {Object}\n     */\n    var IMAGE_ALIGNMENT = {\n        CENTER: 'center',\n        LEFT: 'left',\n        RIGHT: 'right'\n    };\n\n    /**\n     * Enum values for supported image alignments\n     * @type {Array}\n     */\n    var ALIGN_VALUES = [\n        IMAGE_ALIGNMENT.LEFT,\n        IMAGE_ALIGNMENT.RIGHT,\n        IMAGE_ALIGNMENT.CENTER\n    ];\n\n    /**\n     * Necessary styles for the center alignment\n     * @type {Array.<Object>}\n     */\n    var CENTERED_IMAGE_STYLE = [{\n        name: 'display',\n        value: 'block'\n    }, {\n        name: 'margin-left',\n        value: 'auto'\n    }, {\n        name: 'margin-right',\n        value: 'auto'\n    }];\n\n    /**\n     * Retrieves the alignment value of an image.\n     *\n     * @param {CKEDITOR.dom.element} image The image element\n     * @return {String} The alignment value\n     */\n    var getImageAlignment = function(image) {\n        var imageAlignment = image.getStyle('float');\n\n        if (!imageAlignment || imageAlignment === 'inherit' || imageAlignment === 'none') {\n            imageAlignment = image.getAttribute('align');\n        }\n\n        if (!imageAlignment) {\n            var centeredImage = CENTERED_IMAGE_STYLE.every(function(style) {\n                var styleCheck = image.getStyle(style.name) === style.value;\n\n                if (!styleCheck && style.vendorPrefixes) {\n                    styleCheck = style.vendorPrefixes.some(function(vendorPrefix) {\n                        return image.getStyle(vendorPrefix + style.name) === style.value;\n                    });\n                }\n\n                return styleCheck;\n            });\n\n            imageAlignment = centeredImage ? IMAGE_ALIGNMENT.CENTER : null;\n        }\n\n        return imageAlignment;\n    };\n\n    /**\n     * Removes the alignment value of an image\n     *\n     * @param {CKEDITOR.dom.element} image The image element\n     * @param {String} imageAlignment The image alignment value to be removed\n     */\n    var removeImageAlignment = function(image, imageAlignment) {\n        if (imageAlignment === IMAGE_ALIGNMENT.LEFT || imageAlignment === IMAGE_ALIGNMENT.RIGHT) {\n            image.removeStyle('float');\n\n            if (imageAlignment === getImageAlignment(image)) {\n                image.removeAttribute('align');\n            }\n        } else if (imageAlignment === IMAGE_ALIGNMENT.CENTER) {\n            CENTERED_IMAGE_STYLE.forEach(function(style) {\n                image.removeStyle(style.name);\n\n                if (style.vendorPrefixes) {\n                    style.vendorPrefixes.forEach(function(vendorPrefix) {\n                        image.removeStyle(vendorPrefix + style.name);\n                    });\n                }\n            });\n        }\n    };\n\n    /**\n     * Sets the alignment value of an image\n     *\n     * @param {CKEDITOR.dom.element} image The image element\n     * @param {String} imageAlignment The image alignment value to be set\n     */\n    var setImageAlignment = function(image, imageAlignment) {\n        removeImageAlignment(image, getImageAlignment(image));\n\n        if (imageAlignment === IMAGE_ALIGNMENT.LEFT || imageAlignment === IMAGE_ALIGNMENT.RIGHT) {\n            image.setStyle('float', imageAlignment);\n        } else if (imageAlignment === IMAGE_ALIGNMENT.CENTER) {\n            CENTERED_IMAGE_STYLE.forEach(function(style) {\n                image.setStyle(style.name, style.value);\n\n                if (style.vendorPrefixes) {\n                    style.vendorPrefixes.forEach(function(vendorPrefix) {\n                        image.setStyle(vendorPrefix + style.name, style.value);\n                    });\n                }\n            });\n        }\n    };\n\n    /**\n     * CKEditor plugin which modifies the justify commands to properly align images. This\n     * plugin is an excerpt of CKEditor's original image one that can be found at\n     * https://github.com/ckeditor/ckeditor-dev/blob/master/plugins/image/plugin.js\n     *\n     * @class CKEDITOR.plugins.ae_imagealignment\n     */\n    CKEDITOR.plugins.add(\n        'ae_imagealignment', {\n            /**\n             * Initialization of the plugin, part of CKEditor plugin lifecycle.\n             * The function registers a 'paste' event on the editing area.\n             *\n             * @method afterInit\n             * @param {Object} editor The current editor instance\n             */\n            afterInit: function(editor) {\n                var self = this;\n\n                ALIGN_VALUES.forEach(function(value) {\n                    var command = editor.getCommand('justify' + value);\n\n                    if (command) {\n                        command.on('exec', function(event) {\n                            var selectionData = editor.getSelectionData();\n\n                            if (selectionData && SelectionTest.image({data: {selectionData: selectionData}})) {\n                                var image = selectionData.element;\n\n                                var imageAlignment = getImageAlignment(image);\n\n                                if (imageAlignment === value) {\n                                    removeImageAlignment(image, value);\n                                } else {\n                                    setImageAlignment(image, value);\n                                }\n\n                                event.cancel();\n\n                                self.refreshCommands(editor, new CKEDITOR.dom.elementPath(image));\n                            }\n                        });\n\n                        command.on('refresh', function(event) {\n                            var selectionData = {\n                                element: event.data.path.lastElement\n                            };\n\n                            if (SelectionTest.image({data: {selectionData: selectionData}})) {\n                                var imageAlignment = getImageAlignment(selectionData.element);\n\n                                this.setState(imageAlignment === value ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF);\n\n                                event.cancel();\n                            }\n                        });\n                    }\n                });\n            },\n\n            /**\n             * Forces a refresh of the modified justify commands. This is needed because the applied changes\n             * do not modify the selection, so the refresh is never triggered and the UI does not update\n             * properly until the next selectionChange event.\n             *\n             * @param {CKEDITOR.editor} editor The editor instance\n             * @param {CKEDITOR.dom.elementPath} elementPath The path of the selected image\n             */\n            refreshCommands: function(editor, elementPath) {\n                ALIGN_VALUES.forEach(function(value) {\n                    var command = editor.getCommand('justify' + value);\n\n                    if (command) {\n                        command.refresh(editor, elementPath);\n                    }\n                });\n            }\n        }\n    );\n}());","(function() {\n    'use strict';\n\n    /* istanbul ignore if */\n    if (CKEDITOR.plugins.get('ae_embed')) {\n        return;\n    }\n\n    var REGEX_HTTP = /^https?/;\n\n    var REGEX_DEFAULT_LINK = /<a href=/;\n\n    var PROVIDERS = ['youtube', 'twitter'];\n\n    CKEDITOR.DEFAULT_AE_EMBED_URL_TPL = 'http://alloy.iframe.ly/api/oembed?url={url}&callback={callback}';\n    CKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL = '<div data-ae-embed-url=\"{url}\"></div>';\n    CKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL = '<a href=\"{url}\">{url}</a>';\n    /**\n     * CKEditor plugin which adds the infrastructure to embed urls as media objects using an oembed\n     * service. By default, and for demoing purposes only, the oembed service is hosted in iframe.ly\n     * at //alloy.iframe.ly/api/oembed?url={url}&callback={callback}. Note this should be changed to\n     * a self-hosted or paid service in production environments. Access to the alloy.iframe.ly endpoint\n     * may be restricted per domain due to significant traffic.\n     *\n     * This plugin adds an `embedUrl` command that can be used to easily embed a URL and transform it\n     * to an embedded content.\n     *\n     * @class CKEDITOR.plugins.ae_embed\n     */\n    CKEDITOR.plugins.add(\n        'ae_embed', {\n            requires: 'widget',\n            init: function(editor) {\n                var AE_EMBED_URL_TPL = new CKEDITOR.template(editor.config.embedUrlTemplate || CKEDITOR.DEFAULT_AE_EMBED_URL_TPL);\n                var AE_EMBED_WIDGET_TPL = new CKEDITOR.template(editor.config.embedWidgetTpl || CKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL);\n                var AE_EMBED_DEFAULT_LINK_TPL = new CKEDITOR.template(editor.config.embedLinkDefaultTpl || CKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL);\n\n                // Default function to upcast DOM elements to embed widgets.\n                // It matches CKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL\n                var defaultEmbedWidgetUpcastFn = function(element, data) {\n                    if (element.name === 'div' && element.attributes['data-ae-embed-url']) {\n                        data.url = element.attributes['data-ae-embed-url'];\n\n                        return true;\n                    }\n                };\n\n                // Create a embedUrl command that can be invoked to easily embed media URLs\n                editor.addCommand('embedUrl', {\n                    exec: function(editor, data) {\n                        editor.insertHtml(\n                            AE_EMBED_WIDGET_TPL.output({\n                                url: data.url\n                            })\n                        );\n                    }\n                });\n\n                // Create a widget to properly handle embed operations\n                editor.widgets.add('ae_embed', {\n\n\n                    mask: true,\n                    requiredContent: 'div[data-ae-embed-url]',\n\n                    /**\n                     * Listener to be executed every time the widget's data changes. It takes care of\n                     * requesting the embed object to the configured oembed service and render it in\n                     * the editor\n                     *\n                     * @method data\n                     * @param {event} event Data change event\n                     */\n                    data: function(event) {\n                        var widget = this;\n\n                        var url = event.data.url;\n\n                        if (url) {\n                            CKEDITOR.tools.jsonp(AE_EMBED_URL_TPL, {\n                                url: encodeURIComponent(url)\n                            }, function(response) {\n                                if (response.html) {\n                                    if (REGEX_DEFAULT_LINK.test(response.html)) {\n                                        widget.createATag(url);\n                                    } else {\n                                        widget.element.setHtml(response.html);\n                                    }\n                                } else {\n                                    widget.createATag(url);\n                                }\n                            }, function(msg) {\n                                widget.createATag(url);\n                            });\n                        }\n                    },\n\n                    createATag: function(url) {\n                        this.editor.execCommand('undo');\n\n                        var currentSelection = this.editor.getSelection().getSelectedElement();\n\n                        var aTagHtml = AE_EMBED_DEFAULT_LINK_TPL.output({\n                            url: url\n                        });\n\n                        this.editor.insertHtml(aTagHtml);\n                        this.editor.fire('actionPerformed', this);\n                    },\n\n                    /**\n                     * Function used to upcast an element to ae_embed widgets.\n                     *\n                     * @method upcast\n                     * @param {CKEDITOR.htmlParser.element} element The element to be checked\n                     * @param {Object} data The object that will be passed to the widget\n                     */\n                    upcast: function(element, data) {\n                        var embedWidgetUpcastFn = editor.config.embedWidgetUpcastFn || defaultEmbedWidgetUpcastFn;\n\n                        return embedWidgetUpcastFn(element, data);\n                    }\n                });\n\n                // Add a listener to handle paste events and turn links into embed objects\n                editor.once('contentDom', function() {\n                    editor.on('paste', function(event) {\n                        var link = event.data.dataValue;\n\n                        if (REGEX_HTTP.test(link)) {\n                            event.stop();\n\n                            editor.execCommand('embedUrl', {\n                                url: event.data.dataValue\n                            });\n                        }\n                    });\n                });\n\n                // Add a listener to handle selection change events and properly detect editor\n                // interactions on the widgets without messing with widget native selection\n                editor.on('selectionChange', function(event) {\n                    var selection = editor.getSelection();\n\n                    if (selection){\n                        var element = selection.getSelectedElement();\n\n                        if (element) {\n                            var widgetElement = element.findOne('[data-widget=\"ae_embed\"]');\n\n                            if (widgetElement) {\n                                var region = element.getClientRect();\n\n                                var scrollPosition = new CKEDITOR.dom.window(window).getScrollPosition();\n                                region.left -= scrollPosition.x;\n                                region.top += scrollPosition.y;\n\n                                region.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n                                editor.fire('editorInteraction', {\n                                    nativeEvent: {},\n                                    selectionData: {\n                                        element: widgetElement,\n                                        region: region\n                                    }\n                                });\n                            }\n                        }\n                    }\n                });\n\n                // Add a filter to skip filtering widget elements\n                editor.filter.addElementCallback(function(element) {\n                    if ('data-ae-embed-url' in element.attributes) {\n                        return CKEDITOR.FILTER_SKIP_TREE;\n                    }\n                });\n            }\n        }\n    );\n}());","/**\n * CKEditor plugin: Image2\n * - Show gripper to resize images on IE\n */\n(function () {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_dragresize_ie')) {\n        return;\n    }\n\n    var alignmentsObj = {\n        center: 1,\n        left: 0,\n        right: 2\n    };\n\n    /*\n     * Set cursor css depend on imageScaleResize config\n     **/\n\n    var cursor = {\n        both: 'nwse-resize',\n        height: 'ns-resize',\n        scale: 'nwse-resize',\n        width: 'ew-resize',\n    };\n\n    var regexPercent = /^\\s*(\\d+\\%)\\s*$/i;\n\n    var template = '<img alt=\"\" src=\"\" />';\n\n    CKEDITOR.plugins.add('ae_dragresize_ie', {\n        hidpi: true,\n\n        icons: 'image',\n\n        init: function (editor) {\n            var image = widgetDef(editor);\n\n            // Register the widget.\n            editor.widgets.add('image', image);\n        },\n\n        onLoad: function () {\n            CKEDITOR.addCss(\n                '.cke_image_resizer_nwse-resize{' +\n                'cursor: nwse-resize;' +\n                '}' +\n                '.cke_image_resizer_ns-resize{' +\n                'cursor: ns-resize;' +\n                '}' +\n                '.cke_image_resizer_nwse-resize{' +\n                'cursor: nwse-resize;' +\n                '}' +\n                '.cke_image_resizer_ew-resize{' +\n                'cursor: ew-resize;' +\n                '}' +\n                '.cke_image_nocaption{' +\n                // This is to remove unwanted space so resize\n                // wrapper is displayed property.\n                'line-height:0' +\n                '}' +\n                '.cke_image_resizer{' +\n                'display:none;' +\n                'position:absolute;' +\n                'width:10px;' +\n                'height:10px;' +\n                'bottom:-5px;' +\n                'right:-5px;' +\n                'background:#000;' +\n                'outline:1px solid #fff;' +\n                // Prevent drag handler from being misplaced (#11207).\n                'line-height:0;' +\n                'cursor:nwse-resize;' +\n                '}' +\n                '.cke_image_resizer_wrapper{' +\n                'position:relative;' +\n                'display:inline-block;' +\n                'line-height:0;' +\n                '}' +\n                '.cke_widget_wrapper:hover .cke_image_resizer,' +\n                '.cke_image_resizer.cke_image_resizing{' +\n                'display:block' +\n                '}'\n            );\n        },\n\n        requires: 'widget'\n    });\n\n    // Wiget states (forms) depending on alignment and configuration.\n    //\n    // Non-captioned widget (inline styles)\n    // \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n    // \t\t│Align │Internal form                  │Data                         │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│none  │<wrapper>                      │<img />                      │\n    // \t\t│      │ <img />                       │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│left  │<wrapper style=”float:left”>   │<img style=”float:left” />   │\n    // \t\t│      │ <img />                       │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│center│<wrapper>                      │<p style=”text-align:center”>│\n    // \t\t│      │ <p style=”text-align:center”> │  <img />                    │\n    // \t\t│      │   <img />                     │</p>                         │\n    // \t\t│      │ </p>                          │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│right │<wrapper style=”float:right”>  │<img style=”float:right” />  │\n    // \t\t│      │ <img />                       │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n    //\n    // Non-captioned widget (config.image2_alignClasses defined)\n    // \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n    // \t\t│Align │Internal form                  │Data                         │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│none  │<wrapper>                      │<img />                      │\n    // \t\t│      │ <img />                       │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│left  │<wrapper class=”left”>         │<img class=”left” />         │\n    // \t\t│      │ <img />                       │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│center│<wrapper>                      │<p class=”center”>           │\n    // \t\t│      │ <p class=”center”>            │ <img />                     │\n    // \t\t│      │   <img />                     │</p>                         │\n    // \t\t│      │ </p>                          │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n    // \t\t│right │<wrapper class=”right”>        │<img class=”right” />        │\n    // \t\t│      │ <img />                       │                             │\n    // \t\t│      │</wrapper>                     │                             │\n    // \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n    //\n    // Captioned widget (inline styles)\n    // \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n    // \t\t│Align │Internal form                           │Data                                    │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│none  │<wrapper>                               │<figure />                              │\n    // \t\t│      │ <figure />                             │                                        │\n    // \t\t│      │</wrapper>                              │                                        │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│left  │<wrapper style=”float:left”>            │<figure style=”float:left” />           │\n    // \t\t│      │ <figure />                             │                                        │\n    // \t\t│      │</wrapper>                              │                                        │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│center│<wrapper style=”text-align:center”>     │<div style=”text-align:center”>         │\n    // \t\t│      │ <figure style=”display:inline-block” />│ <figure style=”display:inline-block” />│\n    // \t\t│      │</wrapper>                              │</p>                                    │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│right │<wrapper style=”float:right”>           │<figure style=”float:right” />          │\n    // \t\t│      │ <figure />                             │                                        │\n    // \t\t│      │</wrapper>                              │                                        │\n    // \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n    //\n    // Captioned widget (config.image2_alignClasses defined)\n    // \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n    // \t\t│Align │Internal form                           │Data                                    │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│none  │<wrapper>                               │<figure />                              │\n    // \t\t│      │ <figure />                             │                                        │\n    // \t\t│      │</wrapper>                              │                                        │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│left  │<wrapper class=”left”>                  │<figure class=”left” />                 │\n    // \t\t│      │ <figure />                             │                                        │\n    // \t\t│      │</wrapper>                              │                                        │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│center│<wrapper class=”center”>                │<div class=”center”>                    │\n    // \t\t│      │ <figure />                             │ <figure />                             │\n    // \t\t│      │</wrapper>                              │</p>                                    │\n    // \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n    // \t\t│right │<wrapper class=”right”>                 │<figure class=”right” />                │\n    // \t\t│      │ <figure />                             │                                        │\n    // \t\t│      │</wrapper>                              │                                        │\n    // \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n    //\n    // @param {CKEDITOR.editor}\n    // @returns {Object}\n    function widgetDef(editor) {\n        editor.config.imageScaleResize = editor.config.imageScaleResize || 'both';\n\n        editor.on('imageAdd', function (imageData) {\n            editor.widgets.initOn(imageData.data.el, 'image');\n        });\n\n        var alignClasses = editor.config.image2_alignClasses;\n\n        var captionedClass = editor.config.image2_captionedClass;\n\n        return {\n            init: function () {\n                var helpers = CKEDITOR.plugins.image2;\n\n                var image = this.parts.image;\n\n                var data = {\n                    alt: image.getAttribute('alt') || '',\n                    hasCaption: !!this.parts.caption,\n                    height: image.getAttribute('height') || '',\n                    // Lock ratio is on by default (#10833).\n                    lock: this.ready ? helpers.checkHasNaturalRatio(image) : true,\n                    src: image.getAttribute('src'),\n                    width: image.getAttribute('width') || ''\n                };\n\n                // If we used 'a' in widget#parts definition, it could happen that\n                // selected element is a child of widget.parts#caption. Since there's no clever\n                // way to solve it with CSS selectors, it's done like that. (#11783).\n                var link = image.getAscendant('a');\n\n                if (link && this.wrapper.contains(link)) {\n                    this.parts.link = link;\n                }\n\n                // Depending on configuration, read style/class from element and\n                // then remove it. Removed style/class will be set on wrapper in #data listener.\n                // Note: Center alignment is detected during upcast, so only left/right cases\n                // are checked below.\n                if (!data.align) {\n                    var alignElement = data.hasCaption ? this.element : image;\n\n                    // Read the initial left/right alignment from the class set on element.\n                    if (alignClasses) {\n                        if (alignElement.hasClass(alignClasses[0])) {\n                            data.align = 'left';\n                        } else if (alignElement.hasClass(alignClasses[2])) {\n                            data.align = 'right';\n                        }\n\n                        if (data.align) {\n                            alignElement.removeClass(alignClasses[alignmentsObj[data.align]]);\n                        } else {\n                            data.align = 'none';\n                        }\n                    }\n                    // Read initial float style from figure/image and then remove it.\n                    else {\n                        data.align = alignElement.getStyle('float') || 'none';\n                        alignElement.removeStyle('float');\n                    }\n                }\n\n                // Get rid of extra vertical space when there's no caption.\n                // It will improve the look of the resizer.\n                this.wrapper[(data.hasCaption ? 'remove' : 'add') + 'Class']('cke_image_nocaption');\n\n                this.setData(data);\n\n                if (editor.config.image2_disableResizer !== true) {\n                    setupResizer(this);\n                }\n            },\n\n            // Overrides default method to handle internal mutability of Image2.\n            // @see CKEDITOR.plugins.widget#addClass\n            addClass: function (className) {\n                getStyleableElement(this).addClass(className);\n            },\n\n            allowedContent: getWidgetAllowedContent(editor),\n\n            // This widget converts style-driven dimensions to attributes.\n            contentTransformations: [\n                ['img[width]: sizeToAttribute']\n            ],\n\n            data: function () {\n                var features = this.features;\n\n                // Image can't be captioned when figcaption is disallowed (#11004).\n                if (this.data.hasCaption && !editor.filter.checkFeature(features.caption)) {\n                    this.data.hasCaption = false;\n                }\n\n                // Image can't be aligned when floating is disallowed (#11004).\n                if (this.data.align != 'none' && !editor.filter.checkFeature(features.align)) {\n                    this.data.align = 'none';\n                }\n\n                // Update widget.parts.link since it will not auto-update unless widget\n                // is destroyed and re-inited.\n                if (!this.data.link) {\n                    if (this.parts.link) {\n                        delete this.parts.link;\n                    }\n                } else {\n                    if (!this.parts.link) {\n                        this.parts.link = this.parts.image.getParent();\n                    }\n                }\n\n                this.parts.image.setAttributes({\n                    alt: this.data.alt,\n\n                    contenteditable: this.parts.image.getAttribute('contenteditable') ? this.parts.image.getAttribute('contenteditable') : true,\n\n                    // This internal is required by the editor.\n                    'data-cke-saved-src': this.data.src,\n\n                    src: this.data.src\n                });\n\n                // If shifting non-captioned -> captioned, remove classes\n                // related to styles from <img/>.\n                if (this.oldData && !this.oldData.hasCaption && this.data.hasCaption) {\n                    for (var c in this.data.classes) {\n                        this.parts.image.removeClass(c);\n                    }\n                }\n\n                // Set dimensions of the image according to gathered data.\n                // Do it only when the attributes are allowed (#11004).\n                if (editor.filter.checkFeature(features.dimension)) {\n                    setDimensions(this);\n                }\n\n                // Cache current data.\n                this.oldData = CKEDITOR.tools.extend({}, this.data);\n            },\n\n            downcast: downcastWidgetElement(editor),\n\n            draggable: false,\n\n            // This widget has an editable caption.\n            editables: {\n                caption: {\n                    selector: 'figcaption',\n                    allowedContent: 'br em strong sub sup u s; a[!href,target]'\n                }\n            },\n\n            features: getWidgetFeatures(editor),\n\n            // Overrides default method to handle internal mutability of Image2.\n            // @see CKEDITOR.plugins.widget#getClasses\n            getClasses: (function () {\n                var classRegex = new RegExp('^(' + [].concat(captionedClass, alignClasses).join('|') + ')$');\n\n                return function () {\n                    var classes = this.repository.parseElementClasses(getStyleableElement(this).getAttribute('class'));\n\n                    // Neither config.image2_captionedClass nor config.image2_alignClasses\n                    // do not belong to style classes.\n                    for (var c in classes) {\n                        if (classRegex.test(c)) {\n                            delete classes[c];\n                        }\n                    }\n\n                    return classes;\n                };\n            })(),\n\n            getLabel: function () {\n                var label = (this.data.alt || '') + ' ' + this.pathName;\n\n                return label;\n            },\n\n            // Overrides default method to handle internal mutability of Image2.\n            // @see CKEDITOR.plugins.widget#hasClass\n            hasClass: function (className) {\n                return getStyleableElement(this).hasClass(className);\n            },\n\n            parts: {\n                caption: 'figcaption',\n                image: 'img'\n            },\n\n            // Overrides default method to handle internal mutability of Image2.\n            // @see CKEDITOR.plugins.widget#removeClass\n            removeClass: function (className) {\n                getStyleableElement(this).removeClass(className);\n            },\n\n            requiredContent: 'img[src,alt]',\n\n            styleableElements: 'img figure',\n\n            // Template of the widget: plain image.\n            template: template,\n\n            upcast: upcastWidgetElement(editor)\n        };\n    }\n\n    /**\n     * A set of Enhanced Image (image2) plugin helpers.\n     *\n     * @class\n     * @singleton\n     */\n    CKEDITOR.plugins.image2 = {\n        /**\n         * Checks whether the current image ratio matches the natural one\n         * by comparing dimensions.\n         *\n         * @param {CKEDITOR.dom.element} image\n         * @returns {Boolean}\n         */\n        checkHasNaturalRatio: function (image) {\n            var $ = image.$,\n                natural = this.getNatural(image);\n\n            // The reason for two alternative comparisons is that the rounding can come from\n            // both dimensions, e.g. there are two cases:\n            // \t1. height is computed as a rounded relation of the real height and the value of width,\n            //\t2. width is computed as a rounded relation of the real width and the value of heigh.\n            return Math.round($.clientWidth / natural.width * natural.height) == $.clientHeight ||\n                Math.round($.clientHeight / natural.height * natural.width) == $.clientWidth;\n        },\n\n        /**\n         * Returns natural dimensions of the image. For modern browsers\n         * it uses natural(Width|Height). For old ones (IE8) it creates\n         * a new image and reads the dimensions.\n         *\n         * @param {CKEDITOR.dom.element} image\n         * @returns {Object}\n         */\n        getNatural: function (image) {\n            var dimensions;\n\n            if (image.$.naturalWidth) {\n                dimensions = {\n                    height: image.$.naturalHeigh,\n                    width: image.$.naturalWidth\n                };\n            } else {\n                var img = new Image();\n\n                img.src = image.getAttribute('src');\n\n                dimensions = {\n                    height: img.heigh,\n                    width: img.width\n                };\n            }\n\n            return dimensions;\n        },\n    };\n\n    // Returns a function that creates widgets from all <img> and\n    // <figure class=\"{config.image2_captionedClass}\"> elements.\n    //\n    // @param {CKEDITOR.editor} editor\n    // @returns {Function}\n    function upcastWidgetElement(editor) {\n        var isCenterWrapper = centerWrapperChecker(editor);\n\n        var captionedClass = editor.config.image2_captionedClass;\n\n        // @param {CKEDITOR.htmlParser.element} el\n        // @param {Object} data\n        return function (el, data) {\n            var dimensions = {\n                height: 1,\n                width: 1\n            };\n\n            var name = el.name;\n\n            var image;\n\n            // #11110 Don't initialize on pasted fake objects.\n            if (el.attributes['data-cke-realelement']) {\n                return;\n            }\n\n            // If a center wrapper is found, there are 3 possible cases:\n            //\n            // 1. <div style=\"text-align:center\"><figure>...</figure></div>.\n            //    In this case centering is done with a class set on widget.wrapper.\n            //    Simply replace centering wrapper with figure (it's no longer necessary).\n            //\n            // 2. <p style=\"text-align:center\"><img/></p>.\n            //    Nothing to do here: <p> remains for styling purposes.\n            //\n            // 3. <div style=\"text-align:center\"><img/></div>.\n            //    Nothing to do here (2.) but that case is only possible in enterMode different\n            //    than ENTER_P.\n            if (isCenterWrapper(el)) {\n                if (name == 'div') {\n                    var figure = el.getFirst('figure');\n\n                    // Case #1.\n                    if (figure) {\n                        el.replaceWith(figure);\n                        el = figure;\n                    }\n                }\n                // Cases #2 and #3 (handled transparently)\n\n                // If there's a centering wrapper, save it in data.\n                data.align = 'center';\n\n                // Image can be wrapped in link <a><img/></a>.\n                image = el.getFirst('img') || el.getFirst('a').getFirst('img');\n            }\n\n            // No center wrapper has been found.\n            else if (name == 'figure' && el.hasClass(captionedClass)) {\n                image = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\n                // Upcast linked image like <a><img/></a>.\n            } else if (isLinkedOrStandaloneImage(el)) {\n                image = el.name == 'a' ? el.children[0] : el;\n            }\n\n            if (!image) {\n                return;\n            }\n\n            // If there's an image, then cool, we got a widget.\n            // Now just remove dimension attributes expressed with %.\n            for (var d in dimensions) {\n                var dimension = image.attributes[d];\n\n                if (dimension && dimension.match(regexPercent)) {\n                    delete image.attributes[d];\n                }\n            }\n\n            return el;\n        };\n    }\n\n    // Returns a function which transforms the widget to the external format\n    // according to the current configuration.\n    //\n    // @param {CKEDITOR.editor}\n    function downcastWidgetElement(editor) {\n        var alignClasses = editor.config.image2_alignClasses;\n\n        // @param {CKEDITOR.htmlParser.element} el\n        return function (el) {\n            // In case of <a><img/></a>, <img/> is the element to hold\n            // inline styles or classes (image2_alignClasses).\n            var attrsHolder = el.name == 'a' ? el.getFirst() : el;\n\n            var attrs = attrsHolder.attributes;\n\n            var align = this.data.align;\n\n            // De-wrap the image from resize handle wrapper.\n            // Only block widgets have one.\n            if (!this.inline) {\n                var resizeWrapper = el.getFirst('span');\n\n                if (resizeWrapper) {\n                    resizeWrapper.replaceWith(resizeWrapper.getFirst({\n                        a: 1,\n                        img: 1\n                    }));\n                }\n            }\n\n            if (align && align != 'none') {\n                var styles = CKEDITOR.tools.parseCssText(attrs.style || '');\n\n                // When the widget is captioned (<figure>) and internally centering is done\n                // with widget's wrapper style/class, in the external data representation,\n                // <figure> must be wrapped with an element holding an style/class:\n                //\n                // \t<div style=\"text-align:center\">\n                // \t\t<figure class=\"image\" style=\"display:inline-block\">...</figure>\n                // \t</div>\n                // or\n                // \t<div class=\"some-center-class\">\n                // \t\t<figure class=\"image\">...</figure>\n                // \t</div>\n                //\n                if (align == 'center' && el.name == 'figure') {\n                    el = el.wrapWith(new CKEDITOR.htmlParser.element('div',\n                        alignClasses ? {\n                            'class': alignClasses[1]\n                        } : {\n                            style: 'text-align:center'\n                        }));\n                }\n\n                // If left/right, add float style to the downcasted element.\n                else if (align in {\n                        left: 1,\n                        right: 1\n                    }) {\n                    if (alignClasses) {\n                        attrsHolder.addClass(alignClasses[alignmentsObj[align]]);\n                    } else {\n                        styles['float'] = align;\n                    }\n                }\n\n                // Update element styles.\n                if (!alignClasses && !CKEDITOR.tools.isEmpty(styles)) {\n                    attrs.style = CKEDITOR.tools.writeCssText(styles);\n                }\n            }\n\n            return el;\n        };\n    }\n\n    // Returns a function that checks if an element is a centering wrapper.\n    //\n    // @param {CKEDITOR.editor} editor\n    // @returns {Function}\n    function centerWrapperChecker(editor) {\n        var captionedClass = editor.config.image2_captionedClass;\n\n        var alignClasses = editor.config.image2_alignClasses;\n\n        var validChildren = {\n            a: 1,\n            figure: 1,\n            img: 1\n        };\n\n        return function (el) {\n            // Wrapper must be either <div> or <p>.\n            if (!(el.name in {\n                    div: 1,\n                    p: 1\n                })) {\n                return false;\n            }\n\n            var children = el.children;\n\n            // Centering wrapper can have only one child.\n            if (children.length !== 1) {\n                return false;\n            }\n\n            var child = children[0];\n\n            // Only <figure> or <img /> can be first (only) child of centering wrapper,\n            // regardless of its type.\n            if (!(child.name in validChildren)) {\n                return false;\n            }\n\n            // If centering wrapper is <p>, only <img /> can be the child.\n            //   <p style=\"text-align:center\"><img /></p>\n            if (el.name == 'p') {\n                if (!isLinkedOrStandaloneImage(child)) {\n                    return false;\n                }\n            }\n            // Centering <div> can hold <img/> or <figure>, depending on enterMode.\n            else {\n                // If a <figure> is the first (only) child, it must have a class.\n                //   <div style=\"text-align:center\"><figure>...</figure><div>\n                if (child.name == 'figure') {\n                    if (!child.hasClass(captionedClass)) {\n                        return false;\n                    }\n                } else {\n                    // Centering <div> can hold <img/> or <a><img/></a> only when enterMode\n                    // is ENTER_(BR|DIV).\n                    //   <div style=\"text-align:center\"><img /></div>\n                    //   <div style=\"text-align:center\"><a><img /></a></div>\n                    if (editor.enterMode == CKEDITOR.ENTER_P) {\n                        return false;\n                    }\n\n                    // Regardless of enterMode, a child which is not <figure> must be\n                    // either <img/> or <a><img/></a>.\n                    if (!isLinkedOrStandaloneImage(child)) {\n                        return false;\n                    }\n                }\n            }\n\n            // Centering wrapper got to be... centering. If image2_alignClasses are defined,\n            // check for centering class. Otherwise, check the style.\n            if (alignClasses ? el.hasClass(alignClasses[1]) :\n                CKEDITOR.tools.parseCssText(el.attributes.style || '', true)['text-align'] == 'center') {\n                return true;\n            }\n\n            return false;\n        };\n    }\n\n    // Checks whether element is <img/> or <a><img/></a>.\n    //\n    // @param {CKEDITOR.htmlParser.element}\n    function isLinkedOrStandaloneImage(el) {\n        if (el.name == 'img') {\n            return true;\n        } else if (el.name == 'a') {\n            return el.children.length == 1 && el.getFirst('img');\n        }\n\n        return false;\n    }\n\n    // Sets width and height of the widget image according to current widget data.\n    //\n    // @param {CKEDITOR.plugins.widget} widget\n    function setDimensions(widget) {\n        var data = widget.data;\n\n        var dimensions = {\n            height: data.height,\n            width: data.width\n        };\n\n        var image = widget.parts.image;\n\n        for (var d in dimensions) {\n            if (dimensions[d]) {\n                image.setAttribute(d, dimensions[d]);\n            } else {\n                image.removeAttribute(d);\n            }\n        }\n    }\n\n    // Defines all features related to drag-driven image resizing.\n    //\n    // @param {CKEDITOR.plugins.widget} widget\n    function setupResizer(widget) {\n        var editor = widget.editor;\n\n        var editable = editor.editable();\n\n        var doc = editor.document;\n\n        // Store the resizer in a widget for testing (#11004).\n        var resizer = widget.resizer = doc.createElement('span');\n\n        resizer.addClass('cke_image_resizer');\n        resizer.addClass('cke_image_resizer_' + cursor[editor.config.imageScaleResize]);\n        resizer.append(new CKEDITOR.dom.text('\\u200b', doc));\n\n        // Inline widgets don't need a resizer wrapper as an image spans the entire widget.\n        if (!widget.inline) {\n            var imageOrLink = widget.parts.link || widget.parts.image;\n\n            var oldResizeWrapper = imageOrLink.getParent();\n\n            var resizeWrapper = doc.createElement('span');\n\n            resizeWrapper.addClass('cke_image_resizer_wrapper');\n            resizeWrapper.append(imageOrLink);\n            resizeWrapper.append(resizer);\n            widget.element.append(resizeWrapper, true);\n\n            // Remove the old wrapper which could came from e.g. pasted HTML\n            // and which could be corrupted (e.g. resizer span has been lost).\n            if (oldResizeWrapper.is('span')) {\n                oldResizeWrapper.remove();\n            }\n        } else {\n            widget.wrapper.append(resizer);\n        }\n\n        // Calculate values of size variables and mouse offsets.\n        resizer.on('mousedown', function (evt) {\n            var image = widget.parts.image;\n\n            // \"factor\" can be either 1 or -1. I.e.: For right-aligned images, we need to\n            // subtract the difference to get proper width, etc. Without \"factor\",\n            // resizer starts working the opposite way.\n            var factor = widget.data.align == 'right' ? -1 : 1;\n\n            // The x-coordinate of the mouse relative to the screen\n            // when button gets pressed.\n            var startX = evt.data.$.screenX;\n\n            var startY = evt.data.$.screenY;\n\n            // The initial dimensions and aspect ratio of the image.\n            var startWidth = image.$.clientWidth;\n\n            var startHeight = image.$.clientHeight;\n\n            var listeners = [];\n\n            // A class applied to editable during resizing.\n            var cursorClass = 'cke_image_s' + (!~factor ? 'w' : 'e');\n\n            var nativeEvt, newWidth, newHeight, updateData;\n\n            var moveDiffX, moveDiffY, moveRatio;\n\n            // Save the undo snapshot first: before resizing.\n            editor.fire('saveSnapshot');\n\n            // Mousemove listeners are removed on mouseup.\n            attachToDocuments('mousemove', onMouseMove, listeners);\n\n            // Clean up the mousemove listener. Update widget data if valid.\n            attachToDocuments('mouseup', onMouseUp, listeners);\n\n            // The entire editable will have the special cursor while resizing goes on.\n            editable.addClass(cursorClass);\n\n            // This is to always keep the resizer element visible while resizing.\n            resizer.addClass('cke_image_resizing');\n\n            // Attaches an event to a global document if inline editor.\n            // Additionally, if classic (`iframe`-based) editor, also attaches the same event to `iframe`'s document.\n            function attachToDocuments(name, callback, collection) {\n                var globalDoc = CKEDITOR.document;\n\n                var listeners = [];\n\n                if (!doc.equals(globalDoc)) {\n                    listeners.push(globalDoc.on(name, callback));\n                }\n\n                listeners.push(doc.on(name, callback));\n\n                if (collection) {\n                    for (var i = listeners.length; i--;) {\n                        collection.push(listeners.pop());\n                    }\n                }\n            }\n\n            // This is how variables refer to the geometry.\n            // Note: x corresponds to moveOffset, this is the position of mouse\n            // Note: o corresponds to [startX, startY].\n            //\n            // \t+--------------+--------------+\n            // \t|              |              |\n            // \t|      I       |      II      |\n            // \t|              |              |\n            // \t+------------- o -------------+ _ _ _\n            // \t|              |              |      ^\n\n            // \t|      VI      |     III      |      | moveDiffY\n            // \t|              |         x _ _ _ _ _ v\n            // \t+--------------+---------|----+\n            // \t               |         |\n            // \t                <------->\n            // \t                moveDiffX\n            function onMouseMove(evt) {\n                var imageScaleResize = editor.config.imageScaleResize;\n\n                nativeEvt = evt.data.$;\n\n                // This is how far the mouse is from the point the button was pressed.\n                moveDiffX = nativeEvt.screenX - startX;\n                moveDiffY = startY - nativeEvt.screenY;\n\n                // This is the aspect ratio of the move difference.\n                moveRatio = Math.abs(moveDiffX / moveDiffY);\n\n                if (imageScaleResize === 'width' || imageScaleResize === 'both' || imageScaleResize === 'scale') {\n                    newWidth = startWidth + factor * moveDiffX;\n                }\n\n                if (imageScaleResize === 'height' || imageScaleResize === 'both') {\n                    newHeight = startHeight - moveDiffY;\n                }\n\n                if (imageScaleResize === 'scale') {\n                    newHeight = 'auto';\n                }\n\n                newWidth = newWidth || startWidth;\n                newHeight = newHeight || startHeight;\n\n                // Don't update attributes if less than 10.\n                // This is to prevent images to visually disappear.\n                if (newWidth >= 15 && (newHeight >= 15 || newHeight === 'auto')) {\n                    image.setAttributes({\n                        width: newWidth,\n                        height: newHeight\n                    });\n                    updateData = true;\n                } else {\n                    updateData = false;\n                }\n            }\n\n            function onMouseUp() {\n                var l;\n\n                while ((l = listeners.pop())) {\n                    l.removeListener();\n                }\n\n                // Restore default cursor by removing special class.\n                editable.removeClass(cursorClass);\n\n                // This is to bring back the regular behaviour of the resizer.\n                resizer.removeClass('cke_image_resizing');\n\n                if (updateData) {\n                    widget.setData({\n                        height: newHeight,\n                        width: newWidth\n                    });\n\n                    // Save another undo snapshot: after resizing.\n                    editor.fire('saveSnapshot');\n                }\n\n                // Don't update data twice or more.\n                updateData = false;\n            }\n        });\n\n        // Change the position of the widget resizer when data changes.\n        widget.on('data', function () {\n            resizer[widget.data.align == 'right' ? 'addClass' : 'removeClass']('cke_image_resizer_left');\n        });\n\n        widget.parts.image.on('click', function () {\n\n            editor._.editable.editor.getSelection().selectElement(this);\n\n            var selectionData = editor._.editable.editor.getSelectionData();\n            if (selectionData) {\n                editor.fire('editorInteraction', {\n                    nativeEvent: event,\n                    selectionData: selectionData\n                });\n            }\n        });\n\n    }\n\n    // Returns a set of widget allowedContent rules, depending\n    // on configurations like config#image2_alignClasses or\n    // config#image2_captionedClass.\n    //\n    // @param {CKEDITOR.editor}\n    // @returns {Object}\n    function getWidgetAllowedContent(editor) {\n        var rules = {\n            figcaption: true,\n            figure: {\n                classes: '!' + editor.config.image2_captionedClass\n            },\n            img: {\n                attributes: '!src,alt,width,height'\n            }\n        };\n\n        return rules;\n    }\n\n    // Returns a set of widget feature rules, depending\n    // on editor configuration. Note that the following may not cover\n    // all the possible cases since requiredContent supports a single\n    // tag only.\n    //\n    // @param {CKEDITOR.editor}\n    // @returns {Object}\n    function getWidgetFeatures(editor) {\n        var alignClasses = editor.config.image2_alignClasses;\n\n        var features = {\n            align: {\n                requiredContent: 'img' +\n                    (alignClasses ? '(' + alignClasses[0] + ')' : '{float}')\n            },\n            caption: {\n                requiredContent: 'figcaption'\n            },\n            dimension: {\n                requiredContent: 'img[width,height]'\n            }\n        };\n\n        return features;\n    }\n\n    // Returns element which is styled, considering current\n    // state of the widget.\n    //\n    // @see CKEDITOR.plugins.widget#applyStyle\n    // @param {CKEDITOR.plugins.widget} widget\n    // @returns {CKEDITOR.dom.element}\n    function getStyleableElement(widget) {\n        return widget.data.hasCaption ? widget.element : widget.parts.image;\n    }\n})();\n\nCKEDITOR.config.image2_captionedClass = 'image';","/**\n * CKEditor plugin: Dragable image resizing\n * https://github.com/sstur/ck-dragresize\n * - Shows semi-transparent overlay while resizing\n * - Enforces Aspect Ratio (unless holding shift)\n * - Snap to size of other images in editor\n * - Escape while dragging cancels resize\n */\n(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_dragresize')) {\n        return;\n    }\n\n    var IMAGE_HANDLES = {\n        both: ['tl', 'tm', 'tr', 'lm', 'rm', 'bl', 'bm', 'br'],\n        height: ['tl', 'tm', 'tr', 'bl', 'bm', 'br'],\n        scale: ['tl', 'tr', 'bl', 'br'],\n        width: ['tl', 'tr', 'lm', 'rm', 'bl', 'br'],\n    };\n\n    var POSITION_ELEMENT_FN = {\n        bl: function(handle, left, top, box) {\n            positionElement(handle, -3 + left, box.height - 4 + top);\n        },\n        bm: function(handle, left, top, box) {\n            positionElement(handle, Math.round(box.width / 2) - 3 + left, box.height - 4 + top);\n        },\n        br: function(handle, left, top, box) {\n            positionElement(handle, box.width - 4 + left, box.height - 4 + top);\n        },\n        lm: function(handle, left, top, box) {\n            positionElement(handle, -3 + left, Math.round(box.height / 2) - 3 + top);\n        },\n        tl: function(handle, left, top, box) {\n            positionElement(handle, left - 3, top - 3);\n        },\n        tm: function(handle, left, top, box) {\n            positionElement(handle, Math.round(box.width / 2) - 3 + left, -3 + top);\n        },\n        tr: function(handle, left, top, box) {\n            positionElement(handle, box.width - 4 + left, -3 + top);\n        },\n        rm: function(handle, left, top, box) {\n            positionElement(handle, box.width - 4 + left, Math.round(box.height / 2) - 3 + top);\n        }\n    };\n\n    var IMAGE_SNAP_TO_SIZE = 7;\n\n    var isFirefox = ('MozAppearance' in document.documentElement.style);\n\n    var isWebKit = ('WebkitAppearance' in document.documentElement.style);\n\n    var enablePlugin = isWebKit || isFirefox;\n\n    if (enablePlugin) {\n        // CSS is added in a compressed form\n        CKEDITOR.addCss('img::selection{color:rgba(0,0,0,0)}img.ckimgrsz{outline:1px dashed #000}#ckimgrsz{position:absolute;width:0;height:0;cursor:default;z-index:10001}#ckimgrsz span{display:none;position:absolute;top:0;left:0;width:0;height:0;background-size:100% 100%;opacity:.65;outline:1px dashed #000}#ckimgrsz i{position:absolute;display:block;width:5px;height:5px;background:#fff;border:1px solid #000}#ckimgrsz i.active,#ckimgrsz i:hover{background:#000}#ckimgrsz i.br,#ckimgrsz i.tl{cursor:nwse-resize}#ckimgrsz i.bm,#ckimgrsz i.tm{cursor:ns-resize}#ckimgrsz i.bl,#ckimgrsz i.tr{cursor:nesw-resize}#ckimgrsz i.lm,#ckimgrsz i.rm{cursor:ew-resize}body.dragging-br,body.dragging-br *,body.dragging-tl,body.dragging-tl *{cursor:nwse-resize!important}body.dragging-bm,body.dragging-bm *,body.dragging-tm,body.dragging-tm *{cursor:ns-resize!important}body.dragging-bl,body.dragging-bl *,body.dragging-tr,body.dragging-tr *{cursor:nesw-resize!important}body.dragging-lm,body.dragging-lm *,body.dragging-rm,body.dragging-rm *{cursor:ew-resize!important}');\n    }\n\n    /**\n     * Initializes the plugin\n     */\n    CKEDITOR.plugins.add('ae_dragresize', {\n        onLoad: function() {\n            if (!enablePlugin) {\n                return;\n            }\n        },\n        init: function(editor) {\n            if (!enablePlugin) {\n                return;\n            }\n\n            editor.once('contentDom', function(evt) {\n                init(editor);\n            });\n        }\n    });\n\n    function init(editor) {\n        var window = editor.window.$,\n            document = editor.document.$;\n\n        if (isFirefox) {\n            // Disable the native image resizing\n            document.execCommand('enableObjectResizing', false, false);\n        }\n\n        var snapToSize = (typeof IMAGE_SNAP_TO_SIZE === 'undefined') ? null : IMAGE_SNAP_TO_SIZE;\n\n        editor.config.imageScaleResize = editor.config.imageScaleResize || 'both';\n\n        var resizer = new Resizer(editor, {\n            imageScaleResize: editor.config.imageScaleResize,\n            snapToSize: snapToSize\n        });\n\n        var mouseDownListener = function(e) {\n            if (resizer.isHandle(e.target)) {\n                resizer.initDrag(e);\n            }\n        };\n\n        document.addEventListener('mousedown', mouseDownListener, false);\n\n        function selectionChange() {\n            var selection = editor.getSelection();\n\n            if (!selection) return;\n            // If an element is selected and that element is an IMG\n            if (selection.getType() !== CKEDITOR.SELECTION_NONE && selection.getStartElement().is('img')) {\n                // And we're not right or middle clicking on the image\n                if (!window.event || !window.event.button || window.event.button === 0) {\n                    resizer.show(selection.getStartElement().$);\n                }\n            } else {\n                resizer.hide();\n            }\n        }\n\n        editor.on('selectionChange', selectionChange);\n\n        editor.on('getData', function(e) {\n            var html = e.data.dataValue || '';\n            html = html.replace(/<div id=\"ckimgrsz\"([\\s\\S]*?)<\\/div>/i, '');\n            html = html.replace(/\\b(ckimgrsz)\\b/g, '');\n            e.data.dataValue = html;\n        });\n\n        editor.on('beforeUndoImage', function() {\n            // Remove the handles before undo images are saved\n            resizer.hide();\n        });\n\n        editor.on('afterUndoImage', function() {\n            // Restore the handles after undo images are saved\n            selectionChange();\n        });\n\n        editor.on('blur', function() {\n            // Remove the handles when editor loses focus\n            resizer.hide();\n        });\n\n        editor.on('beforeModeUnload', function self() {\n            editor.removeListener('beforeModeUnload', self);\n            resizer.hide();\n        });\n\n        editor.on('destroy', function() {\n            var resizeElement = document.getElementById('ckimgrsz');\n\n            if (resizeElement) {\n                resizeElement.remove();\n            }\n\n            if (isFirefox) {\n                document.execCommand('enableObjectResizing', false, true);\n            }\n\n            document.removeEventListener('mousedown', mouseDownListener);\n        });\n\n        // Update the selection when the browser window is resized\n        var resizeTimeout;\n        editor.window.on('resize', function() {\n            // Cancel any resize waiting to happen\n            clearTimeout(resizeTimeout);\n            // Delay resize to \"debounce\"\n            resizeTimeout = setTimeout(selectionChange, 50);\n        });\n    }\n\n    function Resizer(editor, cfg) {\n        this.editor = editor;\n        this.window = editor.window.$;\n        this.document = editor.document.$;\n        this.cfg = cfg || {};\n        this.init();\n    }\n\n    Resizer.prototype = {\n        init: function() {\n            var instance = this;\n\n            var container = this.container = this.document.createElement('div');\n\n            container.id = 'ckimgrsz';\n            this.preview = this.document.createElement('span');\n            container.appendChild(this.preview);\n\n            var handles = this.handles = {};\n\n            IMAGE_HANDLES[this.cfg.imageScaleResize].forEach(function (handleName, index) {\n                handles[handleName] = instance.handles[handleName] = instance.createHandle(handleName);\n            });\n\n            for (var n in handles) {\n                container.appendChild(handles[n]);\n            }\n        },\n        createHandle: function(name) {\n            var el = this.document.createElement('i');\n            el.classList.add(name);\n            return el;\n        },\n        isHandle: function(el) {\n            var handles = this.handles;\n            for (var n in handles) {\n                if (handles[n] === el) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        show: function(el) {\n            this.el = el;\n            if (this.cfg.snapToSize) {\n                this.otherImages = toArray(this.document.getElementsByTagName('img'));\n                this.otherImages.splice(this.otherImages.indexOf(el), 1);\n            }\n            var box = this.box = getBoundingBox(this.window, el);\n            positionElement(this.container, box.left, box.top);\n            this.document.body.appendChild(this.container);\n            this.el.classList.add('ckimgrsz');\n            this.showHandles();\n        },\n        hide: function() {\n            // Remove class from all img.ckimgrsz\n            var elements = this.document.getElementsByClassName('ckimgrsz');\n            for (var i = 0; i < elements.length; ++i) {\n                elements[i].classList.remove('ckimgrsz');\n            }\n            this.hideHandles();\n            if (this.container.parentNode) {\n                this.container.parentNode.removeChild(this.container);\n            }\n        },\n        initDrag: function(e) {\n            if (e.button !== 0) {\n                //right-click or middle-click\n                return;\n            }\n            var resizer = this;\n            var drag = new DragEvent(this.window, this.document);\n            drag.onStart = function() {\n                resizer.showPreview();\n                resizer.isDragging = true;\n                resizer.editor.getSelection().lock();\n            };\n            drag.onDrag = function() {\n                resizer.calculateSize(this);\n                resizer.updatePreview();\n                var box = resizer.previewBox;\n                resizer.updateHandles(box, box.left, box.top);\n            };\n            drag.onRelease = function() {\n                resizer.isDragging = false;\n                resizer.hidePreview();\n                resizer.hide();\n                resizer.editor.getSelection().unlock();\n                // Save an undo snapshot before the image is permanently changed\n                resizer.editor.fire('saveSnapshot');\n            };\n            drag.onComplete = function() {\n                resizer.resizeComplete();\n                // Save another snapshot after the image is changed\n                resizer.editor.fire('saveSnapshot');\n            };\n            drag.start(e);\n        },\n        updateHandles: function(box, left, top) {\n            left = left || 0;\n            top = top || 0;\n            var handles = this.handles;\n\n            for (var handle in handles) {\n                POSITION_ELEMENT_FN[handle](handles[handle], left, top, box);\n            }\n        },\n        showHandles: function() {\n            var handles = this.handles;\n            this.updateHandles(this.box);\n            for (var n in handles) {\n                handles[n].style.display = 'block';\n            }\n        },\n        hideHandles: function() {\n            var handles = this.handles;\n            for (var n in handles) {\n                handles[n].style.display = 'none';\n            }\n        },\n        showPreview: function() {\n            this.preview.style.backgroundImage = 'url(\"' + this.el.src + '\")';\n            this.calculateSize();\n            this.updatePreview();\n            this.preview.style.display = 'block';\n        },\n        updatePreview: function() {\n            var box = this.previewBox;\n            positionElement(this.preview, box.left, box.top);\n            this.preview.style.width = this.previewBox.width + 'px';\n            this.preview.style.height = this.previewBox.height + 'px';\n        },\n        hidePreview: function() {\n            var box = getBoundingBox(this.window, this.preview);\n            this.result = {\n                width: box.width,\n                height: box.height\n            };\n            this.preview.style.display = 'none';\n        },\n        calculateSize: function(data) {\n            var box = this.previewBox = {\n                top: 0,\n                left: 0,\n                width: this.box.width,\n                height: this.box.height\n            };\n\n            if (!data) return;\n\n            var attr = data.target.className;\n\n            if (~attr.indexOf('r')) {\n                box.width = Math.max(32, this.box.width + data.delta.x);\n            }\n            if (~attr.indexOf('b')) {\n                box.height = Math.max(32, this.box.height + data.delta.y);\n            }\n            if (~attr.indexOf('l')) {\n                box.width = Math.max(32, this.box.width - data.delta.x);\n            }\n            if (~attr.indexOf('t')) {\n                box.height = Math.max(32, this.box.height - data.delta.y);\n            }\n            //if dragging corner, enforce aspect ratio (unless shift key is being held)\n            if (attr.indexOf('m') < 0 && !data.keys.shift) {\n                var ratio = this.box.width / this.box.height;\n                if (box.width / box.height > ratio) {\n                    box.height = Math.round(box.width / ratio);\n                } else {\n                    box.width = Math.round(box.height * ratio);\n                }\n            }\n\n            var snapToSize = this.cfg.snapToSize;\n\n            if (snapToSize) {\n                var others = this.otherImages;\n                for (var i = 0; i < others.length; i++) {\n                    var other = getBoundingBox(this.window, others[i]);\n                    if (Math.abs(box.width - other.width) <= snapToSize && Math.abs(box.height - other.height) <= snapToSize) {\n                        box.width = other.width;\n                        box.height = other.height;\n                        break;\n                    }\n                }\n            }\n\n            //recalculate left or top position\n            if (~attr.indexOf('l')) {\n                box.left = this.box.width - box.width;\n            }\n            if (~attr.indexOf('t')) {\n                box.top = this.box.height - box.height;\n            }\n        },\n        resizeComplete: function() {\n            resizeElement.call(this, this.el, this.result.width, this.result.height);\n        }\n    };\n\n    function DragEvent(window, document) {\n        this.window = window;\n        this.document = document;\n        this.events = {\n            mousemove: bind(this.mousemove, this),\n            keydown: bind(this.keydown, this),\n            mouseup: bind(this.mouseup, this)\n        };\n    }\n\n    DragEvent.prototype = {\n        start: function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.target = e.target;\n            this.attr = e.target.className;\n            this.startPos = {\n                x: e.clientX,\n                y: e.clientY\n            };\n            this.update(e);\n            var events = this.events;\n            this.document.addEventListener('mousemove', events.mousemove, false);\n            this.document.addEventListener('keydown', events.keydown, false);\n            this.document.addEventListener('mouseup', events.mouseup, false);\n            this.document.body.classList.add('dragging-' + this.attr);\n            this.onStart && this.onStart();\n        },\n        update: function(e) {\n            this.currentPos = {\n                x: e.clientX,\n                y: e.clientY\n            };\n            this.delta = {\n                x: e.clientX - this.startPos.x,\n                y: e.clientY - this.startPos.y\n            };\n            this.keys = {\n                shift: e.shiftKey,\n                ctrl: e.ctrlKey,\n                alt: e.altKey\n            };\n        },\n        mousemove: function(e) {\n            this.update(e);\n            this.onDrag && this.onDrag();\n            if (e.which === 0) {\n                //mouse button released outside window; mouseup wasn't fired (Chrome)\n                this.mouseup(e);\n            }\n        },\n        keydown: function(e) {\n            //escape key cancels dragging\n            if (e.keyCode === 27) {\n                this.release();\n            }\n        },\n        mouseup: function(e) {\n            this.update(e);\n            this.release();\n            this.onComplete && this.onComplete();\n        },\n        release: function() {\n            this.document.body.classList.remove('dragging-' + this.attr);\n            var events = this.events;\n            this.document.removeEventListener('mousemove', events.mousemove, false);\n            this.document.removeEventListener('keydown', events.keydown, false);\n            this.document.removeEventListener('mouseup', events.mouseup, false);\n            this.onRelease && this.onRelease();\n        }\n    };\n\n    //helper functions\n    function toArray(obj) {\n        var len = obj.length,\n            arr = new Array(len);\n        for (var i = 0; i < len; i++) {\n            arr[i] = obj[i];\n        }\n        return arr;\n    }\n\n    function bind(fn, ctx) {\n        if (fn.bind) {\n            return fn.bind(ctx);\n        }\n        return function() {\n            fn.apply(ctx, arguments);\n        };\n    }\n\n    function positionElement(el, left, top) {\n        el.style.left = String(left) + 'px';\n        el.style.top = String(top) + 'px';\n    }\n\n    function resizeElement(el, width, height) {\n        var imageScaleResize = this.editor.config.imageScaleResize;\n        if (imageScaleResize === 'both') {\n            el.style.width = String(width) + 'px';\n            el.style.height = String(height) + 'px';\n        }\n        else if (imageScaleResize === 'width' || imageScaleResize === 'scale') {\n            el.style.height = 'auto';\n            el.style.width = String(width) + 'px';\n        }\n        else if (imageScaleResize === 'height') {\n            el.style.height = String(height) + 'px';\n            el.style.width = 'auto';\n        }\n    }\n\n    function getBoundingBox(window, el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            left: rect.left + window.pageXOffset,\n            top: rect.top + window.pageYOffset,\n            width: rect.width,\n            height: rect.height\n        };\n    }\n}());\n","(function() {\n\t'use strict';\n\n    if (CKEDITOR.plugins.get('ae_autolist')) {\n        return;\n    }\n\n    var KEY_BACK = 8;\n\n    var KEY_SPACE = 32;\n\n    var DEFAULT_CONFIG = [\n        {\n            regex: /^\\*$/,\n            type: 'bulletedlist'\n        },\n        {\n            regex: /^1\\.$/,\n            type: 'numberedlist'\n        }\n    ];\n\n\t/**\n     * CKEditor plugin which automatically generates ordered/unordered list when user types text which looks like a list.\n     *\n     * @class CKEDITOR.plugins.ae_autolist\n     * @constructor\n     */\n    CKEDITOR.plugins.add(\n        'ae_autolist', {\n\n            /**\n             * Initialization of the plugin, part of CKeditor plugin lifecycle.\n             * The function registers the `keydown` event on the content editing area.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolist\n             * @method init\n             * @param {Object} editor The current editor instance\n             */\n            init: function(editor) {\n                editor.once('contentDom', function() {\n                    var editable = editor.editable();\n\n                    editable.attachListener(editable, 'keydown', this._onKeyDown, this, {\n                        editor: editor\n                    });\n\n                }.bind(this));\n            },\n\n            /**\n             * Checks for pressing the `Backspace` key in order to undo the list creation.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolist\n             * @method _checkForBackspaceAndUndo\n             * @param {Event} event Event object\n             * @protected\n             */\n            _checkForBackspaceAndUndo: function(event) {\n                var editor = event.listenerData.editor;\n\n                var nativeEvent = event.data.$;\n\n                var editable = editor.editable();\n\n                editable.removeListener('keydown', this._checkForBackspaceAndUndo);\n\n                if (nativeEvent.keyCode === KEY_BACK) {\n                    editor.execCommand('undo');\n                    editor.insertHtml(event.listenerData.bullet + '&nbsp;');\n                    event.data.preventDefault();\n                }\n            },\n\n            /**\n             * Checks current line to find match with MATCHES object to create OL or UL.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolist\n             * @method _checkLine\n             * @param {editor} Editor object\n             * @protected\n             * @return {Object|null} Returns an object which contains the detected list config if any\n             */\n            _getListConfig: function(editor) {\n                var configRegex = editor.config.autolist || DEFAULT_CONFIG;\n\n                var range = editor.getSelection().getRanges()[0];\n\n                var textContainer = range.endContainer.getText();\n\n                var bullet = textContainer.substring(0, range.startOffset);\n\n                var text = textContainer.substring(range.startOffset, textContainer.length);\n\n                var index = 0;\n\n                var regexLen = configRegex.length;\n\n                var autolistCfg = null;\n\n                while (!autolistCfg && regexLen > index) {\n                    var regexItem = configRegex[index];\n\n                    if (regexItem.regex.test(bullet)) {\n                        autolistCfg = {\n                            bullet: bullet,\n                            editor: editor,\n                            text: text,\n                            type: regexItem.type\n                        };\n\n                        break;\n                    }\n\n                    index++;\n                }\n\n                return autolistCfg;\n            },\n\n\t\t\t/**\n             * Create list with different types: Bulleted or Numbered list\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolist\n             * @method _createList\n             * @param {Object} listConfig Object that contains bullet, text and type for creating the list\n             * @protected\n\t\t\t */\n            _createList: function(listConfig) {\n                var editor = listConfig.editor;\n\n                var range = editor.getSelection().getRanges()[0];\n\n                range.endContainer.setText(listConfig.text);\n                editor.execCommand(listConfig.type);\n\n                var editable = editor.editable();\n\n                // Subscribe to keydown in order to check if the next key press is `Backspace`.\n                // If so, the creation of the list will be discarded.\n                editable.attachListener(editable, 'keydown', this._checkForBackspaceAndUndo, this, {\n                    editor: editor,\n                    bullet: listConfig.bullet\n                }, 1);\n            },\n\n\t\t\t/**\n             * Listens to the `Space` key events to check if the last word\n             * introduced by the user should be replaced by a list (OL or UL)\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolist\n             * @method _onKeyDown\n             * @param {Event} event Event object\n             * @protected\n             */\n            _onKeyDown: function(event) {\n                var nativeEvent = event.data.$;\n\n                if (nativeEvent.keyCode === KEY_SPACE) {\n                    var listConfig = this._getListConfig(event.listenerData.editor);\n\n                    if (listConfig) {\n                        event.data.preventDefault();\n                        this._createList(listConfig);\n                    }\n                }\n            }\n        }\n\t);\n}());","(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_autolink')) {\n        return;\n    }\n\n    // Disables the auto URL detection feature in IE, their lacks functionality:\n    // They convert the links only on space. We do on space, comma, semicolon and Enter.\n    if (/MSIE ([^;]*)|Trident.*; rv:([0-9.]+)/.test(navigator.userAgent)) {\n        document.execCommand('AutoUrlDetect', false, false);\n    }\n\n    var KEY_BACK = 8;\n\n    var KEY_COMMA = 188;\n\n    var KEY_ENTER = 13;\n\n    var KEY_SEMICOLON = 186;\n\n    var KEY_SPACE = 32;\n\n    var DELIMITERS = [KEY_COMMA, KEY_ENTER, KEY_SEMICOLON, KEY_SPACE];\n\n    var REGEX_LAST_WORD = /[^\\s]+/mg;\n\n    var REGEX_URL = /(https?\\:\\/\\/|www\\.)(-\\.)?([^(\\s/?\\.#-)]+\\.?)+(\\b\\/[^\\s]*)?$/i;\n\n    /**\n     * CKEditor plugin which automatically generates links when user types text which looks like URL.\n     *\n     * @class CKEDITOR.plugins.ae_autolink\n     * @constructor\n     */\n    CKEDITOR.plugins.add(\n        'ae_autolink', {\n\n            /**\n             * Initialization of the plugin, part of CKEditor plugin lifecycle.\n             * The function registers the `keyup` event on the editing area.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method init\n             * @param {Object} editor The current editor instance\n             */\n            init: function(editor) {\n                editor.once('contentDom', function() {\n                    var editable = editor.editable();\n\n                    editable.attachListener(editable, 'keyup', this._onKeyUp, this, {\n                        editor: editor\n                    });\n                }.bind(this));\n            },\n\n            /**\n             * Retrieves the last word introduced by the user. Reads from the current\n             * caret position backwards until it finds the first white space.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method _getLastWord\n             * @protected\n             * @return {String} The last word introduced by user\n             */\n            _getLastWord: function(editor) {\n                var range = editor.getSelection().getRanges()[0];\n\n                var offset = range.startOffset;\n\n                var previousText = '';\n\n                // The user pressed Enter, so we have to look on the previous node\n                if (this._currentKeyCode === KEY_ENTER) {\n                    var previousNode = range.startContainer.getPrevious();\n\n                    var lastChild;\n\n                    if (previousNode) {\n                        // If previous node is a SPACE, (it does not have 'getLast' method),\n                        // ignore it and find the previous text node\n                        while (!previousNode.getLast) {\n                            previousNode = previousNode.getPrevious();\n                        }\n\n                        lastChild = previousNode.getLast();\n\n                        // Depending on the browser, the last child node may be a <BR>\n                        // (which does not have 'getText' method),\n                        // so ignore it and find the previous text node\n                        while (lastChild && !lastChild.getText()) {\n                            lastChild = lastChild.getPrevious();\n                        }\n                    }\n\n                    // Check if the lastChild is already a link\n                    if (!(lastChild && lastChild.$.href)) {\n                        this._startContainer = lastChild;\n                        previousText = lastChild ? lastChild.getText() : '';\n                        this._offset = previousText.length;\n                    }\n                } else {\n                    this._startContainer = range.startContainer;\n\n                    // Last character is the delimiter, ignore it\n                    previousText = this._startContainer.getText().substring(0, offset - 1);\n\n                    this._offset = offset - 1;\n                }\n\n                var lastWord = '';\n\n                var match = previousText.match(REGEX_LAST_WORD);\n\n                if (match) {\n                    lastWord = match.pop();\n                }\n\n                return lastWord;\n            },\n\n            /**\n             * Checks if the given link is a valid URL.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method isValidURL\n             * @param {String} link The link we want to know if it is a valid URL\n             * @protected\n             * @return {Boolean} Returns true if the link is a valid URL, false otherwise\n             */\n            _isValidURL: function(link) {\n                return REGEX_URL.test(link);\n            },\n\n            /**\n             * Listens to the `keydown` event and if the keycode is `Backspace`, removes the previously\n             * created link.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method _onKeyDown\n             * @param {EventFacade} event EventFacade object\n             * @protected\n             */\n            _onKeyDown: function(event) {\n                var nativeEvent = event.data.$;\n\n                var editor = event.listenerData.editor;\n\n                var editable = editor.editable();\n\n                editable.removeListener('keydown', this._onKeyDown);\n\n                if (nativeEvent.keyCode === KEY_BACK) {\n                    event.cancel();\n                    event.data.preventDefault();\n\n                    this._removeLink(editor);\n                }\n\n                this._ckLink = null;\n            },\n\n            /**\n             * Listens to the `Enter` and `Space` key events in order to check if the last word\n             * introduced by the user should be replaced by a link element.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method _onKeyUp\n             * @param {EventFacade} event EventFacade object\n             * @protected\n             */\n            _onKeyUp: function(event) {\n                var nativeEvent = event.data.$;\n\n                this._currentKeyCode = nativeEvent.keyCode;\n\n                if (DELIMITERS.indexOf(this._currentKeyCode) !== -1) {\n                    var editor = event.listenerData.editor;\n\n                    var lastWord = this._getLastWord(editor);\n\n                    if (this._isValidURL(lastWord)) {\n                        this._replaceContentByLink(editor, lastWord);\n                    }\n                }\n            },\n\n            /**\n             * Replaces content by a link element.\n             *\n             * @fires CKEDITOR.plugins.ae_autolink#autolinkAdd\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method _replaceContentByLink\n             * @param {String} content The text that has to be replaced by an link element\n             * @protected\n             */\n            _replaceContentByLink: function(editor, content) {\n                var range = editor.createRange();\n                var node = CKEDITOR.dom.element.get(this._startContainer);\n                var offset = this._offset;\n\n                // Select the content, so CKEDITOR.Link can properly replace it\n                range.setStart(node, offset - content.length);\n                range.setEnd(node, offset);\n                range.select();\n\n                var ckLink = new CKEDITOR.Link(editor);\n                ckLink.create(content);\n                this._ckLink = ckLink;\n\n                var linkNode = ckLink.getFromSelection();\n                editor.fire('autolinkAdd', linkNode);\n\n                this._subscribeToKeyEvent(editor);\n\n                // Now range is on the link and it is selected. We have to\n                // return focus to the caret position.\n                range = editor.getSelection().getRanges()[0];\n\n                // If user pressed `Enter`, get the next editable node at position 0,\n                // otherwise set the cursor at the next character of the link (the white space)\n                if (this._currentKeyCode === KEY_ENTER) {\n                    var nextEditableNode = range.getNextEditableNode();\n\n                    range.setStart(nextEditableNode, 0);\n                    range.setEnd(nextEditableNode, 0);\n                } else {\n                    var nextNode = range.getNextNode();\n\n                    range.setStart(nextNode, 1);\n                    range.setEnd(nextNode, 1);\n                }\n\n                range.select();\n            },\n\n            /**\n             * Fired when a URL is detected in text and converted to a link.\n             *\n             * @event CKEDITOR.plugins.ae_autolink#autolinkAdd\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @param {CKEDITOR.dom.element} el Node of the created link.\n             */\n\n            /**\n             * Removes the created link element, and replaces it by its text.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method _removeLink\n             * @protected\n             */\n            _removeLink: function(editor) {\n                var range = editor.getSelection().getRanges()[0];\n                var caretOffset = range.startOffset;\n\n                // Select the link, so CKEDITOR.Link can properly remove it\n                var linkNode = this._startContainer.getNext() || this._startContainer;\n\n                var newRange = editor.createRange();\n                newRange.setStart(linkNode, 0);\n                newRange.setEndAfter(linkNode);\n                newRange.select();\n\n                this._ckLink.remove();\n\n                // Return focus to the caret position\n                range.setEnd(range.startContainer, caretOffset);\n                range.setStart(range.startContainer, caretOffset);\n\n                range.select();\n            },\n\n            /**\n             * Subscribe to a key event of the editable aria.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_autolink\n             * @method _subscribeToKeyEvent\n             * @protected\n             */\n            _subscribeToKeyEvent: function(editor) {\n                var editable = editor.editable();\n\n                // Change the priority of keydown listener - 1 means the highest priority.\n                // In Chrome on pressing `Enter` the listener is not being invoked.\n                // See http://dev.ckeditor.com/ticket/11861 for more information.\n                editable.attachListener(editable, 'keydown', this._onKeyDown, this, {\n                    editor: editor\n                }, 1);\n            }\n        }\n    );\n}());\n","(function() {\n    'use strict';\n\n    var isIE = CKEDITOR.env.ie;\n\n    if (CKEDITOR.plugins.get('ae_addimages')) {\n        return;\n    }\n\n    /**\n     * CKEditor plugin which allows Drag&Drop of images directly into the editable area. The image will be encoded\n     * as Data URI. An event `beforeImageAdd` will be fired with the list of dropped images. If any of the listeners\n     * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n     * an event `imageAdd` will be fired with the inserted element into the editable area.\n     *\n     * @class CKEDITOR.plugins.ae_addimages\n     */\n\n    /**\n     * Fired before adding images to the editor.\n     *\n     * @event CKEDITOR.plugins.ae_addimages#beforeImageAdd\n     * @instance\n     * @memberof CKEDITOR.plugins.ae_addimages\n     * @param {Array} imageFiles Array of image files\n     */\n\n    /**\n     * Fired when an image is being added to the editor successfully.\n     *\n     * @event CKEDITOR.plugins.ae_addimages#imageAdd\n     * @instance\n     * @memberof CKEDITOR.plugins.ae_addimages\n     * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n     * @param {File} file The image file\n     */\n\n    CKEDITOR.plugins.add(\n        'ae_addimages', {\n            /**\n             * Initialization of the plugin, part of CKEditor plugin lifecycle.\n             * The function registers a 'dragenter', 'dragover', 'drop' and `paste` events on the editing area.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method init\n             * @param {Object} editor The current editor instance\n             */\n            init: function(editor) {\n                editor.once('contentDom', function() {\n                    var editable = editor.editable();\n\n                    editable.attachListener(editable, 'dragenter', this._onDragEnter, this, {\n                        editor: editor\n                    });\n\n                    editable.attachListener(editable, 'dragover', this._onDragOver, this, {\n                        editor: editor\n                    });\n\n                    editable.attachListener(editable, 'drop', this._onDragDrop, this, {\n                        editor: editor\n                    });\n\n                    editable.attachListener(editable, 'paste', this._onPaste, this, {\n                        editor: editor\n                    });\n                }.bind(this));\n            },\n\n            /**\n             * Accepts an array of dropped files to the editor. Then, it filters the images and sends them for further\n             * processing to {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}}\n             *\n             * @fires CKEDITOR.plugins.ae_addimages#beforeImageAdd\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method _handleFiles\n             * @param {Array} files Array of dropped files. Only the images from this list will be processed.\n             * @param {Object} editor The current editor instance\n             * @protected\n             */\n            _handleFiles: function(files, editor) {\n                var file;\n                var i;\n\n                var imageFiles = [];\n\n                for (i = 0; i < files.length; i++) {\n                    file = files[i];\n\n                    if (file.type.indexOf('image') === 0) {\n                        imageFiles.push(file);\n                    }\n                }\n\n                var result = editor.fire('beforeImageAdd', {\n                    imageFiles: imageFiles\n                });\n\n                if (!!result) {\n                    for (i = 0; i < imageFiles.length; i++) {\n                        file = imageFiles[i];\n\n                        this._processFile(file, editor);\n                    }\n                }\n\n                return false;\n            },\n\n            /**\n             * Handles drag drop event. The function will create a selection from the current\n             * point and will send a list of files to be processed to\n             * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_handleFiles:method\"}}{{/crossLink}} method.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method _onDragDrop\n             * @param {CKEDITOR.dom.event} event dragdrop event, as received natively from CKEditor\n             * @protected\n             */\n            _onDragDrop: function(event) {\n                var nativeEvent = event.data.$;\n\n                new CKEDITOR.dom.event(nativeEvent).preventDefault();\n\n                var editor = event.listenerData.editor;\n\n                event.listenerData.editor.createSelectionFromPoint(nativeEvent.clientX, nativeEvent.clientY);\n\n                this._handleFiles(nativeEvent.dataTransfer.files, editor);\n            },\n\n            /**\n             * Handles drag enter event. In case of IE, this function will prevent the event.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method _onDragEnter\n             * @param {DOM event} event dragenter event, as received natively from CKEditor\n             * @protected\n             */\n            _onDragEnter: function(event) {\n                if (isIE) {\n                    this._preventEvent(event);\n                }\n            },\n\n            /**\n             * Handles drag over event. In case of IE, this function will prevent the event.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method _onDragOver\n             * @param {DOM event} event dragover event, as received natively from CKEditor\n             * @protected\n             */\n            _onDragOver: function(event) {\n                if (isIE) {\n                    this._preventEvent(event);\n                }\n            },\n\n            /**\n             * Checks if the pasted data is image and passes it to\n             * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}} for processing.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method _onPaste\n             * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n             * @protected\n             */\n            _onPaste: function(event) {\n                if (event.data && event.data.$ && event.data.$.clipboardData && event.data.$.clipboardData.items && event.data.$.clipboardData.items.length > 0) {\n                    var pastedData = event.data.$.clipboardData.items[0];\n\n                    if (pastedData.type.indexOf('image') === 0) {\n                        var imageFile = pastedData.getAsFile();\n\n                        this._processFile(imageFile, event.listenerData.editor);\n                    }\n                }\n            },\n\n            /**\n             * Prevents a native event.\n             *\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method _preventEvent\n             * @param {DOM event} event The event to be prevented.\n             * @protected\n             */\n            _preventEvent: function(event) {\n                event = new CKEDITOR.dom.event(event.data.$);\n\n                event.preventDefault();\n                event.stopPropagation();\n            },\n\n            /**\n             * Processes an image file. The function creates an img element and sets as source\n             * a Data URI, then fires an 'imageAdd' event via CKEditor's event system.\n             *\n             * @fires CKEDITOR.plugins.ae_addimages#imageAdd\n             * @instance\n             * @memberof CKEDITOR.plugins.ae_addimages\n             * @method _preventEvent\n             * @param {DOM event} event The event to be prevented.\n             * @protected\n             */\n            _processFile: function(file, editor) {\n                var reader = new FileReader();\n\n                reader.addEventListener('loadend', function() {\n                    var bin = reader.result;\n\n                    var el = CKEDITOR.dom.element.createFromHtml('<img src=\"' + bin + '\">');\n\n                    editor.insertElement(el);\n\n                    var imageData = {\n                        el: el,\n                        file: file\n                    };\n\n                    editor.fire('imageAdd', imageData);\n                });\n\n                reader.readAsDataURL(file);\n            }\n        }\n    );\n}());","import addimages from './addimages';\nimport autolink from './autolink';\nimport autolist from './autolist';\nimport dragresize from './dragresize';\nimport dragresizeie from './dragresize_ie';\nimport embed from './embed';\nimport imagealignment from './imagealignment';\nimport pasteimages from './pasteimages';\nimport placeholder from './placeholder';\nimport selectionkeystrokes from './selectionkeystrokes';\nimport tableresize from './tableresize';\nimport tabletools from './tabletools';\n\nexport {\n    addimages,\n    autolink,\n    autolist,\n    dragresize,\n    dragresizeie,\n    embed,\n    imagealignment,\n    pasteimages,\n    placeholder,\n    selectionkeystrokes,\n    tableresize,\n    tabletools\n};","(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_uicore')) {\n        return;\n    }\n\n    /**\n     * UICore class which will handle user interactions with the editor. These interactions\n     * might be triggered via mouse, keyboard or touch devices. The class fill fire an event via\n     * CKEditor's event system - \"editorInteraction\". The UI may listen to this event and\n     * execute some actions - for example to show/hide toolbars.\n     *\n     * By default if user presses the Esc key, 'editorInteraction' event won't be fired. However, this behaviour can be changed\n     * by setting {{#crossLink \"CKEDITOR.plugins.ae_uicore/allowEsc:attribute\"}}{{/crossLink}} config property in editor's configuration to true.\n     *\n     * @class ae_uicore\n     */\n\n    /**\n     * Fired when user interacts somehow with the browser. This may be clicking with the mouse, pressing keyboard button,\n     * or touching screen. This even will be not fired after each interaction. It will be debounced. By default the timeout\n     * is 50ms. This value can be overwritten via {{#crossLink \"CKEDITOR.plugins.ae_uicore/timeout:attribute\"}}{{/crossLink}}\n     * property of editor's configuration, like: editor.config.uicore.timeout = 100\n     *\n     * @memberof ae_uicore\n     * @event ae_uicore#editorInteraction\n     * @param {Object} data An object which contains the following properties:\n     * - nativeEvent - The event as received from CKEditor.\n     * - selectionData - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n     */\n\n    /**\n     * Fired by UI elements like Toolbars or Buttons when their state changes. The listener updates the live region with the provided data.\n     *\n     * @memberof ae_uicore\n     * @event ae_uicore#ariaUpdate\n     * @param {Object} data An object which contains the following properties:\n     * - message - The provided message from the UI element.\n     */\n\n    /**\n     * If set to true, the editor will still fire {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event,\n     * if user presses Esc key.\n     *\n     * @memberof ae_uicore\n     * @attribute allowEsc\n     * @default false\n     * @type Boolean\n     */\n\n    /**\n     * Specifies the default timeout after which the {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event\n     * will be fired.\n     *\n     * @memberof ae_uicore\n     * @attribute timeout\n     * @default 50 (ms)\n     * @type Number\n     */\n\n    CKEDITOR.plugins.add(\n        'ae_uicore', {\n            /**\n             * Initializer lifecycle implementation for the UICore plugin.\n             *\n             * @memberof ae_uicore\n             * @method init\n             * @param {Object} editor The current CKEditor instance.\n             * @protected\n             */\n            init: function(editor) {\n                var ariaState = [];\n\n                var ariaElement = this._createAriaElement(editor.id);\n\n                var uiTasksTimeout = editor.config.uicore ? editor.config.uicore.timeout : 50;\n\n                var handleUI = CKEDITOR.tools.debounce(\n                    function(event) {\n                        ariaState = [];\n\n                        if (event.name !== 'keyup' || event.data.$.keyCode !== 27 || editor.config.allowEsc) {\n                            var selectionData = editor.getSelectionData();\n\n                            if (selectionData) {\n                                editor.fire('editorInteraction', {\n                                    nativeEvent: event.data.$,\n                                    selectionData: selectionData\n                                });\n                            }\n                        }\n                    },\n                    uiTasksTimeout\n                );\n\n                var handleAria = CKEDITOR.tools.debounce(\n                    function(event) {\n                        ariaElement.innerHTML = ariaState.join('. ');\n                    },\n                    uiTasksTimeout\n                );\n\n                var handleMouseLeave = CKEDITOR.tools.debounce(\n                    function(event) {\n                        var aeUINodes = document.querySelectorAll('.ae-ui');\n\n                        var found;\n\n                        for (var i = 0; i < aeUINodes.length; i++) {\n                            if (aeUINodes[i].contains(event.data.$.relatedTarget)) {\n                                found = true;\n                                break;\n                            }\n                        }\n\n                        if (!found) {\n                            handleUI(event);\n                        }\n                    },\n                    uiTasksTimeout\n                );\n\n                editor.on('ariaUpdate', function(event) {\n                    // handleAria is debounced function, so if it is being called multiple times, it will\n                    // be canceled until some time passes.\n                    // For that reason here we explicitly append the current message to the list of messages\n                    // and call handleAria. Since it is debounced, when some timeout passes,\n                    // all the messages will be applied to the live region and not only the last one.\n\n                    ariaState.push(event.data.message);\n\n                    handleAria();\n                });\n\n                editor.once('contentDom', function() {\n                    var editable = editor.editable();\n\n                    var focusHandler = editable.attachListener(editable, 'focus', function (event) {\n                        focusHandler.removeListener();\n\n                        editable.attachListener(editable, 'keyup', handleUI);\n                        editable.attachListener(editable, 'mouseup', handleUI);\n                        editable.attachListener(editable, 'mouseleave', handleMouseLeave);\n\n                        handleUI(event);\n                    });\n                });\n\n                editor.on('destroy', function(event) {\n                    ariaElement.parentNode.removeChild(ariaElement);\n\n                    handleUI.detach();\n                });\n            },\n\n            /**\n             * Creates and applies an HTML element to the body of the document which will contain ARIA messages.\n             *\n             * @memberof ae_uicore\n             * @method _createAriaElement\n             * @param {String} id The provided id of the element. It will be used as prefix for the final element Id.\n             * @protected\n             * @return {HTMLElement} The created and applied to DOM element.\n             */\n            _createAriaElement: function(id) {\n                var statusElement = document.createElement('div');\n\n                statusElement.className = 'ae-sr-only';\n\n                statusElement.setAttribute('aria-live', 'polite');\n                statusElement.setAttribute('role', 'status');\n                statusElement.setAttribute('id', id + 'LiveRegion');\n\n                document.body.appendChild(statusElement);\n\n                return statusElement;\n            }\n        }\n    );\n}());","(function() {\n    'use strict';\n\n    /**\n     * CKEDITOR.tools class utility which adds additional methods to those of CKEditor.\n     *\n     * @class CKEDITOR.tools\n     */\n\n    /**\n     * Sends a request using the JSONP technique.\n     *\n     * @memberof CKEDITOR.tools\n     * @method jsonp\n     * @param {CKEDITOR.template} urlTemplate The template of the URL to be requested. All properties passed in `urlParams` can be used, plus a `{callback}`, which represent a JSONP callback, must be defined.\n     * @param {Function} callback A function to be called in case of success.\n     * @param {Function} errorCallback A function to be called in case of failure.\n     * @param {Object} urlParams Parameters to be passed to the `urlTemplate`.\n     * @return {Object} An object with the following properties:\n     *  - id: the transaction ID\n     *  - a `cancel()` method\n     * @static\n     */\n    CKEDITOR.tools.jsonp = function(urlTemplate, urlParams, callback, errorCallback) {\n        var callbackKey = CKEDITOR.tools.getNextNumber();\n\n        urlParams = urlParams || {};\n        urlParams.callback = 'CKEDITOR._.jsonpCallbacks[' + callbackKey + ']';\n\n        if (!CKEDITOR._.jsonpCallbacks) {\n            CKEDITOR._.jsonpCallbacks = {};\n        }\n\n        CKEDITOR._.jsonpCallbacks[callbackKey] = function(response) {\n            setTimeout(function() {\n                cleanUp();\n\n                callback(response);\n            });\n        };\n\n        var scriptElement = new CKEDITOR.dom.element('script');\n        scriptElement.setAttribute('src', urlTemplate.output(urlParams));\n        scriptElement.on('error', function() {\n            cleanUp();\n\n            if (errorCallback) {\n                errorCallback();\n            }\n        });\n\n        function cleanUp() {\n            if (scriptElement) {\n                scriptElement.remove();\n                delete CKEDITOR._.jsonpCallbacks[callbackKey];\n                scriptElement = null;\n            }\n        }\n\n        CKEDITOR.document.getBody().append(scriptElement);\n\n        return {\n            cancel: cleanUp,\n            id: callbackKey\n        };\n    };\n\n    /**\n     * Returns a new object containing all of the properties of all the supplied\n     * objects. The properties from later objects will overwrite those in earlier\n     * objects.\n     *\n     * Passing in a single object will create a shallow copy of it.\n     *\n     * @memberof CKEDITOR.tools\n     * @method merge\n     * @param {Object} objects* One or more objects to merge.\n     * @return {Object} A new merged object.\n     * @static\n     */\n    CKEDITOR.tools.merge = CKEDITOR.tools.merge || function() {\n        var result = {};\n\n        for (var i = 0; i < arguments.length; ++i) {\n            var obj = arguments[i];\n\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    result[key] = obj[key];\n                }\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Simulates event on a DOM element.\n     *\n     * @memberof CKEDITOR.tools\n     * @method simulate\n     * @param {DOMElement} element The element on which the event shoud be simualted.\n     * @param {String} event The name of the event which have to be simulated.\n     * @static\n     */\n    CKEDITOR.tools.simulate = function(element, event) {\n        var eventInstance = document.createEvent('Events');\n        eventInstance.initEvent(event, true, false);\n        element.dispatchEvent(eventInstance);\n    };\n}());","(function() {\n    'use strict';\n\n    var IE_NON_DIRECTLY_EDITABLE_ELEMENT = {\n        'table': 1,\n        'col': 1,\n        'colgroup': 1,\n        'tbody': 1,\n        'td': 1,\n        'tfoot': 1,\n        'th': 1,\n        'thead': 1,\n        'tr': 1\n    };\n\n    /**\n     * Table class utility. Provides methods for create, delete and update tables.\n     *\n     * @class CKEDITOR.Table\n     * @constructor\n     * @param {Object} editor The CKEditor instance.\n     */\n\n    function Table(editor) {\n        this._editor = editor;\n    }\n\n    Table.HEADING_BOTH = 'Both';\n    Table.HEADING_COL = 'Column';\n    Table.HEADING_NONE = 'None';\n    Table.HEADING_ROW = 'Row';\n\n    Table.prototype = {\n        constructor: Table,\n\n        /**\n         * Creates a table.\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @method create\n         * @param {Object} config Table configuration object\n         * @return {Object} The created table\n         */\n        create: function(config) {\n            var editor = this._editor;\n            var table = this._createElement('table');\n\n            config = config || {};\n\n            // Generate the rows and cols.\n            var tbody = table.append(this._createElement('tbody'));\n            var rows = config.rows || 1;\n            var cols = config.cols || 1;\n\n            for (var i = 0; i < rows; i++) {\n                var row = tbody.append(this._createElement('tr'));\n                for (var j = 0; j < cols; j++) {\n                    var cell = row.append(this._createElement('td'));\n\n                    cell.appendBogus();\n                }\n            }\n\n            this.setAttributes(table, config.attrs);\n            this.setHeading(table, config.heading);\n\n            // Insert the table element if we're creating one.\n            editor.insertElement(table);\n\n            var firstCell = new CKEDITOR.dom.element(table.$.rows[0].cells[0]);\n            var range = editor.createRange();\n            range.moveToPosition(firstCell, CKEDITOR.POSITION_AFTER_START);\n            range.select();\n\n            return table;\n        },\n\n        /**\n         * Retrieves a table from the current selection.\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @method getFromSelection\n         * @return {CKEDITOR.dom.element} The retrieved table or null if not found.\n         */\n        getFromSelection: function() {\n            var table;\n            var selection = this._editor.getSelection();\n            var selected = selection.getSelectedElement();\n\n            if (selected && selected.is('table')) {\n                table = selected;\n            } else {\n                var ranges = selection.getRanges();\n\n                if (ranges.length > 0) {\n                    // Webkit could report the following range on cell selection (#4948):\n                    // <table><tr><td>[&nbsp;</td></tr></table>]\n\n                    /* istanbul ignore else */\n                    if (CKEDITOR.env.webkit) {\n                        ranges[0].shrink(CKEDITOR.NODE_ELEMENT);\n                    }\n\n                    table = this._editor.elementPath(ranges[0].getCommonAncestor(true)).contains('table', 1);\n                }\n            }\n\n            return table;\n        },\n\n        /**\n         * Checks if a given table can be considered as editable. This method\n         * workarounds a limitation of IE where for some elements (like table),\n         * `isContentEditable` returns always false. This is because IE does not support\n         * `contenteditable` on such elements. However, despite such elements\n         * cannot be set as content editable directly, a content editable SPAN,\n         * or DIV element can be placed inside the individual table cells.\n         * See https://msdn.microsoft.com/en-us/library/ms537837%28v=VS.85%29.aspx\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @method isEditable\n         * @param {CKEDITOR.dom.element} el The table element to test if editable\n         * @return {Boolean}\n         */\n        isEditable: function (el) {\n            if (!CKEDITOR.env.ie || !el.is(IE_NON_DIRECTLY_EDITABLE_ELEMENT)) {\n                return !el.isReadOnly();\n            }\n\n            if (el.hasAttribute('contenteditable')) {\n                return (el.getAttribute('contenteditable') !== 'false');\n            }\n\n            return this.isEditable(el.getParent());\n        },\n\n        /**\n         * Returns which heading style is set for the given table.\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @method getHeading\n         * @param {CKEDITOR.dom.element} table The table to gather the heading from. If null, it will be retrieved from the current selection.\n         * @return {String} The heading of the table. Expected values are `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n         */\n        getHeading: function(table) {\n            table = table || this.getFromSelection();\n\n            if (!table) {\n                return null;\n            }\n\n            var rowHeadingSettings = table.$.tHead !== null;\n\n            var colHeadingSettings = true;\n\n            // Check if all of the first cells in every row are TH\n            for (var row = 0; row < table.$.rows.length; row++) {\n                // If just one cell isn't a TH then it isn't a header column\n                var cell = table.$.rows[row].cells[0];\n\n                if (cell && cell.nodeName.toLowerCase() !== 'th') {\n                    colHeadingSettings = false;\n                    break;\n                }\n            }\n\n            var headingSettings = Table.HEADING_NONE;\n\n            if (rowHeadingSettings) {\n                headingSettings = Table.HEADING_ROW;\n            }\n\n            if (colHeadingSettings) {\n                headingSettings = (headingSettings === Table.HEADING_ROW ? Table.HEADING_BOTH : Table.HEADING_COL);\n            }\n\n            return headingSettings;\n        },\n\n        /**\n         * Removes a table from the editor.\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @method remove\n         * @param {CKEDITOR.dom.element} table The table element which table style should be removed.\n         */\n        remove: function(table) {\n            var editor = this._editor;\n\n            if (table) {\n                table.remove();\n            } else {\n                table = editor.elementPath().contains('table', 1);\n\n                if (table) {\n                    // If the table's parent has only one child remove it as well (unless it's a table cell, or the editable element) (#5416, #6289, #12110)\n                    var parent = table.getParent();\n                    var editable = editor.editable();\n\n                    if (parent.getChildCount() === 1 && !parent.is('td', 'th') && !parent.equals(editable)) {\n                        table = parent;\n                    }\n\n                    var range = editor.createRange();\n                    range.moveToPosition(table, CKEDITOR.POSITION_BEFORE_START);\n                    table.remove();\n                    range.select();\n                }\n            }\n        },\n\n        /**\n         * Assigns provided attributes to a table.\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @method setAttributes\n         * @param {Object} table The table to which the attributes should be assigned\n         * @param {Object} attrs The attributes which have to be assigned to the table\n         */\n        setAttributes: function(table, attrs) {\n            if (attrs) {\n                Object.keys(attrs).forEach(function(attr) {\n                    table.setAttribute(attr, attrs[attr]);\n                });\n            }\n        },\n\n        /**\n         * Sets the appropriate table heading style to a table.\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @method setHeading\n         * @param {CKEDITOR.dom.element} table The table element to which the heading should be set. If null, it will be retrieved from the current selection.\n         * @param {String} heading The table heading to be set. Accepted values are: `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n         */\n        setHeading: function(table, heading) {\n            table = table || this.getFromSelection();\n\n            var i, newCell;\n            var tableHead;\n            var tableBody = table.getElementsByTag('tbody').getItem(0);\n\n            var tableHeading = this.getHeading(table);\n            var hadColHeading = (tableHeading === Table.HEADING_COL || tableHeading === Table.HEADING_BOTH);\n\n            var needColHeading = heading === Table.HEADING_COL || heading === Table.HEADING_BOTH;\n            var needRowHeading = heading === Table.HEADING_ROW || heading === Table.HEADING_BOTH;\n\n            // If we need row heading and don't have a <thead> element yet, move the\n            // first row of the table to the head and convert the nodes to <th> ones.\n            if (!table.$.tHead && needRowHeading) {\n                var tableFirstRow = tableBody.getElementsByTag('tr').getItem(0);\n                var tableFirstRowChildCount = tableFirstRow.getChildCount();\n\n                // Change TD to TH:\n                for (i = 0; i < tableFirstRowChildCount; i++) {\n                    var cell = tableFirstRow.getChild(i);\n\n                    // Skip bookmark nodes. (#6155)\n                    if (cell.type === CKEDITOR.NODE_ELEMENT && !cell.data('cke-bookmark')) {\n                        cell.renameNode('th');\n                        cell.setAttribute('scope', 'col');\n                    }\n                }\n\n                tableHead = this._createElement(table.$.createTHead());\n                tableHead.append(tableFirstRow.remove());\n            }\n\n            // If we don't need row heading and we have a <thead> element, move the\n            // row out of there and into the <tbody> element.\n            if (table.$.tHead !== null && !needRowHeading) {\n                // Move the row out of the THead and put it in the TBody:\n                tableHead = this._createElement(table.$.tHead);\n\n                var previousFirstRow = tableBody.getFirst();\n\n                while (tableHead.getChildCount() > 0) {\n                    var newFirstRow = tableHead.getFirst();\n                    var newFirstRowChildCount = newFirstRow.getChildCount();\n\n                    for (i = 0; i < newFirstRowChildCount; i++) {\n                        newCell = newFirstRow.getChild(i);\n\n                        if (newCell.type === CKEDITOR.NODE_ELEMENT) {\n                            newCell.renameNode('td');\n                            newCell.removeAttribute('scope');\n                        }\n                    }\n\n                    newFirstRow.insertBefore(previousFirstRow);\n                }\n\n                tableHead.remove();\n            }\n\n            tableHeading = this.getHeading(table);\n            var hasColHeading = (tableHeading === Table.HEADING_COL || tableHeading === Table.HEADING_BOTH);\n\n            // If we need column heading and the table doesn't have it, convert every first cell in\n            // every row into a `<th scope=\"row\">` element.\n            if (!hasColHeading && needColHeading) {\n                for (i = 0; i < table.$.rows.length; i++) {\n                    if (table.$.rows[i].cells[0].nodeName.toLowerCase() !== 'th') {\n                        newCell = new CKEDITOR.dom.element(table.$.rows[i].cells[0]);\n                        newCell.renameNode('th');\n                        newCell.setAttribute('scope', 'row');\n                    }\n                }\n            }\n\n            // If we don't need column heading but the table has it, convert every first cell in every\n            // row back into a `<td>` element.\n            if (hadColHeading && !needColHeading) {\n                for (i = 0; i < table.$.rows.length; i++) {\n                    var row = new CKEDITOR.dom.element(table.$.rows[i]);\n\n                    if (row.getParent().getName() === 'tbody') {\n                        newCell = new CKEDITOR.dom.element(row.$.cells[0]);\n                        newCell.renameNode('td');\n                        newCell.removeAttribute('scope');\n                    }\n                }\n            }\n        },\n\n        /**\n         * Creates a new CKEDITOR.dom.element using the passed tag name.\n         *\n         * @instance\n         * @memberof CKEDITOR.Table\n         * @protected\n         * @method _createElement\n         * @param {String} name The tag name from which an element should be created\n         * @return {CKEDITOR.dom.element} Instance of CKEDITOR DOM element class\n         */\n        _createElement: function(name) {\n            return new CKEDITOR.dom.element(name, this._editor.document);\n        }\n    };\n\n    CKEDITOR.on('instanceReady', function(event) {\n        var headingCommands = [Table.HEADING_NONE, Table.HEADING_ROW, Table.HEADING_COL, Table.HEADING_BOTH];\n\n        var tableUtils = new Table(event.editor);\n\n        headingCommands.forEach(function(heading) {\n            event.editor.addCommand('tableHeading' + heading, {\n                exec: function(editor) {\n                    tableUtils.setHeading(null, heading);\n                }\n            });\n        });\n    });\n\n    CKEDITOR.Table = CKEDITOR.Table || Table;\n}());\n","(function() {\n    'use strict';\n\n    if (CKEDITOR.plugins.get('ae_selectionregion')) {\n        return;\n    }\n\n    CKEDITOR.SELECTION_TOP_TO_BOTTOM = 0;\n    CKEDITOR.SELECTION_BOTTOM_TO_TOP = 1;\n    CKEDITOR.SELECTION_LEFT_TO_RIGHT = 2;\n    CKEDITOR.SELECTION_RIGHT_TO_LEFT = 3;\n\n    /**\n     * SelectionRegion utility class which provides metadata about the selection. The metadata may be the start and end\n     * rectangles, caret region, etc. **This class is not intended to be used standalone. Its functions will\n     * be merged into each editor instance, so the developer may use them directly via the editor, without making\n     * an instance of this class**.\n     *\n     * @class SelectionRegion\n     * @constructor\n     */\n    function SelectionRegion() {}\n\n    SelectionRegion.prototype = {\n        constructor: SelectionRegion,\n\n        /**\n         * Creates selection from two points in page coordinates.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method createSelectionFromPoint\n         * @param {Number} x X point in page coordinates.\n         * @param {Number} y Y point in page coordinates.\n         */\n        createSelectionFromPoint: function(x, y) {\n            this.createSelectionFromRange(x, y, x, y);\n        },\n\n        /**\n         * Creates selection from range. A range consists from two points in page coordinates.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method createSelectionFromRange\n         * @param {Number} startX X coordinate of the first point.\n         * @param {Number} startY Y coordinate of the first point.\n         * @param {Number} endX X coordinate of the second point.\n         * @param {Number} endY Y coordinate of the second point.\n         */\n        createSelectionFromRange: function(startX, startY, endX, endY) {\n            var end;\n            var endContainer;\n            var endOffset;\n            var range;\n            var start;\n            var startContainer;\n            var startOffset;\n\n            if (typeof document.caretPositionFromPoint === 'function') {\n                start = document.caretPositionFromPoint(startX, startY);\n                end = document.caretPositionFromPoint(endX, endY);\n\n                startContainer = start.offsetNode;\n                endContainer = end.offsetNode;\n\n                startOffset = start.offset;\n                endOffset = end.offset;\n\n                range = this.createRange();\n            } else if (typeof document.caretRangeFromPoint === 'function') {\n                start = document.caretRangeFromPoint(startX, startY);\n                end = document.caretRangeFromPoint(endX, endY);\n\n                startContainer = start.startContainer;\n                endContainer = end.startContainer;\n\n                startOffset = start.startOffset;\n                endOffset = end.startOffset;\n\n                range = this.createRange();\n            }\n\n            if (range && document.getSelection) {\n                range.setStart(new CKEDITOR.dom.node(startContainer), startOffset);\n                range.setEnd(new CKEDITOR.dom.node(endContainer), endOffset);\n\n                this.getSelection().selectRanges([range]);\n            } else if (typeof document.body.createTextRange === 'function') {\n                var selection = this.getSelection();\n\n                selection.unlock();\n\n                range = document.body.createTextRange();\n                range.moveToPoint(startX, startY);\n\n                var endRange = range.duplicate();\n                endRange.moveToPoint(endX, endY);\n\n                range.setEndPoint('EndToEnd', endRange);\n                range.select();\n\n                this.getSelection().lock();\n            }\n        },\n\n        /**\n         * Returns the region of the current position of the caret. The points are in page coordinates.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method getCaretRegion\n         * @return {Object} Returns object with the following properties:\n         * - bottom\n         * - left\n         * - right\n         * - top\n         */\n        getCaretRegion: function() {\n            var selection = this.getSelection();\n\n            var region = {\n                bottom: 0,\n                left: 0,\n                right: 0,\n                top: 0\n            };\n\n            var bookmarks = selection.createBookmarks();\n\n            if (!bookmarks.length) {\n                return region;\n            }\n\n            var bookmarkNodeEl = bookmarks[0].startNode.$;\n\n            bookmarkNodeEl.style.display = 'inline-block';\n\n            region = new CKEDITOR.dom.element(bookmarkNodeEl).getClientRect();\n\n            bookmarkNodeEl.parentNode.removeChild(bookmarkNodeEl);\n\n            var scrollPos = new CKEDITOR.dom.window(window).getScrollPosition();\n\n            region.bottom = scrollPos.y + region.bottom;\n            region.left = scrollPos.x + region.left;\n            region.right = scrollPos.x + region.right;\n            region.top = scrollPos.y + region.top;\n\n            return region;\n        },\n\n        /**\n         * Returns data for the current selection.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method getSelectionData\n         * @return {Object|null} Returns an object with the following data:\n         * - element - The currently selected element, if any\n         * - text - The selected text\n         * - region - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionRegion:method\"}}{{/crossLink}}\n         */\n        getSelectionData: function() {\n            var selection = this.getSelection();\n\n            if (!selection.getNative()) {\n                return null;\n            }\n\n            var result = {\n                element: selection.getSelectedElement(),\n                text: selection.getSelectedText()\n            };\n\n            result.region = this.getSelectionRegion(selection);\n\n            return result;\n        },\n\n        /**\n         * Returns the region of the current selection.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method getSelectionRegion\n         * @return {Object} Returns object which is being returned from\n         * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getClientRectsRegion:method\"}}{{/crossLink}} with three more properties:\n         * - direction - the direction of the selection. Can be one of these:\n         *   1. CKEDITOR.SELECTION_TOP_TO_BOTTOM\n         *   2. CKEDITOR.SELECTION_BOTTOM_TO_TOP\n         * - height - The height of the selection region\n         * - width - The width of the selection region\n         */\n        getSelectionRegion: function() {\n            var region = this.getClientRectsRegion();\n\n            region.direction = this.getSelectionDirection();\n\n            region.height = region.bottom - region.top;\n            region.width = region.right - region.left;\n\n            return region;\n        },\n\n        /**\n         * Returns true if the current selection is empty, false otherwise.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method isSelectionEmpty\n         * @return {Boolean} Returns true if the current selection is empty, false otherwise.\n         */\n        isSelectionEmpty: function() {\n            var ranges;\n\n            var selection = this.getSelection();\n\n            return (selection.getType() === CKEDITOR.SELECTION_NONE) ||\n                ((ranges = selection.getRanges()) && ranges.length === 1 && ranges[0].collapsed);\n        },\n\n        /**\n         * Returns object with data about the [client rectangles](https://developer.mozilla.org/en-US/docs/Web/API/Element.getClientRects) of the selection,\n         * normalized across browses. All offsets below are in page coordinates.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method getClientRectsRegion\n         * @return {Object} Returns object with the following data:\n         * - bottom - bottom offset of all client rectangles\n         * - left - left offset of all client rectangles\n         * - right - right offset of all client rectangles\n         * - top - top offset of all client rectangles\n         * - startRect - An Object, which contains the following information:\n         *     + bottom - bottom offset\n         *     + height - the height of the rectangle\n         *     + left - left offset of the selection\n         *     + right - right offset of the selection\n         *     + top - top offset of the selection\n         *     + width - the width of the rectangle\n         * - endRect - An Object, which contains the following information:\n         *     + bottom - bottom offset\n         *     + height - the height of the rectangle\n         *     + left - left offset of the selection\n         *     + right - right offset of the selection\n         *     + top - top offset of the selection\n         *     + width - the width of the rectangle\n         *\n         * If there is no native selection, the objects will be filled with 0.\n         */\n        getClientRectsRegion: function() {\n            var selection = this.getSelection();\n            var nativeSelection = selection.getNative();\n\n            var defaultRect = {\n                bottom: 0,\n                height: 0,\n                left: 0,\n                right: 0,\n                top: 0,\n                width: 0\n            };\n\n            var region = {\n                bottom: 0,\n                endRect: defaultRect,\n                left: 0,\n                right: 0,\n                top: 0,\n                startRect: defaultRect\n            };\n\n            if (!nativeSelection) {\n                return region;\n            }\n\n            var bottom = 0;\n            var clientRects;\n            var left = Infinity;\n            var rangeCount;\n            var right = -Infinity;\n            var top = Infinity;\n\n            if (nativeSelection.createRange) {\n                clientRects = nativeSelection.createRange().getClientRects();\n            } else {\n                rangeCount = nativeSelection.rangeCount;\n                clientRects = (nativeSelection.rangeCount > 0) ? nativeSelection.getRangeAt(0).getClientRects() : [];\n            }\n\n            if (clientRects.length === 0) {\n                region = this.getCaretRegion();\n            } else {\n                for (var i = 0, length = clientRects.length; i < length; i++) {\n                    var item = clientRects[i];\n\n                    if (item.left < left) {\n                        left = item.left;\n                    }\n\n                    if (item.right > right) {\n                        right = item.right;\n                    }\n\n                    if (item.top < top) {\n                        top = item.top;\n                    }\n\n                    if (item.bottom > bottom) {\n                        bottom = item.bottom;\n                    }\n                }\n\n                var scrollPos = new CKEDITOR.dom.window(window).getScrollPosition();\n\n                region.bottom = scrollPos.y + bottom;\n                region.left = scrollPos.x + left;\n                region.right = scrollPos.x + right;\n                region.top = scrollPos.y + top;\n\n                if (clientRects.length) {\n                    var endRect = clientRects[clientRects.length - 1];\n                    var startRect = clientRects[0];\n\n                    region.endRect = {\n                        bottom: scrollPos.y + endRect.bottom,\n                        height: endRect.height,\n                        left: scrollPos.x + endRect.left,\n                        right: scrollPos.x + endRect.right,\n                        top: scrollPos.y + endRect.top,\n                        width: endRect.width\n                    };\n\n                    region.startRect = {\n                        bottom: scrollPos.y + startRect.bottom,\n                        height: startRect.height,\n                        left: scrollPos.x + startRect.left,\n                        right: scrollPos.x + startRect.right,\n                        top: scrollPos.y + startRect.top,\n                        width: startRect.width\n                    };\n                }\n            }\n\n            return region;\n        },\n\n        /**\n         * Retrieves the direction of the selection. The direction is from top to bottom or from bottom to top.\n         * For IE < 9 it is not possible, so the direction for these browsers will be always CKEDITOR.SELECTION_TOP_TO_BOTTOM.\n         *\n         * @instance\n         * @memberof SelectionRegion\n         * @method getSelectionDirection\n         * @return {Number} Returns a number which represents selection direction. It might be one of these:\n         * - CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n         * - CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n         */\n        getSelectionDirection: function() {\n            var direction = CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n            var selection = this.getSelection();\n            var nativeSelection = selection.getNative();\n\n            if (!nativeSelection) {\n                return direction;\n            }\n\n            var anchorNode;\n\n            if ((anchorNode = nativeSelection.anchorNode) && anchorNode.compareDocumentPosition) {\n                var position = anchorNode.compareDocumentPosition(nativeSelection.focusNode);\n\n                if (!position && nativeSelection.anchorOffset > nativeSelection.focusOffset || position === Node.DOCUMENT_POSITION_PRECEDING) {\n                    direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n                }\n            }\n\n            return direction;\n        }\n    };\n\n    CKEDITOR.plugins.add(\n        'ae_selectionregion', {\n            init: function(editor) {\n                var attr,\n                    hasOwnProperty;\n\n                hasOwnProperty = Object.prototype.hasOwnProperty;\n\n                for (attr in SelectionRegion.prototype) {\n                    if (hasOwnProperty.call(SelectionRegion.prototype, attr) && typeof editor[attr] === 'undefined') {\n                        editor[attr] = SelectionRegion.prototype[attr];\n                    }\n                }\n            }\n        }\n    );\n}());","(function() {\n    'use strict';\n\n    // Wraps each of the plugin lifecycle methods in a closure that will\n    // set up the editor.__processingPlugin__ variable so it can be globally\n    // accessed exposing the plugin being processed and the lifecycle phase\n    // in which it is happening\n    //\n    // @param {Object} plugin The plugin to wrap lifecycle methods\n    var wrapPluginLifecycle = function(plugin) {\n        var methods = ['beforeInit', 'init', 'afterInit'];\n\n        methods.forEach(function(methodName) {\n            if (plugin[methodName]) {\n                plugin[methodName] = CKEDITOR.tools.override(plugin[methodName], function(originalPluginMethod) {\n                    var payload = {\n                        phase: methodName,\n                        plugin: plugin\n                    };\n\n                    return function(editor) {\n                        editor.__processingPlugin__ = payload;\n\n                        originalPluginMethod.call(this, editor);\n\n                        editor.__processingPlugin__ = null;\n                    };\n                });\n            }\n        });\n    };\n\n    // Filters the requires object to remove unwanted dependencies. At this point\n    // only 'toolbar' has been identified, but more can appear. An unwanted plugin\n    // dependency is one that prevents a necessary plugin from being removed\n    //\n    // @param {string|Array<string>} requires The requires object\n    // @return {string} The filtered requires object\n    var filterUnwantedDependencies = function(requires) {\n        if (typeof requires === 'string') {\n            requires = requires.split(',');\n        }\n\n        return requires.filter(function(require) {\n            return require !== 'toolbar';\n        });\n    };\n\n    /**\n     * CKEDITOR.plugins class utility which adds additional methods to those of CKEditor.\n     *\n     * @class CKEDITOR.plugins\n     */\n\n    /**\n     * Overrides CKEDITOR.plugins.load method so we can extend the lifecycle methods of\n     * the loaded plugins to add some metainformation about the plugin being processed\n     *\n\t * @param {String/Array} names The name of the resource to load. It may be a\n\t * string with a single resource name, or an array with several names.\n\t * @param {Function} callback A function to be called when all resources\n\t * are loaded. The callback will receive an array containing all loaded names.\n\t * @param {Object} [scope] The scope object to be used for the callback call.\n     * @memberof CKEDITOR.plugins\n     * @method load\n     * @static\n     */\n    CKEDITOR.plugins.load = CKEDITOR.tools.override(CKEDITOR.plugins.load, function(pluginsLoad){\n        // Wrap original load function so we can transform the plugin input parameter\n        // before passing it down to the original callback\n        return function(names, callback, scope) {\n            pluginsLoad.call(this, names, function(plugins) {\n                if (callback) {\n                    Object.keys(plugins).forEach(function(pluginName) {\n                        var plugin = plugins[pluginName];\n\n                        if (plugin.requires) {\n                            plugin.requires = filterUnwantedDependencies(plugin.requires);\n                        }\n\n                        wrapPluginLifecycle(plugin);\n                    });\n\n                    callback.call(scope, plugins);\n                }\n            });\n        };\n    });\n}());","(function() {\n    'use strict';\n\n    var REGEX_BOOKMARK_SCHEME = /^#.*/i;\n    var REGEX_EMAIL_SCHEME = /^[a-z0-9\\u0430-\\u044F\\._-]+@/i;\n    var REGEX_URI_SCHEME = /^(?:[a-z][a-z0-9+\\-.]*)\\:|^\\//i;\n\n    /**\n     * Link class utility. Provides methods for create, delete and update links.\n     *\n     * @class CKEDITOR.Link\n     * @constructor\n     * @param {Object} editor The CKEditor instance.\n     */\n    function Link(editor, config) {\n        this._editor = editor;\n        this.appendProtocol = config && config.appendProtocol === false ? false : true;\n    }\n\n    Link.prototype = {\n        constructor: Link,\n\n        /**\n         * Advances the editor selection to the next available position after a\n         * given link or the one in the current selection.\n         *\n         * @instance\n         * @memberof CKEDITOR.Link\n         * @method advanceSelection\n         * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n         */\n        advanceSelection: function(link) {\n            link = link || this.getFromSelection();\n\n            var range = this._editor.getSelection().getRanges()[0];\n\n            if (link) {\n                range.moveToElementEditEnd(link);\n\n                var nextNode = range.getNextEditableNode();\n\n                if (nextNode && !this._editor.element.equals(nextNode.getCommonAncestor(link))) {\n                    var whitespace = /\\s/.exec(nextNode.getText());\n\n                    var offset = whitespace ? whitespace.index + 1 : 0;\n\n                    range.setStart(nextNode, offset);\n                    range.setEnd(nextNode, offset);\n                }\n            }\n\n            this._editor.getSelection().selectRanges([range]);\n        },\n\n        /**\n         * Create a link with given URI as href.\n         *\n         * @instance\n         * @memberof CKEDITOR.Link\n         * @method create\n         * @param {Object} attrs A config object with link attributes. These might be arbitrary DOM attributes.\n         * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n         * @param {String} URI The URI of the link.\n         */\n        create: function(URI, attrs, modifySelection) {\n            var selection = this._editor.getSelection();\n\n            var range = selection.getRanges()[0];\n\n            if (range.collapsed) {\n                var text = new CKEDITOR.dom.text(URI, this._editor.document);\n                range.insertNode(text);\n                range.selectNodeContents(text);\n            }\n\n            URI = this._getCompleteURI(URI);\n\n            var linkAttrs = CKEDITOR.tools.merge({\n                'data-cke-saved-href': URI,\n                href: URI\n            }, attrs);\n\n            var style = new CKEDITOR.style({\n                attributes: linkAttrs,\n                element: 'a'\n            });\n\n            style.type = CKEDITOR.STYLE_INLINE;\n            style.applyToRange(range, this._editor);\n\n            if (modifySelection && modifySelection.advance) {\n                this.advanceSelection();\n            } else {\n                range.select();\n            }\n        },\n\n        /**\n         * Retrieves a link from the current selection.\n         *\n         * @instance\n         * @memberof CKEDITOR.Link\n         * @method getFromSelection\n         * @return {CKEDITOR.dom.element} The retrieved link or null if not found.\n         */\n        getFromSelection: function() {\n            var selection = this._editor.getSelection();\n\n            var selectedElement = selection.getSelectedElement();\n\n            if (selectedElement && selectedElement.is('a')) {\n                return selectedElement;\n            }\n\n            var range = selection.getRanges()[0];\n\n            if (range) {\n                range.shrink(CKEDITOR.SHRINK_TEXT);\n\n                return this._editor.elementPath(range.getCommonAncestor()).contains('a', 1);\n            }\n\n            return null;\n        },\n\n        /**\n         * Removes a link from the editor.\n         *\n         * @instance\n         * @memberof CKEDITOR.Link\n         * @method remove\n         * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n         * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n         */\n        remove: function(link, modifySelection) {\n            var editor = this._editor;\n\n            if (link) {\n                if (modifySelection && modifySelection.advance) {\n                    this.advanceSelection();\n                }\n\n                link.remove(editor);\n            } else {\n                var style = new CKEDITOR.style({\n                    alwaysRemoveElement: 1,\n                    element: 'a',\n                    type: CKEDITOR.STYLE_INLINE\n                });\n\n                // 'removeStyle()' removes the style from the editor's current selection.\n                //  We need to force the selection to be the whole link element\n                //  to remove it properly.\n\n                var selection = editor.getSelection();\n                selection.selectElement(selection.getStartElement());\n\n                editor.removeStyle(style);\n            }\n        },\n\n        /**\n         * Updates the href of an already existing link.\n         *\n         * @instance\n         * @memberof CKEDITOR.Link\n         * @method update\n         * @param {CKEDITOR.dom.element} link The link element which href should be removed.\n         * @param {Object|String} attrs The attributes to update or remove. Attributes with null values will be removed.\n         * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n         */\n        update: function(attrs, link, modifySelection) {\n            var instance =  this;\n\n            link = link || this.getFromSelection();\n\n            if (typeof attrs === 'string') {\n                var uri = instance._getCompleteURI(attrs);\n\n                link.setAttributes({\n                    'data-cke-saved-href': uri,\n                    href: uri\n                });\n            } else if (typeof attrs === 'object') {\n                var removeAttrs = [];\n\n                var setAttrs = {};\n\n                Object.keys(attrs).forEach(function(key) {\n                    if (attrs[key] === null) {\n                        if (key === 'href') {\n                            removeAttrs.push('data-cke-saved-href');\n                        }\n\n                        removeAttrs.push(key);\n                    } else {\n                        if (key === 'href') {\n                            var uri = instance._getCompleteURI(attrs[key]);\n\n                            setAttrs['data-cke-saved-href'] = uri;\n                            setAttrs[key] = uri;\n                        } else {\n                            setAttrs[key] = attrs[key];\n                        }\n                    }\n                });\n\n                link.removeAttributes(removeAttrs);\n                link.setAttributes(setAttrs);\n            }\n\n            if (modifySelection && modifySelection.advance) {\n                this.advanceSelection(link);\n            }\n        },\n\n        /**\n         * Checks if the URI begins with a '#' symbol to determine if it's an on page bookmark.\n         * If it doesn't, it then checks if the URI has an '@' symbol. If it does and the URI\n         * looks like an email and doesn't have 'mailto:', 'mailto:' is added to the URI.\n         * If it doesn't and the URI doesn't have a scheme, the default 'http' scheme with\n         * hierarchical path '//' is added to the URI.\n         *\n         * @instance\n         * @memberof CKEDITOR.Link\n         * @method _getCompleteURI\n         * @param {String} URI The URI of the link.\n         * @protected\n         * @return {String} The URI updated with the protocol.\n         */\n        _getCompleteURI: function(URI) {\n            if (REGEX_BOOKMARK_SCHEME.test(URI)) {\n                return URI;\n            } else if (REGEX_EMAIL_SCHEME.test(URI)) {\n                URI = 'mailto:' + URI;\n            } else if (!REGEX_URI_SCHEME.test(URI)) {\n                URI = this.appendProtocol ? 'http://' + URI : URI;\n            }\n\n            return URI;\n        }\n    };\n\n    CKEDITOR.Link = CKEDITOR.Link || Link;\n}());","(function() {\n    'use strict';\n\n    /**\n     * Debounce util function. If a function execution is expensive, it might be debounced. This means\n     * that it will be executed after some amount of time after its last call. For example, if we attach a\n     * a function on scroll event, it might be called hundreds times per second. In this case it may be\n     * debounced with, let's say 100ms. The real execution of this function will happen 100ms after last\n     * scroll event.\n     *\n     * @memberof CKEDITOR.tools\n     * @method debounce\n     * @param {Array} args An array of arguments which the callback will receive.\n     * @param {Function} callback The callback which has to be called after given timeout.\n     * @param {Number} timeout Timeout in milliseconds after which the callback will be called.\n     * @param {Object} context The context in which the callback will be called. This argument is optional.\n     * @static\n     */\n    CKEDITOR.tools.debounce = CKEDITOR.tools.debounce || function(callback, timeout, context, args) {\n        var debounceHandle;\n\n        var callFn = function() {\n            var callContext = context || this;\n\n            clearTimeout(debounceHandle);\n\n            var result = [];\n\n            for (var len = arguments.length, startIndex = 0; startIndex < len; ++startIndex) {\n                result.push(arguments[startIndex]);\n            }\n\n            var callArgs = result.concat(args || []);\n\n            debounceHandle = setTimeout(function() {\n                callback.apply(callContext, callArgs);\n            }, timeout);\n        };\n\n        callFn.detach = function() {\n            clearTimeout(debounceHandle);\n        };\n\n        return callFn;\n    };\n}());","import debounce from './debounce';\nimport link from './link';\nimport plugins from './plugins';\nimport selectionRegion from './selection-region';\nimport table from './table';\nimport tools from './tools';\nimport uicore from './uicore';\n\nexport {\n    debounce,\n    link,\n    plugins,\n    selectionRegion,\n    table,\n    tools,\n    uicore\n};","import '../core';\nimport '../plugins';\n\nimport '../components/uibridge/uibridge.js';\n\nimport extend from '../oop/oop';\nimport Lang from '../oop/lang';\nimport Base from '../oop/base';\nimport Selections from '../selections/selections';\nimport UI from '../components/main.jsx';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * AlloyEditor main class. Creates instance of the editor and provides the user configuration\n * to the UI.\n *\n * @class Core\n * @constructor\n */\nfunction Core(config) {\n    Core.superclass.constructor.call(this, config);\n}\n\nextend(Core, Base, {\n    /**\n     * Initializer lifecycle implementation for the AlloyEditor class. Creates a CKEditor\n     * instance, passing it the provided configuration attributes.\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method initializer\n     * @param config {Object} Configuration object literal for the editor.\n     */\n    initializer: function(config) {\n        var node = this.get('srcNode');\n\n        if (this.get('enableContentEditable')) {\n            node.setAttribute('contenteditable', 'true');\n        }\n\n        var editor = CKEDITOR.inline(node);\n\n        editor.config.allowedContent = this.get('allowedContent');\n\n        editor.config.toolbars = this.get('toolbars');\n\n        editor.config.removePlugins = this.get('removePlugins');\n        editor.config.extraPlugins = this.get('extraPlugins');\n        editor.config.placeholderClass = this.get('placeholderClass');\n\n        editor.config.pasteFromWordRemoveStyles = false;\n        editor.config.pasteFromWordRemoveFontStyles = false;\n\n        editor.config.selectionKeystrokes = this.get('selectionKeystrokes');\n\n        Lang.mix(editor.config, config);\n\n        if (CKEDITOR.env.ie && !CKEDITOR.env.edge) {\n            editor.config.extraPlugins = editor.config.extraPlugins.replace('ae_dragresize', 'ae_dragresize_ie');\n            editor.config.removePlugins = editor.config.removePlugins.replace('ae_dragresize', 'ae_dragresize_ie');\n        }\n\n        editor.once('contentDom', function() {\n\n            this._addReadOnlyLinkClickListener(editor);\n\n            var editable = editor.editable();\n\n            editable.addClass('ae-editable');\n\n        }.bind(this));\n\n        this._editor = editor;\n\n        AlloyEditor.loadLanguageResources(this._renderUI.bind(this));\n    },\n\n    /**\n     * Destructor lifecycle implementation for the AlloyEdtor class. Destroys the CKEditor\n     * instance and destroys all created toolbars.\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method destructor\n     */\n    destructor: function() {\n        this._destroyed = true;\n\n        if (this._editorUIElement) {\n            ReactDOM.unmountComponentAtNode(this._editorUIElement);\n            this._editorUIElement.parentNode.removeChild(this._editorUIElement);\n        }\n\n        var nativeEditor = this.get('nativeEditor');\n\n        if (nativeEditor) {\n            var editable = nativeEditor.editable();\n\n            if (editable) {\n                editable.removeClass('ae-editable');\n\n                if (this.get('enableContentEditable')) {\n                    this.get('srcNode').setAttribute('contenteditable', 'false');\n                }\n            }\n\n            this._clearSelections();\n\n            nativeEditor.destroy();\n        }\n    },\n\n\n    /**\n     * Clear selections from window object\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method _clearSelections\n     */\n    _clearSelections: function() {\n        var nativeEditor = this.get('nativeEditor');\n        var isMSSelection = typeof window.getSelection != 'function';\n\n        if (isMSSelection) {\n            nativeEditor.document.$.selection.empty();\n        } else {\n            nativeEditor.document.getWindow().$.getSelection().removeAllRanges();\n        }\n    },\n\n    /**\n     * Method to set default link behavior\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method _addReadOnlyLinkClickListener\n     * @param {Object} editor\n     */\n    _addReadOnlyLinkClickListener: function(editor) {\n        editor.editable().on('click', this._defaultReadOnlyClickFn, this, {\n            editor: editor\n        });\n    },\n\n    /**\n     * Called on `click` event when the editor is in read only mode. Navigates to link's URL or opens\n     * the link in a new window.\n     *\n     * @memberof Core\n     * @instance\n     * @event readOnlyClick\n     * @protected\n     * @method _defaultReadOnlyClickFn\n     * @param {Object} event The fired `click` event payload\n     */\n    _defaultReadOnlyClickFn: function(event) {\n        var mouseEvent = event.data.$;\n        var hasCtrlKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n        var shouldOpen = this._editor.config.readOnly || hasCtrlKey;\n\n        mouseEvent.preventDefault();\n\n        if (!shouldOpen) {\n            return;\n        }\n\n        if (event.listenerData.editor.editable().editor.fire('readOnlyClick', event.data) !== false) {\n            var ckElement = new CKEDITOR.dom.elementPath(event.data.getTarget(), this);\n            var link = ckElement.lastElement;\n\n            if (link) {\n                var href = link.$.attributes.href ? link.$.attributes.href.value : null;\n                var target = hasCtrlKey ? '_blank' : link.$.attributes.target ? link.$.attributes.target.value : null;\n                this._redirectLink(href, target);\n            }\n        }\n    },\n\n    /**\n     * Retrieves the native CKEditor instance. Having this, the developer may use the API of CKEditor OOTB.\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method _getNativeEditor\n     * @return {Object} The current instance of CKEditor.\n     */\n    _getNativeEditor: function() {\n        return this._editor;\n    },\n\n    /**\n     * Redirects the browser to a given link\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method _redirectLink\n     * @param {string} href The href to take the browser to\n     * @param {string=} target Specifies where to display the link\n     */\n    _redirectLink: function(href, target) {\n        if (target && href) {\n            window.open(href, target);\n        }\n        else if (href) {\n            window.location.href = href;\n        }\n    },\n\n    /**\n     * Renders the specified from the user toolbars.\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method _renderUI\n     */\n    _renderUI: function() {\n        if (!this._destroyed) {\n            var editorUIElement = document.createElement('div');\n            editorUIElement.className = 'ae-ui';\n\n            var uiNode = this.get('uiNode') || document.body;\n\n            uiNode.appendChild(editorUIElement);\n\n            this._mainUI = ReactDOM.render(<UI\n                editor={this}\n                eventsDelay={this.get('eventsDelay')}\n                toolbars={this.get('toolbars')} />, editorUIElement);\n\n            this._editorUIElement = editorUIElement;\n\n            this.get('nativeEditor').fire('uiReady');\n        }\n    },\n\n    /**\n     * The function returns an HTML element from the passed value. If the passed value is a string, it should be\n     * the Id of the element which have to be retrieved from the DOM.\n     * If an HTML Element is passed, the element itself will be returned.\n     *\n     * @memberof Core\n     * @instance\n     * @method _toElement\n     * @protected\n     * @param {!(String|HTMLElement)} value String, which have to correspond to an HTML element from the DOM,\n     * or the HTML element itself. If Id is passed, the HTML element will be retrieved from the DOM.\n     * @return {HTMLElement} An HTML element.\n     */\n    _toElement: function(value) {\n        if (Lang.isString(value)) {\n            value = document.getElementById(value);\n        }\n\n        return value;\n    },\n\n    /**\n     * Validates the allowed content attribute. Look\n     * [here](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent) for more information about the\n     * supported values.\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method _validateAllowedContent\n     * @param {Any} The value to be checked\n     * @return {Boolean} True if the current value is valid configuration, false otherwise\n     */\n    _validateAllowedContent: function(value) {\n        return Lang.isString(value) || Lang.isObject(value) || Lang.isBoolean(value);\n    },\n\n    /**\n     * Validates the value of toolbars attribute\n     *\n     * @memberof Core\n     * @instance\n     * @protected\n     * @method _validateToolbars\n     * @param {Any} The value to be checked\n     * @return {Boolean} True if the current value is valid toolbars configuration, false otherwise\n     */\n    _validateToolbars: function(value) {\n        return Lang.isObject(value) || Lang.isNull(value);\n    }\n}, {\n    ATTRS: {\n        /**\n         * Configures the allowed content for the current instance of AlloyEditor.\n         * Look on the [official CKEditor API](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent)\n         * for more information about the valid values.\n         *\n         * @memberof Core\n         * @instance\n         * @property allowedContent\n         * @default true\n         * @writeOnce\n         * @type {Boolean, String, Object}\n         */\n        allowedContent: {\n            validator: '_validateAllowedContent',\n            value: true,\n            writeOnce: true\n        },\n\n        /**\n         * Specifies whether AlloyEditor set the contenteditable attribute\n         * to \"true\" on its srcNode.\n         *\n         * @memberof Core\n         * @instance\n         * @property enableContentEditable\n         * @type Boolean\n         * @default true\n         * @writeOnce\n         */\n        enableContentEditable: {\n            validator: Lang.isBoolean,\n            value: true,\n            writeOnce: true\n        },\n\n        /**\n         * The delay (timeout), in ms, after which events such like key or mouse events will be processed.\n         *\n         * @memberof Core\n         * @instance\n         * @property eventsDelay\n         * @type {Number}\n         */\n        eventsDelay: {\n            validator: Lang.isNumber,\n            value: 100\n        },\n\n        /**\n         * Specifies the extra plugins which have to be loaded to the current CKEditor instance in order to\n         * make AlloyEditor to work properly.\n         *\n         * @memberof Core\n         * @instance\n         * @property extraPlugins\n         * @default 'uicore,selectionregion,dragresize,addimages,placeholder,tabletools,tableresize,autolink'\n         * @writeOnce\n         * @type {String}\n         */\n        extraPlugins: {\n            validator: Lang.isString,\n            value: 'ae_uicore,ae_selectionregion,ae_selectionkeystrokes,ae_imagealignment,ae_addimages,ae_placeholder,' +\n                'ae_tabletools,ae_tableresize,ae_autolink,ae_embed,ae_autolist,ae_dragresize,' +\n                'ae_uibridge',\n                //'ae_uibridge,ae_richcombobridge,ae_panelmenubuttonbridge,ae_menubridge,ae_menubuttonbridge,ae_buttonbridge',\n            writeOnce: true\n        },\n\n        /**\n         * Retrieves the native CKEditor instance. Having this, the developer may use the full API of CKEditor.\n         *\n         * @memberof Core\n         * @instance\n         * @property nativeEditor\n         * @readOnly\n         * @type {Object}\n         */\n        nativeEditor: {\n            getter: '_getNativeEditor',\n            readOnly: true\n        },\n\n        /**\n         * Specifies the class, which should be added by Placeholder plugin\n         * {{#crossLink \"CKEDITOR.plugins.ae_placeholder}}{{/crossLink}}\n         * when editor is not focused.\n         *\n         * @memberof Core\n         * @instance\n         * @property placeholderClass\n         * @default 'ae-placeholder'\n         * @writeOnce\n         * @type {String}\n         */\n        placeholderClass: {\n            validator: Lang.isString,\n            value: 'ae-placeholder',\n            writeOnce: true\n        },\n\n        /**\n         * Specifies the plugins, which come by default with CKEditor, but which are not needed by AlloyEditor.\n         * These plugins add the default UI for CKeditor, which is no more needed. Please note that AlloyEdtor\n         * comes with its own highly optimized copy of CKEditor (just customized via their official download page).\n         * This version does not come with the unneeded plugins, so the value of this property won't be needed.\n         * However, if you decide to go with the OOTB version of CKEditor, you will have to remove some of the\n         * plugins if you decide to use AlloyEditor. Keep in mind that removing these plugins doesn't remove them\n         * entirely from CKEditor. It just removes them from its current instance, in which you will use different\n         * UI - those of AlloyEditor. You will be fully able to use both OOTB CKEditor and AlloyEditor on the same\n         * page!\n         *\n         * @memberof Core\n         * @instance\n         * @property removePlugins\n         * @default 'contextmenu,toolbar,elementspath,resize,liststyle,link'\n         * @writeOnce\n         * @type {String}\n         */\n        removePlugins: {\n            validator: Lang.isString,\n            value: 'contextmenu,toolbar,elementspath,resize,liststyle,link',\n            writeOnce: true\n        },\n\n        /**\n         * Array of manual selection triggers. They can be configured to manually show a specific selection toolbar\n         * by forcing the selection type. A selectionKeystroke item consists of a keys property with a [CKEditor keystroke\n         * definition](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-keystrokes) and a selection property with\n         * the selection name to trigger.\n         *\n         * @memberof Core\n         * @instance\n         * @property selectionKeystrokes\n         * @type {Array}\n         */\n        selectionKeystrokes: {\n            validator: Lang.isArray,\n            value: [{\n                keys: CKEDITOR.CTRL + 76 /*L*/,\n                selection: 'link'\n            }, {\n                keys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /*L*/,\n                selection: 'embed'\n            }]\n        },\n\n        /**\n         * The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n         *\n         * @memberof Core\n         * @instance\n         * @property srcNode\n         * @type String | Node\n         * @writeOnce\n         */\n        srcNode: {\n            setter: '_toElement',\n            writeOnce: true\n        },\n\n        /**\n         * The toolbars configuration for this editor instance\n         *\n         * @memberof Core\n         * @instance\n         * @property {Object} toolbars\n         */\n        toolbars: {\n            validator: '_validateToolbars',\n            value: {\n                add: {\n                    buttons: ['image', 'embed', 'camera', 'hline', 'table'],\n                    tabIndex: 2\n                },\n                styles: {\n                    selections: Selections,\n                    tabIndex: 1\n                }\n            }\n        },\n\n        /**\n         * The Node ID or HTMl node, where AlloyEditor's UI should be rendered.\n         *\n         * @memberof Core\n         * @instance\n         * @property uiNode\n         * @type String | Node\n         * @writeOnce\n         */\n        uiNode: {\n            setter: '_toElement',\n            writeOnce: true\n        }\n    }\n});\n\nCKEDITOR.event.implementOn(Core);\n\nexport default Core;\n","import Core from './core.js';\nimport Lang from '../oop/lang.js';\n\nimport Buttons from '../components/buttons';\nimport Toolbars from '../components/toolbars';\n\nimport SelectionTest from '../selections/selection-test.js';\n\n// An object containing all currently registered plugins in AlloyEditor.\nvar BRIDGE_BUTTONS = {};\n\n/**\n * Creates an instance of AlloyEditor.\n *\n * @memberof AlloyEditor\n * @method editable\n * @static\n * @param {String|Node} node The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n * @param {Object} config Configuration attributes for the current instance of AlloyEditor.\n * @return {Object} An instance of {{#crossLink \"Core\"}}{{/crossLink}}\n */\nconst editable = function(node, config) {\n    config = config || {};\n    config.srcNode = node;\n\n    AlloyEditor.implementEventTarget();\n\n    return new Core(config);\n};\n\n/**\n * The full URL for the AlloyEditor installation directory.\n * It is possible to manually provide the base path by setting a\n * global variable named `ALLOYEDITOR_BASEPATH`. This global variable\n * must be set **before** the editor script loading.\n *\n * @memberof AlloyEditor\n * @method getBasePath\n * @static\n * @return {String} The found base path\n */\nconst getBasePath = function() {\n    // Find out the editor directory path, based on its <script> tag.\n    var path = window.ALLOYEDITOR_BASEPATH || '';\n\n    if (!path) {\n        var scripts = document.getElementsByTagName('script');\n\n        for (var i = 0; i < scripts.length; i++) {\n            var match = scripts[ i ].src.match(AlloyEditor.regexBasePath);\n\n\n            if (match) {\n                path = match[1];\n                break;\n            }\n        }\n    }\n\n    // In IE (only) the script.src string is the raw value entered in the\n    // HTML source. Other browsers return the full resolved URL instead.\n    if (path.indexOf(':/') === -1 && path.slice(0, 2) !== '//' ) {\n        // Absolute path.\n        if (path.indexOf('/') === 0) {\n            path = location.href.match(/^.*?:\\/\\/[^\\/]*/)[0] + path;\n        }\n        // Relative path.\n        else {\n            path = location.href.match(/^[^\\?]*\\/(?:)/)[0] + path;\n        }\n    }\n\n    if (!path){\n        throw 'The AlloyEditor installation path could not be automatically detected. Please set the global variable \"ALLOYEDITOR_BASEPATH\" before creating editor instances.';\n    }\n\n    return path;\n};\n\n/**\n * Detects and load the corresponding language file if AlloyEditor language strings are not already present.\n * The function fires a {{#crossLink \"AlloyEditor/languageResourcesLoaded:event\"}}{{/crossLink}} event\n *\n * @memberof AlloyEditor\n * @method loadLanguageResources\n * @static\n * @param {Function} callback Optional callback to be called when AlloyEditor loads the language resource.\n */\nconst loadLanguageResources = function(callback) {\n    AlloyEditor.implementEventTarget();\n\n    if (Lang.isFunction(callback)) {\n        if (AlloyEditor.Strings) {\n            setTimeout(callback, 0);\n        } else {\n            AlloyEditor.once('languageResourcesLoaded', function() {\n                setTimeout(callback, 0);\n            });\n        }\n    }\n\n    if (!AlloyEditor._langResourceRequested) {\n        AlloyEditor._langResourceRequested = true;\n\n        var languages = ['af', 'ar', 'bg', 'bn', 'bs', 'ca', 'cs', 'cy', 'da', 'de', 'el', 'en-au', 'en-ca', 'en-gb', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fo', 'fr-ca', 'fr', 'gl', 'gu', 'he', 'hi', 'hr', 'hu', 'id', 'is', 'it', 'ja', 'ka', 'km', 'ko', 'ku', 'lt', 'lv', 'mk', 'mn', 'ms', 'nb', 'nl', 'no', 'pl', 'pt-br', 'pt', 'ro', 'ru', 'si', 'sk', 'sl', 'sq', 'sr-latn', 'sr', 'sv', 'th', 'tr', 'tt', 'ug', 'uk', 'vi', 'zh-cn', 'zh'];\n\n        var userLanguage = navigator.language || navigator.userLanguage || 'en';\n\n        var parts = userLanguage.toLowerCase().match(/([a-z]+)(?:-([a-z]+))?/);\n        var lang = parts[1];\n        var locale = parts[2];\n\n        if (languages.indexOf(lang + '-' + locale) >= 0) {\n            lang = lang + '-' + locale;\n        } else if (languages.indexOf(lang) === -1) {\n            lang = 'en';\n        }\n\n        CKEDITOR.scriptLoader.load(AlloyEditor.getUrl('lang/alloy-editor/' + lang + '.js'), function(loaded) {\n            if (loaded) {\n                AlloyEditor.fire('languageResourcesLoaded');\n            }\n        }, this);\n    }\n};\n\n/**\n * Gets the full URL for AlloyEditor resources. By default, URLs\n * returned by this function contain a querystring parameter (\"t\")\n * set to the {@link CKEDITOR#timestamp} value.\n *\n * @memberof AlloyEditor\n * @method getUrl\n * @static\n * @param {String} resource The resource whose full URL we want to get.\n * It may be a full, absolute, or relative URL.\n * @return {String} The full URL.\n */\nconst getUrl = function(resource) {\n    var basePath = AlloyEditor.getBasePath();\n\n    // If this is not a full or absolute path.\n    if (resource.indexOf(':/') === -1 && resource.indexOf('/') !== 0) {\n        resource = basePath + resource;\n    }\n\n    // Add the timestamp, except for directories.\n    if (CKEDITOR.timestamp && resource.charAt( resource.length - 1 ) !== '/' && !(/[&?]t=/).test(resource)) {\n        resource += (resource.indexOf('?') >= 0 ? '&' : '?') + 't=' + CKEDITOR.timestamp;\n    }\n\n    return resource;\n};\n\n/**\n * Implements event firing and subscribing via CKEDITOR.event.\n *\n * @memberof AlloyEditor\n * @method implementEventTarget\n * @static\n */\nconst implementEventTarget = function() {\n    if (!AlloyEditor.fire && !AlloyEditor.on) {\n        CKEDITOR.event.implementOn(AlloyEditor);\n    }\n};\n\n/**\n * Regular expression which should match the script which have been used to load AlloyEditor.\n *\n * @memberof AlloyEditor\n * @property regexBasePath\n * @type {RegExp}\n * @static\n */\nconst regexBasePath = /(^|.*[\\\\\\/])(?:alloy-editor[^/]+|alloy-editor)\\.js(?:\\?.*|;.*)?$/i;\n\n/**\n * Fired when AlloyEditor detects the browser language and loads the corresponding language file. Once this event\n * is fired, AlloyEditor.Strings will be populated with data.\n *\n * @event languageResourcesLoaded\n */\n\n/**\n * Returns the required plugin names needed for a given plugin\n * if it is already registered or an empty array.\n *\n * @memberof AlloyEditor\n * @method getButtons\n * @param {Array} buttons An array of buttons or plugin names.\n * @return {Function} A function that can be invoked to resolve the requested button names.\n * @static\n */\nconst getButtons = function(buttons) {\n    return function() {\n        return buttons.reduce(function(acc, val) {\n            val = BRIDGE_BUTTONS[val] || [val];\n            return acc.concat(val);\n        }, []);\n    };\n};\n\n/**\n * Register a button and try to get its required plugins.\n *\n * @memberof AlloyEditor\n * @method registerBridgeButton\n * @param {String} buttonName The name of the button.\n * @param {String} pluginName The name of the plugin that registers the button.\n * @static\n */\nconst registerBridgeButton = function(buttonName, pluginName) {\n    if (!BRIDGE_BUTTONS[pluginName]) {\n        BRIDGE_BUTTONS[pluginName] = [];\n    }\n\n    BRIDGE_BUTTONS[pluginName].push(buttonName);\n};\n\nexport {\n    Buttons,\n    editable,\n    getBasePath,\n    getButtons,\n    getUrl,\n    implementEventTarget,\n    loadLanguageResources,\n    registerBridgeButton,\n    SelectionTest,\n    Toolbars\n};\n"],"sourceRoot":""}