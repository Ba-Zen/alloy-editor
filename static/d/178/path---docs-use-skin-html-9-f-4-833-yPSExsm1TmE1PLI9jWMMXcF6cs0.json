{"data":{"mdx":{"excerpt":"Skins in AlloyEditor are a very powerful feature that allows you to seamlessly integrate the editor inside your app. Skin Architectureâ€¦","timeToRead":1,"frontmatter":{"title":"Skins"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h6\",\n    components: components\n  }, `Skins in AlloyEditor are a very powerful feature that allows you to seamlessly integrate the editor inside your app.`), React.createElement(\"article\", {\n    id: \"article1\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Skin Architecture`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `AlloyEditor skins are organized according to these principles:`), React.createElement(\"strong\", null, \"Variables\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Style values are parameterized as much as possible. This allows skins to fully extend others just by changing a small set of variable values.`), React.createElement(\"strong\", null, \"Components\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A skin is created by combining one or more components together. Different skins may use different components, so irrelevant styling can be easily stripped out.`), React.createElement(\"strong\", null, \"Structure vs Skin\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Styling is separated into structure and skin. Structure represents everything that affects the sizing and position of the elements, while skin represents all the purely cosmetic changes.`), React.createElement(\"article\", {\n    id: \"article2\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Skins Overview`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `You can use these skins out of the box:`), React.createElement(\"strong\", null, \"Ocean (default)\"), React.createElement(\"div\", {\n    className: \"thumbnail\"\n  }, React.createElement(\"img\", {\n    className: \"img img-polaroid\",\n    src: \"/images/guides/skin_ocean.png\"\n  })), React.createElement(\"strong\", null, \"Atlas\"), React.createElement(\"div\", {\n    className: \"thumbnail\"\n  }, React.createElement(\"img\", {\n    className: \"img img-polaroid\",\n    src: \"/images/guides/skin_atlas.png\"\n  })), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"  \", \"<link href=\\\"alloy-editor/assets/alloy-editor-atlas-min.css\\\" rel=\\\"stylesheet\\\">\")))), React.createElement(\"strong\", null, \"Moono\"), React.createElement(\"div\", {\n    className: \"thumbnail\"\n  }, React.createElement(\"img\", {\n    className: \"img img-polaroid\",\n    src: \"/images/guides/skin_moono.png\"\n  })), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"  \", \"<link href=\\\"alloy-editor/assets/alloy-editor-moono-min.css\\\" rel=\\\"stylesheet\\\">\")))));\n});"}}},"pageContext":{"slug":"docs/use/skin.html","previous":{"fields":{"layout":"feature","redirect":null,"slug":"docs/features/removeformat.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"layout":"feature","redirect":null,"slug":"docs/features/strike.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}