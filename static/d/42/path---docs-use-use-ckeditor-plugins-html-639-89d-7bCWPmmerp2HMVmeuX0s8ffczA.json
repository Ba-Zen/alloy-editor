{"data":{"mdx":{"excerpt":"Some CKEDITOR plugins add buttons through their UI. This tutorial shows how to use this kind of plugin. 'font' Plugin example Download  fontâ€¦","timeToRead":1,"frontmatter":{"title":"How to use CKEditor Plugins?"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h6\",\n    components: components\n  }, `Some CKEDITOR plugins add buttons through their UI. This tutorial shows how to use this kind of plugin.`), React.createElement(\"article\", {\n    id: \"article1\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `'font' Plugin example`), React.createElement(\"span\", {\n    className: \"code-header\"\n  }, \"Download \", React.createElement(\"a\", {\n    alt: \"font plugin\",\n    href: \"http://ckeditor.com/addon/font\"\n  }, \"font plugin\"), \", and paste it into the \", React.createElement(\"strong\", null, \"plugins folder\"), \":\"), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `Note: Keep in mind, if this plugin has dependencies, you need to download and configure them as well.`)), React.createElement(\"article\", {\n    id: \"article2\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `AlloyEditor Configuration`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Our UI bridges make it easier for you to use CKEDITOR plugins. You just need to add the required plugins to the extraPlugins configuration and retrieve its buttons using `, React.createElement(\"strong\", null), `AlloyEditor.getButtons(`, `['PLUGIN_NAME', MORE_BUTTONS]`, `)`, `:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"javascript\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-javascript\"\n  }, \"  \", \"AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"editable\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'MyEditable'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", \"extraPlugins\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"Core\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token constant\"\n  }, \"ATTRS\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"extraPlugins\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"value \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"+\"), \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"',font'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"      \", \"toolbars\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"        \", \"styles\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"          \", \"selections\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"\\n\", \"            \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"              \", \"name\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'text'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"              \", \"buttons\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getButtons\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'font'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//['FontFamily', 'FontSize']\"), \"\\n\", \"              \", \"test\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"SelectionTest\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"text\", \"\\n\", \"            \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"          \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), \"\\n\", \"        \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))))), React.createElement(\"div\", {\n    className: \"thumbnail\"\n  }, React.createElement(\"img\", {\n    className: \"img img-polaroid\",\n    src: \"/images/guides/ckeditor_plugins.gif\"\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If you want to add custom buttons to text selections, you can add them like this:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"javascript\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-javascript\"\n  }, \"  \", \"buttons\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getButtons\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'font'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'bold'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'italic'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"...\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"))))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If instead you want to add custom buttons with the existing buttons, you can add them like this:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"javascript\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-javascript\"\n  }, \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" selections \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"Selections\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" textButtons \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" selections\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"3\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"buttons\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// ['styles', 'bold, 'italic', 'underline', 'link', twitter']\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" customButtons \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" textButtons\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"concat\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'font'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// ['styles', 'bold, 'italic', 'underline', 'link', twitter', 'FontFamily', 'FontSize']\"), \"\\n\", \"\\n\", \"  \", \"selections\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"3\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"buttons \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getButtons\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"customButtons\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", \"  \", \"AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"editable\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'MyEditable'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", \"extraPlugins\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"Core\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token constant\"\n  }, \"ATTRS\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"extraPlugins\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"value \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"+\"), \" \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"',font'\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))))), React.createElement(\"div\", {\n    className: \"thumbnail\"\n  }, React.createElement(\"img\", {\n    className: \"img img-polaroid\",\n    src: \"/images/guides/ckeditor_ui_richcombo.png\"\n  })), React.createElement(\"article\", {\n    id: \"article3\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Use moono skin for visual compatibility`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `AlloyEditor's UI Bridge is in its early stages, so there are still some uncovered areas. For example, dialogs are not converted and will still appear with CKEditor's default look and feel.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Use the new `, React.createElement(\"strong\", null), `moono`, ` skin to close the gap between AlloyEditor's default look and feel and CKEditor's look and feel:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"  \", \"<link href=\\\"alloy-editor/assets/alloy-editor-moono-min.css\\\" rel=\\\"stylesheet\\\">\")))), React.createElement(\"div\", {\n    className: \"thumbnail\"\n  }, React.createElement(\"img\", {\n    className: \"img img-polaroid\",\n    src: \"/images/guides/ckeditor_moono.gif\"\n  })));\n});"}}},"pageContext":{"slug":"docs/use/use_ckeditor_plugins.html","previous":{"fields":{"layout":"feature","redirect":null,"slug":"docs/features/hline.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"layout":null,"redirect":null,"slug":"docs/use/how_to_use_it.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}