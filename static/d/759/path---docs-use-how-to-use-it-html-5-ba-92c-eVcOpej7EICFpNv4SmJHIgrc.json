{"data":{"mdx":{"excerpt":"The section below assumes that you are using the default UI built on React. If you're using your own custom UI, these steps will beâ€¦","timeToRead":1,"frontmatter":{"title":"How to use it?"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h6\",\n    components: components\n  }, `The section below assumes that you are using the default UI built on React. If you're using your own custom UI, these steps will be different.`), React.createElement(\"article\", {\n    id: \"article1\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Add AlloyEditor's CSS to the page`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"<link href=\\\"alloy-editor/assets/alloy-editor-ocean-min.css\\\" rel=\\\"stylesheet\\\"></link>\")))), React.createElement(\"article\", {\n    id: \"article2\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Add AlloyEditor's JS to the page`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `There are a `, React.createElement(\"strong\", null), `few ways`, ` to add the editor to the page:`), React.createElement(\"section\", null, React.createElement(\"span\", null, \"Add the whole editor with all UI on the page:\")), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"<script src=\\\"alloy-editor/alloy-editor-all-min.js\\\"></script>\")))), React.createElement(\"span\", null, \"Add it on the page, separating the CKEditor code from AlloyEditor. This is useful if you already use CKEditor in your project:\"), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"<script src=\\\"alloy-editor/alloy-editor-no-ckeditor-min.js\\\"></script>\")))), React.createElement(\"span\", null, \"Add it on the page, separating the React code from AlloyEditor. This is useful if you already use React in your project:\"), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"<script src=\\\"alloy-editor/alloy-editor-no-react-min.js\\\"></script>\")))), React.createElement(\"span\", null, \"If you use both React and CKEditor on your page, then just include AlloyEditor's core:\"), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"<script src=\\\"alloy-editor/alloy-editor-core-min.js\\\"></script>\")))), React.createElement(\"article\", {\n    id: \"article3\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Polyfilling older browsers`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `To work properly on older browsers such as IE11 you will need to ensure that you have the appropriate polyfills in your environment. These are:`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `In order to correctly display icons, an SVG polyfill such as `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"https://www.npmjs.com/package/svg4everybody\"\n    }\n  }, `svg4everybody`), `.`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `To provide `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"Symbol\"), `, which is needed by React, a polyfill like `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"https://www.npmjs.com/package/react-app-polyfill\"\n    }\n  }, `react-app-polyfill`), `.`)), React.createElement(\"article\", {\n    id: \"article4\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Invoke the static editable method of AlloyEditor`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"javascript\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-javascript\"\n  }, \"AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"editable\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myContentEditable'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))))), React.createElement(\"article\", {\n    id: \"article5\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Retrieve the content from the editor`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"javascript\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" alloyEditor \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"editable\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myContentEditable'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" content \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" alloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"get\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'nativeEditor'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getData\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))))));\n});"}}},"pageContext":{"slug":"docs/use/how_to_use_it.html","previous":{"fields":{"layout":null,"redirect":null,"slug":"docs/use/use_ckeditor_plugins.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"layout":"feature","redirect":null,"slug":"docs/features/image.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}