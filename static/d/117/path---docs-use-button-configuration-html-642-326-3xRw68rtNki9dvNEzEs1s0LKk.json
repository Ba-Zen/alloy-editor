{"data":{"mdx":{"excerpt":"You can pass configuration attributes to a button to change its default behavior, without affecting its position in the toolbar. You canâ€¦","timeToRead":1,"frontmatter":{"title":"Button configuration"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h6\",\n    components: components\n  }, `You can pass configuration attributes to a button to change its default behavior, without affecting its position in the toolbar. You can combine this with a custom toolbar configuration to have maximum flexibility in your configuration.`), React.createElement(\"article\", {\n    id: \"article1\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Passing configuration options to the buttons`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Buttons are configured via a common `, React.createElement(\"strong\", null), `buttonCfg`, ` property, like this:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"javascript\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-javascript\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" editor \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" AlloyEditor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"editable\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'editable'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"\\t\", \"buttonCfg\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"\\t\", \"    \", \"bold\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"\\t\", \"        \", \"tabIndex\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"1\"), \"\\n\", \"\\t\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"\\t\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The example above creates a configuration for a button named `, React.createElement(\"code\", null), `bold`, ` with a `, React.createElement(\"code\", null), `tabIndex`, ` property set to 1 (default 0). You must pass the button's static `, React.createElement(\"strong\", null), `key`, ` property (the button's name) in the configuration.`));\n});"}}},"pageContext":{"slug":"docs/use/button_configuration.html","previous":{"fields":{"layout":null,"redirect":null,"slug":"docs/develop/how-to-build-it.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"layout":"feature","redirect":null,"slug":"docs/features/camera.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}