{"data":{"mdx":{"excerpt":"AlloyEditor bundles a couple of gorgeous skins that you can use out of the box. However, if you would like to have a skin that reflects yourâ€¦","timeToRead":1,"frontmatter":{"title":"Create Skins"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h6\",\n    components: components\n  }, `AlloyEditor bundles a couple of gorgeous skins that you can use out of the box. However, if you would like to have a skin that reflects your app's look and feel, you can create your own skin.`), React.createElement(\"article\", {\n    id: \"article1\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Create skin folders`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Create a new directory under `, React.createElement(\"code\", null), `src/ui/react/assets/icons/`, ` with the name of your skin `, React.createElement(\"small\", null), `(e.g `, React.createElement(\"code\", null), `zebra`, `)`, `. This directory will contain all the required icons for your skin.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Create a new directory under `, React.createElement(\"code\", null), `src/ui/react/assets/sass/skin`, ` with the name of your skin `, React.createElement(\"small\", null), `(e.g `, React.createElement(\"code\", null), `zebra`, `)`, `. This directory will contain the styling for the skin.`), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `Note: You can use our `, React.createElement(\"a\", {\n    href: \"/docs/use/skins.html\"\n  }), `Skin Architecture`, ` to simplify the process of creating your own skin!`)), React.createElement(\"article\", {\n    id: \"article2\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Create your skin`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Place the icons for your skin inside your skin's `, React.createElement(\"code\", null), `svg`, ` folder. The icons placed in this folder are combined with the existing icons to generate your skin's icon font.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Create a `, React.createElement(\"code\", null), `main.scss`, ` file inside your skin folder. Add the styles to this file to create the overall look and feel for your skin.`), React.createElement(\"article\", {\n    id: \"article3\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Build the editor`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Follow the instructions in our `, React.createElement(\"a\", {\n    href: \"/docs/use/how_to_build_it.html\"\n  }), `How to build it`, ` guide to learn how to modify and build AlloyEditor. Your skin is automatically read when you build AlloyEditor:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/x-sh\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/x-sh\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/x-sh\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/x-sh\"\n  }, \"gulp [build]\")))), React.createElement(\"article\", {\n    id: \"article4\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Use your skin`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Add your skin's CSS file to the page. This overrides the default skins:`), React.createElement(\"div\", {\n    className: \"code-container\",\n    \"data-label\": \"text/html\"\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-copy\",\n    title: \"Copy\"\n  }, React.createElement(\"svg\", {\n    className: \"lexicon-icon\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"/images/icons/icons.svg#paste\"\n  }))), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"text/html\"\n  }, React.createElement(\"pre\", {\n    className: \"gatsby-code-text/html\"\n  }, React.createElement(\"code\", {\n    className: \"gatsby-code-text/html\"\n  }, \"<link href=\\\"alloy-editor/assets/alloy-editor-zebra-min.css\\\" rel=\\\"stylesheet\\\">\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `There you have it. AlloyEditor has a new beautiful look and feel!`));\n});"}}},"pageContext":{"slug":"docs/develop/create_skin.html","previous":{"fields":{"layout":"develop","redirect":null,"slug":"docs/develop/create_buttons.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"layout":"develop","redirect":null,"slug":"docs/develop/create_toolbars.html","mainPage":false},"code":{"scope":"/Users/greghurrell/code/alloy-editor/website/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}